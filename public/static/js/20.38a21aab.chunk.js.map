{"version":3,"sources":["pages/AccessManage/Account/AddOrEditAccountModel.js","pages/AccessManage/Account/Filter.js","pages/AccessManage/Account/AccountTable.js","pages/AccessManage/Account/index.js"],"names":["FormItem","es_form","Item","Option","es_select","formItemLayout","labelCol","span","wrapperCol","style","paddingLeft","AddOrEditAccount","state","roleList","sureAction","_this","props","form","validateFields","err","values","data","sourceCode","userName","name","sex","accountCode","roleId","rowInfo","id","res","success","message","hideModal","onOk","error","obj","this","setState","roleName","getFieldDecorator","editData","forEach","item","index","roles","_react_16_6_3_react_default","a","createElement","MainModal","okText","title","visible","onCancel","cancelText","Object","assign","label","rules","required","initialValue","username","input","placeholder","width","value","marginBottom","onChange","roleIdChange","length","map","key","Component","AddOrEditAccountModel","create","Filter","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","account","code","role","addModalShow","accountChange","bind","assertThisInitialized","nameChange","codeChange","roleChange","handleSearch","showAddModal","hideAddModal","e","target","changeFilter","msg","remark","createTime","updateTime","newRoleList","push","unshift","Fragment","display","marginLeft","marginRight","Filter_Option","es_button","type","onClick","margin","icon","Account_AddOrEditAccountModel","React","AccountTable","columns","dataIndex","render","text","record","color","showEdit","cursor","initcode","deleteUser","pagination","current","pageSize","total","editShow","handleTableChange","getData","hideEdit","reloadTable","page","_this2","totalPage","rows","password","authorities","accountNonExpired","accountNonLocked","credentialsNonExpired","enabled","userId","menus","newData","sortIndex","nextProps","_this3","nextState","table","dataSource","bordered","marginTop","Account","card","Account_Filter","Account_AccountTable"],"mappings":"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","file":"static/js/20.38a21aab.chunk.js","sourcesContent":["/**\r\n * Created by hutao on 2018/8/31.\r\n * 新增或编辑账户管理\r\n */\r\nimport React, { Component } from 'react';\r\nimport { Form, Input, Select, message } from 'antd';\r\nimport MainModal from '@/common/components/MainModal';\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\n//表单布局\r\nconst formItemLayout = {\r\n    labelCol: { span: 6 },\r\n    wrapperCol: { span: 17, style: { paddingLeft: '10px' } },\r\n};\r\n\r\nclass AddOrEditAccount extends Component {\r\n    state = {\r\n        roleList: [],\r\n    }\r\n    componentWillMount() {\r\n        // 获取用户角色列表信息\r\n        const roleList = [\r\n            {\r\n                \"roleId\": 1,\r\n                \"roleName\": \"管理员4\",\r\n            },\r\n            {\r\n                \"roleId\": 10,\r\n                \"roleName\": \"学生\",\r\n            },\r\n            {\r\n                \"roleId\": 20,\r\n                \"roleName\": \"教师123\",\r\n            },\r\n            {\r\n                \"roleId\": 29,\r\n                \"roleName\": \"超级管理员\",\r\n            }\r\n        ];\r\n        this.setState({\r\n            roleList\r\n        })\r\n    }\r\n    sureAction = () => {\r\n        //表单验证\r\n        this.props.form.validateFields(\r\n            (err, values) => {\r\n                if (!err) {\r\n                    let { userName, name, sex, accountCode, roleId } = values;\r\n                    \r\n                    // let reqUrl = \"/bigdata/system/user/save\";\r\n                    let data = {\r\n                        sourceCode: \"pc\", // 调用端：(默认PC)\r\n                        userName, // 账户名 string\r\n                        name, // 姓名 string\r\n                        sex: sex - 0, // 性别 num init ， state中存储的是string类型， 这里简单转换一下\r\n                        accountCode, // 学号/教工号 string\r\n                        roleId: roleId - 0, // 用户角色 num init ， state中存储的是string类型， 这里简单转换一下\r\n                    }\r\n                    if (this.props.rowInfo) {\r\n                        // reqUrl = \"/bigdata/system/user/update\";\r\n                        data.id = this.props.rowInfo.id;\r\n                    }\r\n\r\n                    //保存处理\r\n                    let res = {\r\n                        success: true\r\n                    }\r\n                    if (res.success) {\r\n                        message.success(\"保存成功！！！\");\r\n                        this.props.hideModal();\r\n                        this.props.onOk();\r\n                    } else {\r\n                        message.error(res.obj);\r\n                    }\r\n                }\r\n            },\r\n        );\r\n    }\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        let editData = this.props.rowInfo;\r\n        let roleId;\r\n        if (editData) {\r\n            this.state.roleList.forEach((item, index) => {\r\n                if (item.roleName === editData.roles) {\r\n                    roleId = item.roleId\r\n                }\r\n            });\r\n        }\r\n        return (\r\n            <MainModal\r\n                okText=\"确定\"\r\n                title={this.props.title}\r\n                visible={true}\r\n                onOk={this.sureAction}\r\n                onCancel={this.props.hideModal}\r\n                cancelText=\"取消\"\r\n            >\r\n                <FormItem {...formItemLayout} label=\"账户名称\">\r\n                    {getFieldDecorator('userName', {\r\n                        rules: [{\r\n                            required: true,\r\n                            message: '请输入账户名称'\r\n                        }],\r\n                        initialValue: editData && editData.username\r\n                    })(\r\n                        <Input placeholder=\"请输入账户名称\" />\r\n                    )}\r\n                </FormItem>\r\n                <FormItem {...formItemLayout} label=\"姓名\">\r\n                    {getFieldDecorator('name', {\r\n                        rules: [{\r\n                            required: true,\r\n                            message: '请输入姓名'\r\n                        }],\r\n                        initialValue: editData && editData.name\r\n                    })(\r\n                        <Input placeholder=\"请输入姓名\" />\r\n                    )}\r\n                </FormItem>\r\n                <FormItem {...formItemLayout} label=\"性别\">\r\n                    {getFieldDecorator('sex', {\r\n                        rules: [{\r\n                            required: true,\r\n                            message: '请输入性别'\r\n                        }],\r\n                        initialValue: editData && editData.sex\r\n                    })(\r\n                        <Select placeholder=\"请选择性别\" style={{ width: \"100%\" }}>\r\n                            <Option value={1}>男</Option>\r\n                            <Option value={2}>女</Option>\r\n                        </Select>\r\n                    )}\r\n                </FormItem>\r\n                <FormItem {...formItemLayout} label=\"学号/教工号\">\r\n                    {getFieldDecorator('accountCode', {\r\n                        rules: [{\r\n                            required: true,\r\n                            message: '请输入学号/教工号'\r\n                        }],\r\n                        initialValue: editData && editData.accountCode\r\n                    })(\r\n                        <Input placeholder=\"请输入学号/教工号\" />\r\n                    )}\r\n                </FormItem>\r\n                <FormItem {...formItemLayout} label=\"用户角色\">\r\n                    {getFieldDecorator('roleId', {\r\n                        rules: [{\r\n                            required: true,\r\n                            message: '请输入用户角色'\r\n                        }],\r\n                        initialValue: roleId\r\n                    })(\r\n                        <Select placeholder=\"请选择用户角色\" style={{ width: \"100%\", marginBottom: 8 }} onChange={this.roleIdChange}>\r\n                            {this.state.roleList.length > 0 ? this.state.roleList.map((item) => {\r\n                                return (\r\n                                    <Option value={item.roleId} key={item.roleId}>{item.roleName}</Option>\r\n                                )\r\n                            }\r\n                            ) : null\r\n                            }\r\n                        </Select>\r\n                    )}\r\n                </FormItem>\r\n            </MainModal>\r\n        )\r\n    }\r\n}\r\n\r\nconst AddOrEditAccountModel = Form.create()(AddOrEditAccount);\r\nexport default AddOrEditAccountModel;","import React from 'react';\r\nimport { Input, Select, Button } from 'antd';\r\nimport AddOrEditAccountModel from './AddOrEditAccountModel';\r\n\r\nconst Option = Select.Option;\r\n\r\nclass Filter extends React.Component{\r\n\t\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\taccount: \"\", // 账户\r\n\t\t\tname: \"\", // 名称\r\n\t\t\tcode: \"\", // 学号/教工号\r\n\t\t\trole:\"\", // 账户角色\r\n\t\t\troleList: [], // 账户角色下拉\r\n            // 显示隐藏创建新用户弹出框\r\n            addModalShow: false, \r\n\t\t};\r\n\t\tthis.accountChange = this.accountChange.bind(this); // 账户名称\r\n\t\tthis.nameChange = this.nameChange.bind(this); // 姓名\r\n\t\tthis.codeChange = this.codeChange.bind(this); // 学号/教工号\r\n\t\tthis.roleChange = this.roleChange.bind(this); // 选择角色\r\n\t\tthis.handleSearch = this.handleSearch.bind(this); // 搜索\r\n\t\tthis.showAddModal = this.showAddModal.bind(this); // 显示创建新用户弹出框\r\n\t\tthis.hideAddModal = this.hideAddModal.bind(this); // 显示创建新用户弹出框\r\n\t}\r\n\t\r\n\t // 账户名称\r\n\taccountChange (e) {\r\n\t\tthis.setState({\r\n\t\t\taccount:e.target.value\r\n\t\t})\r\n\t}\r\n\t\r\n\t // 姓名\r\n\tnameChange (e) {\r\n\t\tthis.setState({\r\n\t\t\tname:e.target.value\r\n\t\t})\r\n\t}\r\n\t\r\n\t // 学号/教工号\r\n\tcodeChange (e) {\r\n\t\tthis.setState({\r\n\t\t\tcode:e.target.value\r\n\t\t})\r\n\t}\r\n\t\r\n\t// 选择角色\r\n\troleChange(value){\r\n\t\tthis.setState({\r\n\t\t\trole: value\r\n\t\t})\r\n\t}\r\n\t\r\n\t// 搜索\r\n\thandleSearch(){\r\n\t\tconst obj = { // 键名按照后端数据键名给\r\n\t\t\tusername: this.state.account, // 账户\r\n\t\t\tname: this.state.name, // 名称\r\n\t\t\taccountCode: this.state.code, // 学号/教工号\r\n\t\t\troleId: this.state.role // 账户角色\r\n\t\t};\r\n\t\tthis.props.changeFilter(obj);\r\n\t}\r\n\t\r\n\t// 显示创建用户弹出框\r\n\tshowAddModal(){\r\n\t\tthis.setState({\r\n\t\t\taddModalShow: true,\r\n\t\t})\r\n\t}\r\n\t\r\n\t// 隐藏创建用户弹出框\r\n\thideAddModal(){\r\n\t\tthis.setState({\r\n\t\t\taddModalShow: false\r\n\t\t})\r\n\t}\r\n\t\r\n\tcomponentDidMount(){\r\n\t\t// 获取账户角色下拉选项数据,需要请求数据\r\n\r\n\t\tconst res = {\r\n\t\t\t\"success\": true,\r\n\t\t\t\"msg\": \"成功\",\r\n\t\t\t\"obj\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 1,\r\n\t\t\t\t\t\"roleName\": \"管理员4\",\r\n\t\t\t\t\t\"remark\": \"管理员\",\r\n\t\t\t\t\t\"createTime\": 1516431152000,\r\n\t\t\t\t\t\"updateTime\": 1536045400000\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 10,\r\n\t\t\t\t\t\"roleName\": \"学生\",\r\n\t\t\t\t\t\"remark\": \"\",\r\n\t\t\t\t\t\"createTime\": 1519810586000,\r\n\t\t\t\t\t\"updateTime\": 1519811232000\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 20,\r\n\t\t\t\t\t\"roleName\": \"教师123\",\r\n\t\t\t\t\t\"remark\": \"教师1\",\r\n\t\t\t\t\t\"createTime\": 1524736133000,\r\n\t\t\t\t\t\"updateTime\": 1524736319000\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 29,\r\n\t\t\t\t\t\"roleName\": \"超级管理员\",\r\n\t\t\t\t\t\"remark\": \"拥有权限管理模块的设置权限不包含菜单\",\r\n\t\t\t\t\t\"createTime\": 1536549032000,\r\n\t\t\t\t\t\"updateTime\": 1536550539000\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\tif (res.success) {\r\n\t\t\tlet newRoleList=[];\r\n\t\t\tres.obj.forEach(\r\n\t\t\t\t(item) => {\r\n\t\t\t\t\tnewRoleList.push({\r\n\t\t\t\t\t\tlabel: item.roleName,\r\n\t\t\t\t\t\tvalue: item.id\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tnewRoleList.unshift({ // 加入全部选项\r\n\t\t\t\tlabel: \"全部\",\r\n\t\t\t\tvalue: \"\"\r\n\t\t\t})\r\n\t\t\tthis.setState({\r\n\t\t\t\troleList: newRoleList\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\t\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<span>账户</span>\r\n\t\t\t\t\r\n\t\t\t\t<Input \r\n\t\t\t\t\tvalue={this.state.account} \r\n\t\t\t\t\tonChange={this.accountChange} \r\n\t\t\t\t\tplaceholder=\"请输入账户名称\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: 130, \r\n\t\t\t\t\t\tdisplay: \"inline-block\",\r\n\t\t\t\t\t\tmarginLeft: 10, \r\n\t\t\t\t\t\tmarginRight: 10\r\n\t\t\t\t\t}} \r\n\t\t\t\t/>\r\n\t\t\t\t\r\n\t\t\t\t<span>姓名</span>\r\n\t\t\t\t<Input \r\n\t\t\t\t\tvalue={this.state.name} \r\n\t\t\t\t\tonChange={this.nameChange} \r\n\t\t\t\t\tplaceholder=\"请输入姓名\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: 130, \r\n\t\t\t\t\t\tdisplay: \"inline-block\",\r\n\t\t\t\t\t\tmarginLeft: 10, \r\n\t\t\t\t\t\tmarginRight: 10\r\n\t\t\t\t\t}} \r\n\t\t\t\t/>\r\n\t\t\t\t\r\n\t\t\t\t<span>学号/教工号</span>\r\n\t\t\t\t<Input \r\n\t\t\t\t\tvalue={this.state.code} \r\n\t\t\t\t\tonChange={this.codeChange} \r\n\t\t\t\t\tplaceholder=\"请输入学号/教工号\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: 150, \r\n\t\t\t\t\t\tdisplay: \"inline-block\",\r\n\t\t\t\t\t\tmarginLeft: 10, \r\n\t\t\t\t\t\tmarginRight: 10\r\n\t\t\t\t\t}} \r\n\t\t\t\t/>\r\n\t\t\t\t\r\n\t\t\t\t<span style={{marginRight: 10}}>账户角色</span>\r\n\t\t\t\t<Select placeholder='请选择账户角色' style={{ width: 150 }} onChange={this.roleChange}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state.roleList.length >0\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t\tthis.state.roleList.map(\r\n\t\t\t\t\t\t\t(item)=>{\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Option value={item.value} key={item.value}>{item.label}</Option>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\tnull\r\n\t\t\t\t\t}\r\n\t\t\t    </Select>\r\n\t\t\t\t\r\n\t\t\t\t<Button type=\"primary\" onClick={this.handleSearch} style={{margin: \"0px 10px\"}}>搜索</Button>\r\n\t\t\t\t\r\n\t\t\t\t<Button type=\"primary\" icon=\"plus\" onClick={this.showAddModal}>创建新用户</Button>\r\n\t\t\t\t\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.state.addModalShow\r\n\t\t\t\t\t?\r\n\t\t\t\t\t<AddOrEditAccountModel \r\n\t\t\t\t\t\ttitle={'新增用户'}\r\n\t\t\t\t\t\tonOk = {this.handleSearch}\r\n\t\t\t\t\t\thideModal = {this.hideAddModal}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\tnull\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { Table, message } from 'antd';\r\nimport AddOrEditAccountModel from './AddOrEditAccountModel';\r\n\r\nclass AccountTable extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\t// table表头设置\r\n\t\t\tcolumns: [\r\n                {\r\n                    title: '序号',\r\n                    dataIndex: 'sortIndex',\r\n                    width: \"6%\"\r\n                }, {\r\n                    title: '账户名',\r\n                    dataIndex: 'username',\r\n                    width: \"10%\",\r\n\t\t\t        render: (text) => {\r\n\t\t\t        \treturn (\r\n\t\t\t        \t\t<span title={text}>{text}</span>\r\n\t\t\t        \t)\r\n\t\t\t        }\r\n                }, {\r\n                    title: '姓名',\r\n                    dataIndex: 'name'\r\n                }, {\r\n                    title: '性别',\r\n                    dataIndex: 'sex',\r\n                    render: (text)=> {\r\n                    \tif (text === 1) {\r\n                    \t\treturn (\r\n                    \t\t\t<span>男</span>\r\n                    \t\t)\r\n                    \t} else if (text === 2) {\r\n                    \t\treturn (\r\n                    \t\t\t<span>女</span>\r\n                    \t\t)\r\n                    \t} else {\r\n                    \t\treturn (\r\n                    \t\t\t<span>-</span>\r\n                    \t\t)\r\n                    \t}\r\n                    }\r\n                }, {\r\n                    title: '学工/教工号',\r\n                    dataIndex: 'accountCode'\r\n                }, {\r\n                    title: '角色',\r\n                    dataIndex: 'roles'\r\n                }, {\r\n                    title: '操作',\r\n                    dataIndex: 'menus',\r\n                    width: \"25%\",\r\n                    render: (text, record)=> {\r\n                \t\treturn (\r\n                \t\t\t<span style={{color: \"#1890ff\"}}>\r\n\t                \t\t\t<span\r\n\t                \t\t\t\tonClick={()=>{this.showEdit(record)}}\r\n\t                \t\t\t\tstyle={{\r\n\t                \t\t\t\t\tmarginRight: 10,\r\n\t                \t\t\t\t\tcursor: \"pointer\"\r\n\t                \t\t\t\t}}>编辑\r\n\t                \t\t\t</span>|\r\n\t                \t\t\t\r\n\t                \t\t\t<span\r\n\t                \t\t\t\tonClick={()=>{this.initcode(record)}}\r\n\t                \t\t\t\tstyle={{\r\n\t                \t\t\t\t\tmarginRight: 10, \r\n\t                \t\t\t\t\tmarginLeft: 10, \r\n\t                \t\t\t\t\tcursor: \"pointer\"\r\n\t                \t\t\t\t}}>初始化密码\r\n\t                \t\t\t</span>|\r\n\t                \t\t\t\r\n\t                \t\t\t<span\r\n\t                \t\t\t\tonClick={()=>{this.deleteUser(record)}}\r\n\t                \t\t\t\tstyle={{\r\n\t                \t\t\t\t\tmarginLeft: 10, \r\n\t                \t\t\t\t\tcursor: \"pointer\"\r\n\t                \t\t\t\t}}>删除\r\n\t                \t\t\t</span>\r\n                \t\t\t</span>\r\n                \t\t)\r\n                    }\r\n                }\r\n            ],\r\n            // tabel数据源\r\n            data: [ // table数据结构形式\r\n//              {\r\n//                 key: '1',\r\n//                 sortIndex: \"1\",\r\n//                 username: \"admin\",\r\n//                 name: '胡彦斌',\r\n//                 sex: \"1\",\r\n//                 accountCode: \"111111\",\r\n//                 roles: \"普通管理员\",\r\n//                 menus: null\r\n//              }\r\n            ],\r\n            // 分页设置\r\n            pagination: {\r\n                current: 1,\r\n                pageSize: 10,\r\n                total: null\r\n            },\r\n            // 显示隐藏编辑弹出框\r\n            editShow: false,\r\n            // 传递给子组件（编辑弹出框）的数据（编辑行的所有数据）\r\n            rowInfo: \"\"\r\n\t\t};\r\n\t\tthis.handleTableChange = this.handleTableChange.bind(this); // 分页操作\r\n\t    this.getData = this.getData.bind(this); // 请求table数据\r\n\t    this.initcode = this.initcode.bind(this); // 初始化密码\r\n\t    this.deleteUser = this.deleteUser.bind(this); // 删除用户\r\n\t    this.showEdit = this.showEdit.bind(this); // 显示编辑弹出框\r\n\t    this.hideEdit = this.hideEdit.bind(this); // 隐藏编辑弹出框\r\n\t    this.reloadTable = this.reloadTable.bind(this); // 重新加载表单， 主要用于子组件中操作完成之后重新载入当前页面的table\r\n\t}\r\n\t\r\n\t// 分页操作\r\n\thandleTableChange(page) {\r\n        const {current, pageSize, total} = page;\r\n        this.setState(\r\n            ()=>{\r\n                return {\r\n                    pagination: {\r\n                        current,\r\n                        pageSize,\r\n                        total\r\n                    }\r\n                }\r\n            },\r\n            () => {\r\n                this.getData()\r\n            }\r\n        )\r\n    }\r\n\t\r\n\t// 重新加载表单， 主要用于子组件中操作完成之后重新载入当前页面的table\r\n\treloadTable() {\r\n\t\tlet page = {\r\n\t\t\tcurrent: this.state.pagination.current,\r\n\t\t\tpageSize: this.state.pagination.pageSize,\r\n\t\t\ttotal: this.state.pagination.total\r\n\t\t};\r\n\t\tthis.handleTableChange(page);\r\n\t}\r\n\t\r\n\t\r\n\tgetData(){\r\n\t\t// 父级组件传递进来的参数\r\n\t\t// const {sourceCode, username, name, accountCode, roleId} = this.props;\r\n\t\tconst res = {\r\n\t\t\t\"success\": true,\r\n\t\t\t\"msg\": \"成功\",\r\n\t\t\t\"obj\": {\r\n\t\t\t\t\"page\": 1,\r\n\t\t\t\t\"pageSize\": 10,\r\n\t\t\t\t\"totalPage\": 3,\r\n\t\t\t\t\"total\": 23,\r\n\t\t\t\t\"rows\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"password\": \"0c8a80688b671e290381acb56b1bd4e9\",\r\n\t\t\t\t\t\t\"username\": \"admin\",\r\n\t\t\t\t\t\t\"authorities\": [],\r\n\t\t\t\t\t\t\"accountNonExpired\": true,\r\n\t\t\t\t\t\t\"accountNonLocked\": true,\r\n\t\t\t\t\t\t\"credentialsNonExpired\": true,\r\n\t\t\t\t\t\t\"enabled\": true,\r\n\t\t\t\t\t\t\"id\": 1,\r\n\t\t\t\t\t\t\"userId\": null,\r\n\t\t\t\t\t\t\"accountCode\": \"11111111\",\r\n\t\t\t\t\t\t\"name\": \"Administrator\",\r\n\t\t\t\t\t\t\"sex\": 1,\r\n\t\t\t\t\t\t\"roles\": \"超级管理员\",\r\n\t\t\t\t\t\t\"menus\": null\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"password\": \"0c8a80688b671e290381acb56b1bd4e9\",\r\n\t\t\t\t\t\t\"username\": \"liujie\",\r\n\t\t\t\t\t\t\"authorities\": [],\r\n\t\t\t\t\t\t\"accountNonExpired\": true,\r\n\t\t\t\t\t\t\"accountNonLocked\": true,\r\n\t\t\t\t\t\t\"credentialsNonExpired\": true,\r\n\t\t\t\t\t\t\"enabled\": true,\r\n\t\t\t\t\t\t\"id\": 30,\r\n\t\t\t\t\t\t\"userId\": null,\r\n\t\t\t\t\t\t\"accountCode\": \"111\",\r\n\t\t\t\t\t\t\"name\": \"刘杰\",\r\n\t\t\t\t\t\t\"sex\": 2,\r\n\t\t\t\t\t\t\"roles\": \"管理员4\",\r\n\t\t\t\t\t\t\"menus\": null\r\n\t\t\t\t\t},\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t\"errorCode\": null\r\n\t\t}\r\n\t\tif(res.success && res.obj && res.obj.rows.length > 0){\r\n\t\t\t// 后端返回的数据加上key值， antd组件所需，\r\n\t\t\tlet newData = res.obj.rows;\r\n\t\t\tnewData.forEach(\r\n\t\t\t\t(item, index) => {\r\n\t\t\t\t\titem.key= item.id;\r\n\t\t\t\t\t// 后端数据并不返回排序， 这里循环加上序号\r\n\t\t\t\t\titem.sortIndex = (index - 0) + 1;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\t// 更新本地数据源， 以及分页设置\r\n\t\t\tthis.setState({\r\n\t\t\t\tdata: newData,\r\n\t\t\t\tpagination: {\r\n\t\t\t\t\tcurrent: res.obj.page,\r\n\t\t\t\t\tpageSize: res.obj.pageSize,\r\n\t\t\t\t\ttotal: res.obj.total\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t} else { // 如果请求失败， 数据源重置\r\n\t\t\tthis.setState({\r\n\t\t\t\tdata:[],\r\n\t\t\t\tpagination: {\r\n\t\t\t\t\tcurrent: 1,\r\n\t\t\t\t\tpageSize: 10,\r\n\t\t\t\t\ttotal: null\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n        \r\n    }\r\n\t\r\n\t// 点击编辑，显示编辑弹出框\r\n\tshowEdit(record){\r\n\t\tthis.setState({\r\n\t\t\teditShow: true,\r\n\t\t\trowInfo: record\r\n\t\t})\r\n\t}\r\n\t\r\n\t// 隐藏/ 卸载编辑弹出框\r\n\thideEdit(){\r\n\t\tthis.setState({\r\n\t\t\teditShow: false\r\n\t\t})\r\n\t}\r\n\t\r\n\t// 初始化密码\r\n\tinitcode(record) {\r\n\t\t//初始化操作\r\n\t\tmessage.success(\"初始化密码成功， 初始密码： !23qaz\")\r\n\t}\r\n\t\r\n\t// 删除用户\r\n\tdeleteUser(record){\r\n\t\t//删除操作\r\n\r\n\t}\r\n\t\r\n\t// props参数发生时， table重置， 重新加载\r\n\tcomponentWillReceiveProps(nextProps){\r\n        if(nextProps !== this.props){\r\n            this.setState(\r\n                () => {\r\n                    return {\r\n                        data:[],\r\n                        pagination: {\r\n                            current: 1,\r\n                            pageSize: 10,\r\n                            total: null\r\n                        }\r\n                    }\r\n                },\r\n                () => {\r\n                    this.getData()\r\n                }\r\n            )\r\n        }\r\n    }\r\n\t\r\n\t// 性能优化， props改变不继续render， 只有当state发生变化才继续render\r\n\tshouldComponentUpdate(nextProps, nextState) {\r\n        if (nextState !== this.state) {\r\n            return true\r\n        } else {\r\n            return false            \r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getData() // 请求table数据\r\n    }\r\n        \r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Table\r\n\t                columns={this.state.columns}\r\n\t                dataSource={this.state.data}\r\n\t                pagination={this.state.pagination}\r\n\t                onChange={this.handleTableChange}\r\n\t                bordered={true}\r\n\t                style={{\r\n\t                \tmarginTop: 20\r\n\t                }}\r\n\t            />\r\n\t\t\t\t\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.state.editShow\r\n\t\t\t\t\t?\r\n\t\t\t\t\t<AddOrEditAccountModel \r\n\t\t\t\t\t\ttitle={'编辑用户'}\r\n\t\t\t\t\t\trowInfo={this.state.rowInfo}\r\n\t\t\t\t\t\thideModal={this.hideEdit} \r\n\t\t\t\t\t\tonOk={this.reloadTable}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\tnull\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AccountTable;","import React from 'react';\r\nimport { Card } from 'antd';\r\nimport Filter from './Filter'; // 顶部过滤器\r\nimport AccountTable from './AccountTable'; // 本页table组件\r\n\r\nclass Account extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state={ // 参数命名根据后端键值对名称而来\r\n\t\t\tsourceCode: \"pc\", // 端\r\n\t\t\tusername: \"\", // 账户\r\n\t\t\tname: \"\", // 名称\r\n\t\t\taccountCode: \"\", // 学号/教工号\r\n\t\t\troleId:\"\" // 账户角色\r\n\t\t};\r\n\t\tthis.changeFilter = this.changeFilter.bind(this); // 从子组件（过滤器Filter）中更新获取后端请求的最新参数， 并传给table组件\r\n\t}\r\n\t\r\n\t// 从子组件（过滤器Filter）中更新获取后端请求的最新参数， 并传给table组件\r\n\tchangeFilter(obj){\r\n\t\tthis.setState({\r\n\t\t\tusername: obj.username, // 账户\r\n\t\t\tname: obj.name, // 名称\r\n\t\t\taccountCode: obj.accountCode, // 学号/教工号\r\n\t\t\troleId:obj.roleId // 账户角色\r\n\t\t})\r\n\t}\r\n\t\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<Card style={{margin: \"15px 20px\"}} title='账户管理'>\r\n\t\t\t\t<Filter changeFilter={this.changeFilter} />\r\n\t\t\t\t<AccountTable\r\n\t\t\t\t\tsourceCode={this.state.sourceCode}\r\n\t\t\t\t\tusername={this.state.username}\r\n\t\t\t\t\tname={this.state.name}\r\n\t\t\t\t\taccountCode={this.state.accountCode}\r\n\t\t\t\t\troleId={this.state.roleId}\r\n\t\t\t\t/>\r\n\t\t\t</Card>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Account;\r\n"],"sourceRoot":""}