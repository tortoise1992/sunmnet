{"version":3,"sources":["../static/js/18.993907b8.chunk.js","pages/Map/BMap/index.js","common/components/Bmap/QianXi.js","../node_modules/_mapv@2.0.20@mapv/build/mapv.js","common/components/Bmap/china.js"],"names":["webpackJsonp","1140","module","__webpack_exports__","__webpack_require__","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","n","__WEBPACK_IMPORTED_MODULE_1_antd__","__WEBPACK_IMPORTED_MODULE_2__common_components_Bmap_QianXi__","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","TabPane","Tabs","BMap","_Component","_ref","_temp","_this","_ret","this","_len","arguments","args","Array","_key","getPrototypeOf","apply","concat","state","datas","datas2","getDatas","to","from","count","setState","getDatas2","a","createElement","className","Item","defaultActiveKey","tab","style","marginBottom","onClick","Component","1141","__WEBPACK_IMPORTED_MODULE_1_mapv__","__WEBPACK_IMPORTED_MODULE_2__china__","__WEBPACK_IMPORTED_MODULE_3__utils__","styleJson","featureType","elementType","stylers","color","lightness","visibility","window","QianXi","makeMap","data","map","Map","mapId","enableMapClick","centerAndZoom","Point","setMapStyle","geojsonOptions","gradient","0","1","max","draw","geojsonDataSet","geojson","getDataSet","chinajson","qianxi","DataSet","qianxiData","get","lineData","pointData","textData","timeData","citys","fromCenter","utilCityCenter","getCenterByCityName","toCenter","push","geometry","type","coordinates","lng","lat","text","curve","utilCurve","getPoints","j","time","Math","random","ds","filter","item","name","baiduMapLayer","textDataSet","textOptions","font","fillStyle","shadowColor","shadowBlue","zIndex","shadowBlur","lineDataSet","lineOptions","strokeStyle","lineWidth","pointOptions","size","pointDataSet","timeDataSet","timeOptions","animation","stepsRange","start","end","trails","duration","Date","getTime","nextProps","_this2","isObjectValueEqual","setTimeout","id","height","1142","exports","process","global","factory","Event","_subscribers","getCenter","g","split","parseFloat","options","bind","_options","_data","add","hex_corner","center","angle_deg","angle_rad","PI","x","cos","y","sin","context","result","lineTo","Canvas","width","canvas","document","Intensity","0.25","0.55","0.85","maxSize","minSize","min","initPalette","createCircle","r2","circle","getContext","shadowOffsetX","shadowOffsetY","beginPath","arc","closePath","fill","colorize","pixels","maxOpacity","len","drawGray","dataSet","_size","undefined","intensity","circleHalfWidth","circleHalfHeight","dataOrderByAlpha","forEach","index","alpha","toFixed","isNaN","withoutAlpha","globalAlpha","getColor","_coordinates","drawImage","pathSimple","stroke","draw$1","strength","shadowCanvas","shadowContext","scale","devicePixelRatio","save","absolute","colored","getImageData","putImageData","restore","hex_corner$1","createShader","gl","src","shader","shaderSource","compileShader","initShaders","vs_source","fs_source","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","glProgram","createProgram","attachShader","linkProgram","useProgram","getColorData","tmpCanvas","tmpCtx","fillRect","draw$2","program","vs_s","fs_s","enable","BLEND","blendFunc","SRC_ALPHA","ONE","clear","COLOR_BUFFER_BIT","halfCanvasWidth","halfCanvasHeight","vertexBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","a_Position","getAttribLocation","vertexAttribPointer","FLOAT","enableVertexAttribArray","uFragColor","getUniformLocation","uniform4f","_geometry","verticesData","vertices","Float32Array","bufferData","STATIC_DRAW","drawArrays","LINE_STRIP","draw$3","vs_s$1","fs_s$1","a_PointSize","vertexAttrib1f","POINTS","earcut","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","triangles","minX","minY","maxX","maxY","eliminateHoles","earcutLinked","clockwise","last","signedArea","insertNode","equals","next","removeNode","filterPoints","again","p","steiner","area","prev","ear","pass","indexCurve","stop","isEarHashed","isEar","cureLocalIntersections","splitEarcut","b","c","pointInTriangle","minTX","minTY","maxTX","maxTY","minZ","zOrder","maxZ","nextZ","z","prevZ","intersects","locallyInside","isValidDiagonal","splitPolygon","list","queue","getLeftmost","sort","compareX","eliminateHole","hole","findHoleBridge","m","hx","hy","qx","Infinity","tan","mx","my","tanMin","abs","sortLinked","q","e","tail","numMerges","pSize","qSize","inSize","leftmost","ax","ay","bx","by","cx","cy","px","py","intersectsPolygon","middleInside","r","p1","p2","q1","q2","inside","a2","Node","b2","an","bp","sum","draw$4","viewport","vs_s$2","fs_s$2","ELEMENT_ARRAY_BUFFER","verticesArr","trianglesArr","indexOffset","flatten","Uint16Array","drawElements","TRIANGLES","UNSIGNED_SHORT","holes","dimensions","getCurvePoints","points","curvePoints","getCurveByTwoPoints","obj1","obj2","t","h","h2","lat3","lng3","t2","B1","B2","B3","curveCoordinates","inc","lat1","lat2","lng1","lng2","atan","Category","splitList","other","Choropleth","CanvasLayer","paneName","mixBlendMode","enableMassClear","_map","_lastDrawTime","show","hasOverlay","rects","overlay","isRectOverlay","rect1","rect2","minx","ne","miny","sw","maxx","maxy","animate","requestAnimationFrame","TWEEN","update","CanvasLayer$2","opt_options","simpleBindShim","thisArg","func","isAdded_","isAnimated_","paneName_","DEFAULT_PANE_NAME_","updateHandler_","resizeHandler_","topLeft_","centerListener_","resizeListener_","needsResize_","requestAnimationFrameId_","position","top","left","pointerEvents","canvasCssWidth_","canvasCssHeight_","resolutionScale_","repositionFunction_","repositionCanvas_","resizeFunction_","resize_","requestUpdateFunction_","update_","setOptions","clearRect","resolutionScale$1","on","event","callback","subscribers","off","splice","_trigger","params","senderId","Error","subscriber","citycenter","municipalities","provinces","cities","cityCenter","getProvinceNameByCityName","provinceName","replace","classCallCheck","createClass","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getter","inherits","possibleConstructorReturn","isArray","substr","_dataCache","JSON","parse","stringify","reset","newData","transferCoordinate","fromColumn","toColumn","set","_set","remove","cbk","condition","flag","transferFn","toColumnName","getPolygon","newCoordinates","coordinate","newcoordinate","polygon","initGeometry","city","getMax","columnName","getSum","getMin","getUnique","maps","drawDataSet","symbol","bigData","moveTo","rect","drawPolygon","console","log","drawSimple","_fillStyle","_strokeStyle","_lineWidth","setMax","setMin","setMaxSize","setMinSize","paletteCtx","lineGradient","createLinearGradient","addColorStop","imageData","floor","getSize","getLegend","global$1","drawHeatmap","drawGrid","grids","offset","gridKey","label","textWidth","measureText","fillText","drawHoneycomb","dx","dy","binsById","pj","round","pi","py1","px1","pi2","pj2","px2","py2","bin","join","line","point","deviation","polygonArea","trianglesArea","holeIndex","d","webglDrawSimple","ForceEdgeBundling","vector_dot_product","edge_as_vector","P","data_nodes","source","edge_length","sqrt","pow","custom_edge_length","edge_midpoint","compute_divided_edge_length","e_idx","subdivision_points_for_edge","euclidean_distance","project_point_on_line","Q","L","initialize_edge_subdivisions","data_edges","P_initial","initialize_compatibility_lists","compatibility_list_for_edge","filter_self_loops","edgelist","filtered_edge_list","apply_spring_force","kP","crnt","apply_electrostatic_force","S","sum_of_forces","compatible_edges_list","oe","force","eps","diff","apply_resulting_forces_on_subdivision_points","K","resulting_forces_for_subdivision_points","resulting_force","spring_force","electrostatic_force","update_edge_divisions","divided_edge_length","segment_length","current_segment_length","new_subdivision_points","old_segment_length","percent_position","new_subdivision_point_x","new_subdivision_point_y","angle_compatibility","scale_compatibility","lavg","position_compatibility","edge_visibility","I0","I1","midI","midP","visibility_compatibility","compatibility_score","are_compatible","compatibility_threshold","compute_compatibility_lists","S_initial","P_rate","C","I_initial","I_rate","forcebundle","I","cycle","iteration","forces","edge","nodes","nl","edges","ll","bundling_stiffness","k","step_size","step","cycles","iterations","iterations_rate","subdivision_points_seed","subdivision_rate","compatbility_threshold","generateByDataSet","colors","container","cssText","html","innerHTML","generateByMinMax","splitNum","Number","MapHelper","opt","warn","zoom","enableScrollWheelZoom","mapv","global$3","Overlay","initialize","adjustSize","getPanes","appendChild","that","addEventListener","_draw","clearTimeout","timeoutID","pixel","pointToOverlayPixel","dispatchEvent","getContainer","addOverlay","display","hide","setZIndex","getZIndex","_tweens","getAll","removeAll","tween","indexOf","preserve","now","hrtime","performance","Tween","_repeatDelayTime","_object","_valuesStart","_valuesEnd","_valuesStartRepeat","_duration","_repeat","_yoyo","_isPlaying","_reversed","_delayTime","_startTime","_easingFunction","Easing","Linear","None","_interpolationFunction","Interpolation","_chainedTweens","_onStartCallback","_onStartCallbackFired","_onUpdateCallback","_onCompleteCallback","_onStopCallback","properties","stopChainedTweens","numChainedTweens","delay","amount","repeat","times","repeatDelay","yoyo","easing","interpolation","chain","onStart","onUpdate","onComplete","onStop","elapsed","charAt","isFinite","tmp","Quadratic","In","Out","InOut","Cubic","Quartic","Quintic","Sinusoidal","Exponential","Circular","Elastic","Back","s","Bounce","v","f","fn","Utils","Bezier","pw","bn","Bernstein","CatmullRom","p0","fc","Factorial","p3","v0","v1","drawText","textKey","textAlign","textBaseline","avoid","drawIcon","deg","icon","translate","rotate","_width","_height","sx","sy","swidth","sheight","BaseLayer","globalCompositeOperation","imageSmoothingEnabled","lineCap","lineJoin","miterLimit","lineDashOffset","category","choropleth","styleType","animationOptions","enabled","nwPixel","clip","canvasLayer","isPointInPath","isPointInStroke","dataItem","methods","click","mousemove","obj","isDraw","init","ctx","conf","getDefaultContextConfig","unbindEvent","isEnabledTime","steps","animator","_canvasUpdate","addAnimatorEvent","AnimationLayer","_BaseLayer","transferToMercator","initDataRange","initAnimator","projection","getMapType","getProjection","coordType","lngLatToPoint","zoomUnit","getZoom","mcCenter","nwMc","Pixel","dataGetOptions","processData","drawAnimation","_index","animateTime","timeout","Layer","clickEvent","mousemoveEvent","argCheck","setDefaultCursor","removeEventListener","minZoom","maxZoom","pointToPixel","unit","drawContext","updateCallback","bindEvent","animatorMovestartEvent","animatorMoveendEvent","removeOverlay","global$4","google","OverlayView","CSS_TRANSFORM_","div","transformProps","prop","requestAnimFrame_","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","cancelAnimFrame_","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","requestId","setAnimate","setPaneName","updateHandler","setUpdateHandler","resizeHandler","setResizeHandler","resolutionScale","setResolutionScale","setMap","scheduleUpdate","isAnimated","setPane_","getPaneName","panes","opt_resizeHandler","opt_updateHandler","onAdd","addListener","getMap","onRemove","parentElement","removeChild","removeListener","mapWidth","getDiv","offsetWidth","mapHeight","offsetHeight","newWidth","newHeight","oldWidth","oldHeight","getBounds","getNorthEast","LatLng","divCenter","fromLatLngToDivPixel","offsetX","offsetY","getTopLeft","Layer$2","canvasLayerOptions","mapProjection","fromLatLngToPoint","latLng","worldPoint","geoJson","features","feature","csv","CSVToArray","strData","strDelimiter","objPattern","RegExp","arrData","arrMatches","exec","strMatchedDelimiter","strMatchedValue","csvStr","arr","header","version","canvasClear","canvasResolutionScale","canvasDrawSimple","canvasDrawHeatmap","canvasDrawGrid","canvasDrawHoneycomb","webglDrawPoint","webglDrawLine","webglDrawPolygon","utilForceEdgeBundling","utilDataRangeIntensity","utilDataRangeCategory","utilDataRangeChoropleth","baiduMapCanvasLayer","baiduMapAnimationLayer","googleMapCanvasLayer","googleMapLayer","1143","cp","childNum"],"mappings":"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U,QAAQ,UAAU,QAAQ,UAAU,OAAO,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,SAAS,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,SAAS,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,OAAO,SAAS,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,OAAO,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,OAAO,UAAU,QAAQ,SAAS,QAAQ,SAAS,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,SAAS,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,QAAQ,QAAQ,SAAS,QAAQ,UAAU,QAAQ,UAAU,QAAQ,SAAS,OAAO,UAAU,OAAO,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,OAAO,UAAU,QAAQ,SAAS,QAAQ,SAAS,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,SAAS,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,SAAS,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,OAAO,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,SAAS,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,SAAS,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,OAAO,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,OAAO,cACtvFD,KAAQ,UAAUiqB,YAAcnnB,GAAK,KAAK/B,KAAO,eAAK83B,IAAM,QAAQ,SAASC,SAAW,GAAG/4B,UAAYC,KAAO,UAAUC,eAAicACprFD,KAAQ,UAAUiqB,YAAcnnB,GAAK,KAAK/B,KAAO,qBAAM83B,IAAM,SAAS,SAASC,SAAW,IAAI/4B,UAAYC,KAAO,UAAUC,eAAiB,OAAO,UAAU,QAAQ,SAAS,SAAS,UAAU,SAAS,UAAU,QAAQ,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,SAAS,QAAQ,UAAU,QAAQ,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,KAAK,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,QAAQ,UAAU,QAAQ,UAAU,SAAS,SAAS,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,QAAQ,UAAU,SAAS,UAAU,QAAQ,SAAS,SAAS,UAAU,QAAQ,UAAU,SAAS,UAAU,SAAS,UAAU,QAAQ,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,SAAS,SAAS,UAAU,SAAS,SAAS,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,QAAQ,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,SAAS,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,SAAS,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,QAAQ,UAAU,SAAS,SAAS,SAAS,UAAU,QAAQ,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,QAAQ,UAAU,SAAS,UAAU,SAAS,UAAU,QAAQ,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,QAAQ,UAAU,SAAS,SAAS,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,SAAS,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,SAAS,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,SAAS,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,SAAS,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,QAAQ,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,QAAQ,SAAS,SAAS,SAAS,SAAS,UAAU,QAAQ,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,SAAS,SAAS,SAAS,QAAQ,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,SAAS,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,QAAQ,UAAU,SAAS,UAAU,SAAS,SAAS,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,QAAQ,UAAU,QAAQ,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,SAAS,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,SAAS,SAAS,UAAU,SAAS,UAAU,QAAQ,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,QAAQ,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,SAAS,SAAS,UAAU,SAAS,UAAU,SAAS,SAAS,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,QAAQ,UAAU,SAAS,UAAU,SAAS,UAAU,OAAO,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,QAAQ,UAAU,SAAS,UAAU,SAAS,UAAU,QAAQ,SAAS,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QA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AAS,UAAU,QAAQ,SAAS,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,QAAQ,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,SAAS,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,SAAS,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,OAAO,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,QAAQ,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,QAAQ,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,SAAS,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,QAAQ,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,SAAS,QAAQ,UAAU,QAAQ,UAAU,OAAO,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,OAAO,UAAU,OAAO,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,OAAO,UAAU,QAAQ,UAAU,QAAQ,SAAS,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,OAAO,cAC3yG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","file":"static/js/18.993907b8.chunk.js","sourcesContent":["webpackJsonp([18],{\n\n/***/ 1140:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_antd__ = __webpack_require__(382);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_components_Bmap_QianXi__ = __webpack_require__(1141);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var TabPane=__WEBPACK_IMPORTED_MODULE_1_antd__[\"z\" /* Tabs */].TabPane;var BMap=function(_Component){_inherits(BMap,_Component);function BMap(){var _ref;var _temp,_this,_ret;_classCallCheck(this,BMap);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return _ret=(_temp=(_this=_possibleConstructorReturn(this,(_ref=BMap.__proto__||Object.getPrototypeOf(BMap)).call.apply(_ref,[this].concat(args))),_this),_this.state={datas:[],datas2:[]},_this.getDatas=function(){var to='武汉';var datas=[{from:'湖北',count:354552,to:to},{from:'河北',count:354551,to:to},{from:'天津',count:97323,to:to},{from:'山东',count:28664,to:to},{from:'山西',count:16650,to:to},{from:'辽宁',count:14379,to:to},{from:'河南',count:10980,to:to},{from:'内蒙古自治区',count:9603,to:to},{from:'江苏',count:4536,to:to},{from:'上海',count:3556,to:to},{from:'广东',count:2600,to:to}];_this.setState({datas:datas});},_this.getDatas2=function(){var from='武汉';var datas2=[{from:from,count:354551,to:'湖北'},{from:from,count:85451,to:'河北'},{from:from,count:97323,to:'天津'},{from:from,count:28664,to:'山东'},{from:from,count:16650,to:'山西'},{from:from,count:14379,to:'辽宁'},{from:from,count:10980,to:'河南'},{from:from,count:9603,to:'内蒙古自治区'},{from:from,count:4536,to:'江苏'},{from:from,count:3556,to:'上海'},{from:from,count:2600,to:'广东'}];_this.setState({datas2:datas2});},_temp),_possibleConstructorReturn(_this,_ret);}_createClass(BMap,[{key:'render',value:function render(){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_antd__[\"c\" /* Breadcrumb */],{className:'breadcrumb'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_antd__[\"c\" /* Breadcrumb */].Item,null,'\\u5730\\u56FE'),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_antd__[\"c\" /* Breadcrumb */].Item,null,'BMap')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'common-content'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_antd__[\"e\" /* Card */],null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_antd__[\"z\" /* Tabs */],{defaultActiveKey:'1'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(TabPane,{tab:'\\u751F\\u6E90\\u5206\\u5E03',key:'1'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{style:{marginBottom:20}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_antd__[\"d\" /* Button */],{onClick:this.getDatas},'\\u83B7\\u53D6\\u6570\\u636E')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__common_components_Bmap_QianXi__[\"a\" /* default */],{datas:this.state.datas||[]})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(TabPane,{tab:'\\u6BD5\\u4E1A\\u53BB\\u5411',key:'2'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{style:{marginBottom:20}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_antd__[\"d\" /* Button */],{onClick:this.getDatas2},'\\u83B7\\u53D6\\u6570\\u636E')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__common_components_Bmap_QianXi__[\"a\" /* default */],{datas:this.state.datas2||[]}))))));}}]);return BMap;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);/* harmony default export */ __webpack_exports__[\"default\"] = (BMap);\n\n/***/ }),\n\n/***/ 1141:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_mapv__ = __webpack_require__(1142);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_mapv___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_mapv__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__china__ = __webpack_require__(1143);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils__ = __webpack_require__(208);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var styleJson=[{\"featureType\":\"water\",\"elementType\":\"all\",\"stylers\":{\"color\":\"#031628\"}},{\"featureType\":\"land\",\"elementType\":\"geometry\",\"stylers\":{\"color\":\"#000102\"}},{\"featureType\":\"highway\",\"elementType\":\"geometry.fill\",\"stylers\":{\"color\":\"#000000\"}},{\"featureType\":\"highway\",\"elementType\":\"geometry.stroke\",\"stylers\":{\"color\":\"#147a92\"}},{\"featureType\":\"arterial\",\"elementType\":\"geometry.fill\",\"stylers\":{\"color\":\"#000000\"}},{\"featureType\":\"arterial\",\"elementType\":\"geometry.stroke\",\"stylers\":{\"color\":\"#0b3d51\"}},{\"featureType\":\"local\",\"elementType\":\"geometry\",\"stylers\":{\"color\":\"#000000\"}},{\"featureType\":\"railway\",\"elementType\":\"geometry.fill\",\"stylers\":{\"color\":\"#000000\"}},{\"featureType\":\"railway\",\"elementType\":\"geometry.stroke\",\"stylers\":{\"color\":\"#08304b\"}},{\"featureType\":\"subway\",\"elementType\":\"geometry\",\"stylers\":{\"lightness\":-70}},{\"featureType\":\"building\",\"elementType\":\"geometry.fill\",\"stylers\":{\"color\":\"#000000\"}},{\"featureType\":\"all\",\"elementType\":\"labels.text.fill\",\"stylers\":{\"color\":\"#857f7f\"}},{\"featureType\":\"all\",\"elementType\":\"labels.text.stroke\",\"stylers\":{\"color\":\"#000000\"}},{\"featureType\":\"building\",\"elementType\":\"geometry\",\"stylers\":{\"color\":\"#022338\"}},{\"featureType\":\"green\",\"elementType\":\"geometry\",\"stylers\":{\"color\":\"#062032\"}},{\"featureType\":\"boundary\",\"elementType\":\"all\",\"stylers\":{\"color\":\"#465b6c\"}},{\"featureType\":\"manmade\",\"elementType\":\"all\",\"stylers\":{\"color\":\"#022338\"}},{\"featureType\":\"label\",\"elementType\":\"all\",\"stylers\":{\"color\":\"#022338\",\"visibility\":\"off\"}}];var BMap=window.BMap;/**\r\n * datas 地图数据，数据格式 [{ from: '河北', count: 354551, to: to }, { from: '天津', count: 97323, to: to }]\r\n * styleJson  地图样式设置\r\n * height: 地图高度， 非必传  默认500\r\n * \r\n */var QianXi=function(_Component){_inherits(QianXi,_Component);function QianXi(props){_classCallCheck(this,QianXi);var _this=_possibleConstructorReturn(this,(QianXi.__proto__||Object.getPrototypeOf(QianXi)).call(this,props));_this.makeMap=function(data){// 百度地图API功能\nvar map=new BMap.Map(_this.state.mapId,{enableMapClick:false});// 创建Map实例\nmap.centerAndZoom(new BMap.Point(105.403119,38.028658),5);// 初始化地图,设置中心点坐标和地图级别\nmap.setMapStyle({styleJson:_this.props.styleJson||styleJson});var geojsonOptions={gradient:{0:'rgba(55, 50, 250, 0.4)',1:'rgba(55, 50, 250, 1)'},max:354551,draw:'intensity'};var geojsonDataSet=__WEBPACK_IMPORTED_MODULE_1_mapv__[\"geojson\"].getDataSet(__WEBPACK_IMPORTED_MODULE_2__china__[\"a\" /* default */]);// var to = '北京';\nvar datas=data||[];var qianxi=new __WEBPACK_IMPORTED_MODULE_1_mapv__[\"DataSet\"](datas);var qianxiData=qianxi.get();var lineData=[];var pointData=[];var textData=[];var timeData=[];var citys={};for(var i=0;i<qianxiData.length;i++){var fromCenter=__WEBPACK_IMPORTED_MODULE_1_mapv__[\"utilCityCenter\"].getCenterByCityName(qianxiData[i].from);var toCenter=__WEBPACK_IMPORTED_MODULE_1_mapv__[\"utilCityCenter\"].getCenterByCityName(qianxiData[i].to);if(!fromCenter||!toCenter){continue;}citys[qianxiData[i].from]=qianxiData[i].count;citys[qianxiData[i].to]=qianxiData[i].count;pointData.push({geometry:{type:'Point',coordinates:[fromCenter.lng,fromCenter.lat]}});pointData.push({geometry:{type:'Point',coordinates:[toCenter.lng,toCenter.lat]}});textData.push({geometry:{type:'Point',coordinates:[fromCenter.lng,fromCenter.lat]},text:qianxiData[i].from});textData.push({geometry:{type:'Point',coordinates:[toCenter.lng,toCenter.lat]},text:qianxiData[i].to});var curve=__WEBPACK_IMPORTED_MODULE_1_mapv__[\"utilCurve\"].getPoints([fromCenter,toCenter]);for(var j=0;j<curve.length;j++){timeData.push({geometry:{type:'Point',coordinates:curve[j]},count:1,time:j});}lineData.push({geometry:{type:'LineString',coordinates:curve//coordinates: [[fromCenter.lng, fromCenter.lat], [toCenter.lng, toCenter.lat]]\n},count:30*Math.random()});}var ds=geojsonDataSet.get({filter:function filter(item){if(!citys[item.name]){return false;}item.count=citys[item.name];return true;}});geojsonDataSet=new __WEBPACK_IMPORTED_MODULE_1_mapv__[\"DataSet\"](ds);new __WEBPACK_IMPORTED_MODULE_1_mapv__[\"baiduMapLayer\"](map,geojsonDataSet,geojsonOptions);var textDataSet=new __WEBPACK_IMPORTED_MODULE_1_mapv__[\"DataSet\"](textData);var textOptions={draw:'text',font:'14px Arial',fillStyle:'white',shadowColor:'yellow',shadowBlue:10,zIndex:11,shadowBlur:10};new __WEBPACK_IMPORTED_MODULE_1_mapv__[\"baiduMapLayer\"](map,textDataSet,textOptions);var lineDataSet=new __WEBPACK_IMPORTED_MODULE_1_mapv__[\"DataSet\"](lineData);var lineOptions={strokeStyle:'rgba(255, 250, 50, 0.8)',shadowColor:'rgba(255, 250, 50, 1)',shadowBlur:20,lineWidth:2,zIndex:100,draw:'simple'};new __WEBPACK_IMPORTED_MODULE_1_mapv__[\"baiduMapLayer\"](map,lineDataSet,lineOptions);var pointOptions={fillStyle:'rgba(254,175,3,0.7)',shadowColor:'rgba(55, 50, 250, 0.5)',shadowBlur:10,size:5,zIndex:10,draw:'simple'};var pointDataSet=new __WEBPACK_IMPORTED_MODULE_1_mapv__[\"DataSet\"](pointData);new __WEBPACK_IMPORTED_MODULE_1_mapv__[\"baiduMapLayer\"](map,pointDataSet,pointOptions);var timeDataSet=new __WEBPACK_IMPORTED_MODULE_1_mapv__[\"DataSet\"](timeData);var timeOptions={fillStyle:'rgba(255, 250, 250, 0.5)',zIndex:200,size:2.5,animation:{type:'time',stepsRange:{start:0,end:50},trails:10,duration:2},draw:'simple'};new __WEBPACK_IMPORTED_MODULE_1_mapv__[\"baiduMapLayer\"](map,timeDataSet,timeOptions);};var mapId='map'+new Date().getTime();_this.state={mapId:mapId};return _this;}_createClass(QianXi,[{key:'componentDidMount',value:function componentDidMount(){this.makeMap(this.props.datas);}},{key:'componentWillReceiveProps',value:function componentWillReceiveProps(nextProps){var _this2=this;if(nextProps.datas&&!Object(__WEBPACK_IMPORTED_MODULE_3__utils__[\"f\" /* isObjectValueEqual */])(nextProps.datas,this.props.datas)){setTimeout(function(){// 根据停留点，计算移动点，最终生成所有点的百度坐标， 开始路书配置...\n_this2.makeMap(nextProps.datas);},50);}}},{key:'render',value:function render(){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{id:this.state.mapId,style:this.props.style||{height:this.props.height||500}});}}]);return QianXi;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);/* harmony default export */ __webpack_exports__[\"a\"] = (QianXi);\n\n/***/ }),\n\n/***/ 1142:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process) {(function (global, factory) {\n\t true ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.mapv = global.mapv || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"2.0.20\";\n\n/**\n * @author kyle / http://nikai.us/\n */\n\nvar clear = function (context) {\n    context && context.clearRect && context.clearRect(0, 0, context.canvas.width, context.canvas.height);\n    //context.canvas.width = context.canvas.width;\n    //context.canvas.height = context.canvas.height;\n};\n\n/**\n * @author kyle / http://nikai.us/\n */\n\nvar resolutionScale$1 = function (context) {\n    var devicePixelRatio = window.devicePixelRatio || 1;\n    context.canvas.width = context.canvas.width * devicePixelRatio;\n    context.canvas.height = context.canvas.height * devicePixelRatio;\n    context.canvas.style.width = context.canvas.width / devicePixelRatio + 'px';\n    context.canvas.style.height = context.canvas.height / devicePixelRatio + 'px';\n    context.scale(devicePixelRatio, devicePixelRatio);\n};\n\nfunction Event() {\n  this._subscribers = {}; // event subscribers\n}\n\n/**\n * Subscribe to an event, add an event listener\n * @param {String} event        Event name. Available events: 'put', 'update',\n *                              'remove'\n * @param {function} callback   Callback method. Called with three parameters:\n *                                  {String} event\n *                                  {Object | null} params\n *                                  {String | Number} senderId\n */\nEvent.prototype.on = function (event, callback) {\n  var subscribers = this._subscribers[event];\n  if (!subscribers) {\n    subscribers = [];\n    this._subscribers[event] = subscribers;\n  }\n\n  subscribers.push({\n    callback: callback\n  });\n};\n\n/**\n * Unsubscribe from an event, remove an event listener\n * @param {String} event\n * @param {function} callback\n */\nEvent.prototype.off = function (event, callback) {\n  var subscribers = this._subscribers[event];\n  if (subscribers) {\n    //this._subscribers[event] = subscribers.filter(listener => listener.callback != callback);\n    for (var i = 0; i < subscribers.length; i++) {\n      if (subscribers[i].callback == callback) {\n        subscribers.splice(i, 1);\n        i--;\n      }\n    }\n  }\n};\n\n/**\n * Trigger an event\n * @param {String} event\n * @param {Object | null} params\n * @param {String} [senderId]       Optional id of the sender.\n * @private\n */\nEvent.prototype._trigger = function (event, params, senderId) {\n  if (event == '*') {\n    throw new Error('Cannot trigger event *');\n  }\n\n  var subscribers = [];\n  if (event in this._subscribers) {\n    subscribers = subscribers.concat(this._subscribers[event]);\n  }\n  if ('*' in this._subscribers) {\n    subscribers = subscribers.concat(this._subscribers['*']);\n  }\n\n  for (var i = 0, len = subscribers.length; i < len; i++) {\n    var subscriber = subscribers[i];\n    if (subscriber.callback) {\n      subscriber.callback(event, params, senderId || null);\n    }\n  }\n};\n\n/**\n * get the center by the city name\n * @author kyle / http://nikai.us/\n */\n\nvar citycenter = { municipalities: [{ n: \"北京\", g: \"116.395645,39.929986|12\" }, { n: \"上海\", g: \"121.487899,31.249162|12\" }, { n: \"天津\", g: \"117.210813,39.14393|12\" }, { n: \"重庆\", g: \"106.530635,29.544606|12\" }], provinces: [{ n: \"安徽\", g: \"117.216005,31.859252|8\", cities: [{ n: \"合肥\", g: \"117.282699,31.866942|12\" }, { n: \"安庆\", g: \"117.058739,30.537898|13\" }, { n: \"蚌埠\", g: \"117.35708,32.929499|13\" }, { n: \"亳州\", g: \"115.787928,33.871211|13\" }, { n: \"巢湖\", g: \"117.88049,31.608733|13\" }, { n: \"池州\", g: \"117.494477,30.660019|14\" }, { n: \"滁州\", g: \"118.32457,32.317351|13\" }, { n: \"阜阳\", g: \"115.820932,32.901211|13\" }, { n: \"淮北\", g: \"116.791447,33.960023|13\" }, { n: \"淮南\", g: \"117.018639,32.642812|13\" }, { n: \"黄山\", g: \"118.29357,29.734435|13\" }, { n: \"六安\", g: \"116.505253,31.755558|13\" }, { n: \"马鞍山\", g: \"118.515882,31.688528|13\" }, { n: \"宿州\", g: \"116.988692,33.636772|13\" }, { n: \"铜陵\", g: \"117.819429,30.94093|14\" }, { n: \"芜湖\", g: \"118.384108,31.36602|12\" }, { n: \"宣城\", g: \"118.752096,30.951642|13\" }] }, { n: \"福建\", g: \"117.984943,26.050118|8\", cities: [{ n: \"福州\", g: \"119.330221,26.047125|12\" }, { n: \"龙岩\", g: \"117.017997,25.078685|13\" }, { n: \"南平\", g: \"118.181883,26.643626|13\" }, { n: \"宁德\", g: \"119.542082,26.656527|14\" }, { n: \"莆田\", g: \"119.077731,25.44845|13\" }, { n: \"泉州\", g: \"118.600362,24.901652|12\" }, { n: \"三明\", g: \"117.642194,26.270835|14\" }, { n: \"厦门\", g: \"118.103886,24.489231|12\" }, { n: \"漳州\", g: \"117.676205,24.517065|12\" }] }, { n: \"甘肃\", g: \"102.457625,38.103267|6\", cities: [{ n: \"兰州\", g: \"103.823305,36.064226|12\" }, { n: \"白银\", g: \"104.171241,36.546682|13\" }, { n: \"定西\", g: \"104.626638,35.586056|13\" }, { n: \"甘南州\", g: \"102.917442,34.992211|14\" }, { n: \"嘉峪关\", g: \"98.281635,39.802397|13\" }, { n: \"金昌\", g: \"102.208126,38.516072|13\" }, { n: \"酒泉\", g: \"98.508415,39.741474|13\" }, { n: \"临夏州\", g: \"103.215249,35.598514|13\" }, { n: \"陇南\", g: \"104.934573,33.39448|14\" }, { n: \"平凉\", g: \"106.688911,35.55011|13\" }, { n: \"庆阳\", g: \"107.644227,35.726801|13\" }, { n: \"天水\", g: \"105.736932,34.584319|13\" }, { n: \"武威\", g: \"102.640147,37.933172|13\" }, { n: \"张掖\", g: \"100.459892,38.93932|13\" }] }, { n: \"广东\", g: \"113.394818,23.408004|8\", cities: [{ n: \"广州\", g: \"113.30765,23.120049|12\" }, { n: \"潮州\", g: \"116.630076,23.661812|13\" }, { n: \"东莞\", g: \"113.763434,23.043024|12\" }, { n: \"佛山\", g: \"113.134026,23.035095|13\" }, { n: \"河源\", g: \"114.713721,23.757251|12\" }, { n: \"惠州\", g: \"114.410658,23.11354|12\" }, { n: \"江门\", g: \"113.078125,22.575117|13\" }, { n: \"揭阳\", g: \"116.379501,23.547999|13\" }, { n: \"茂名\", g: \"110.931245,21.668226|13\" }, { n: \"梅州\", g: \"116.126403,24.304571|13\" }, { n: \"清远\", g: \"113.040773,23.698469|13\" }, { n: \"汕头\", g: \"116.72865,23.383908|13\" }, { n: \"汕尾\", g: \"115.372924,22.778731|14\" }, { n: \"韶关\", g: \"113.594461,24.80296|13\" }, { n: \"深圳\", g: \"114.025974,22.546054|12\" }, { n: \"阳江\", g: \"111.97701,21.871517|14\" }, { n: \"云浮\", g: \"112.050946,22.937976|13\" }, { n: \"湛江\", g: \"110.365067,21.257463|13\" }, { n: \"肇庆\", g: \"112.479653,23.078663|13\" }, { n: \"中山\", g: \"113.42206,22.545178|12\" }, { n: \"珠海\", g: \"113.562447,22.256915|13\" }] }, { n: \"广西\", g: \"108.924274,23.552255|7\", cities: [{ n: \"南宁\", g: \"108.297234,22.806493|12\" }, { n: \"百色\", g: \"106.631821,23.901512|13\" }, { n: \"北海\", g: \"109.122628,21.472718|13\" }, { n: \"崇左\", g: \"107.357322,22.415455|14\" }, { n: \"防城港\", g: \"108.351791,21.617398|15\" }, { n: \"桂林\", g: \"110.26092,25.262901|12\" }, { n: \"贵港\", g: \"109.613708,23.103373|13\" }, { n: \"河池\", g: \"108.069948,24.699521|14\" }, { n: \"贺州\", g: \"111.552594,24.411054|14\" }, { n: \"来宾\", g: \"109.231817,23.741166|14\" }, { n: \"柳州\", g: \"109.422402,24.329053|12\" }, { n: \"钦州\", g: \"108.638798,21.97335|13\" }, { n: \"梧州\", g: \"111.305472,23.485395|13\" }, { n: \"玉林\", g: \"110.151676,22.643974|14\" }] }, { n: \"贵州\", g: \"106.734996,26.902826|8\", cities: [{ n: \"贵阳\", g: \"106.709177,26.629907|12\" }, { n: \"安顺\", g: \"105.92827,26.228595|13\" }, { n: \"毕节地区\", g: \"105.300492,27.302612|14\" }, { n: \"六盘水\", g: \"104.852087,26.591866|13\" }, { n: \"铜仁地区\", g: \"109.196161,27.726271|14\" }, { n: \"遵义\", g: \"106.93126,27.699961|13\" }, { n: \"黔西南州\", g: \"104.900558,25.095148|11\" }, { n: \"黔东南州\", g: \"107.985353,26.583992|11\" }, { n: \"黔南州\", g: \"107.523205,26.264536|11\" }] }, { n: \"海南\", g: \"109.733755,19.180501|9\", cities: [{ n: \"海口\", g: \"110.330802,20.022071|13\" }, { n: \"白沙\", g: \"109.358586,19.216056|12\" }, { n: \"保亭\", g: \"109.656113,18.597592|12\" }, { n: \"昌江\", g: \"109.0113,19.222483|12\" }, { n: \"儋州\", g: \"109.413973,19.571153|13\" }, { n: \"澄迈\", g: \"109.996736,19.693135|13\" }, { n: \"东方\", g: \"108.85101,18.998161|13\" }, { n: \"定安\", g: \"110.32009,19.490991|13\" }, { n: \"琼海\", g: \"110.414359,19.21483|13\" }, { n: \"琼中\", g: \"109.861849,19.039771|12\" }, { n: \"乐东\", g: \"109.062698,18.658614|12\" }, { n: \"临高\", g: \"109.724101,19.805922|13\" }, { n: \"陵水\", g: \"109.948661,18.575985|12\" }, { n: \"三亚\", g: \"109.522771,18.257776|12\" }, { n: \"屯昌\", g: \"110.063364,19.347749|13\" }, { n: \"万宁\", g: \"110.292505,18.839886|13\" }, { n: \"文昌\", g: \"110.780909,19.750947|13\" }, { n: \"五指山\", g: \"109.51775,18.831306|13\" }] }, { n: \"河北\", g: \"115.661434,38.61384|7\", cities: [{ n: \"石家庄\", g: \"114.522082,38.048958|12\" }, { n: \"保定\", g: \"115.49481,38.886565|13\" }, { n: \"沧州\", g: \"116.863806,38.297615|13\" }, { n: \"承德\", g: \"117.933822,40.992521|14\" }, { n: \"邯郸\", g: \"114.482694,36.609308|13\" }, { n: \"衡水\", g: \"115.686229,37.746929|13\" }, { n: \"廊坊\", g: \"116.703602,39.518611|13\" }, { n: \"秦皇岛\", g: \"119.604368,39.945462|12\" }, { n: \"唐山\", g: \"118.183451,39.650531|13\" }, { n: \"邢台\", g: \"114.520487,37.069531|13\" }, { n: \"张家口\", g: \"114.893782,40.811188|13\" }] }, { n: \"河南\", g: \"113.486804,34.157184|7\", cities: [{ n: \"郑州\", g: \"113.649644,34.75661|12\" }, { n: \"安阳\", g: \"114.351807,36.110267|12\" }, { n: \"鹤壁\", g: \"114.29777,35.755426|13\" }, { n: \"焦作\", g: \"113.211836,35.234608|13\" }, { n: \"开封\", g: \"114.351642,34.801854|13\" }, { n: \"洛阳\", g: \"112.447525,34.657368|12\" }, { n: \"漯河\", g: \"114.046061,33.576279|13\" }, { n: \"南阳\", g: \"112.542842,33.01142|13\" }, { n: \"平顶山\", g: \"113.300849,33.745301|13\" }, { n: \"濮阳\", g: \"115.026627,35.753298|12\" }, { n: \"三门峡\", g: \"111.181262,34.78332|13\" }, { n: \"商丘\", g: \"115.641886,34.438589|13\" }, { n: \"新乡\", g: \"113.91269,35.307258|13\" }, { n: \"信阳\", g: \"114.085491,32.128582|13\" }, { n: \"许昌\", g: \"113.835312,34.02674|13\" }, { n: \"周口\", g: \"114.654102,33.623741|13\" }, { n: \"驻马店\", g: \"114.049154,32.983158|13\" }] }, { n: \"黑龙江\", g: \"128.047414,47.356592|6\", cities: [{ n: \"哈尔滨\", g: \"126.657717,45.773225|12\" }, { n: \"大庆\", g: \"125.02184,46.596709|12\" }, { n: \"大兴安岭地区\", g: \"124.196104,51.991789|10\" }, { n: \"鹤岗\", g: \"130.292472,47.338666|13\" }, { n: \"黑河\", g: \"127.50083,50.25069|14\" }, { n: \"鸡西\", g: \"130.941767,45.32154|13\" }, { n: \"佳木斯\", g: \"130.284735,46.81378|12\" }, { n: \"牡丹江\", g: \"129.608035,44.588521|13\" }, { n: \"七台河\", g: \"131.019048,45.775005|14\" }, { n: \"齐齐哈尔\", g: \"123.987289,47.3477|13\" }, { n: \"双鸭山\", g: \"131.171402,46.655102|13\" }, { n: \"绥化\", g: \"126.989095,46.646064|13\" }, { n: \"伊春\", g: \"128.910766,47.734685|14\" }] }, { n: \"湖北\", g: \"112.410562,31.209316|8\", cities: [{ n: \"武汉\", g: \"114.3162,30.581084|12\" }, { n: \"鄂州\", g: \"114.895594,30.384439|14\" }, { n: \"恩施\", g: \"109.517433,30.308978|14\" }, { n: \"黄冈\", g: \"114.906618,30.446109|14\" }, { n: \"黄石\", g: \"115.050683,30.216127|13\" }, { n: \"荆门\", g: \"112.21733,31.042611|13\" }, { n: \"荆州\", g: \"112.241866,30.332591|12\" }, { n: \"潜江\", g: \"112.768768,30.343116|13\" }, { n: \"神农架林区\", g: \"110.487231,31.595768|13\" }, { n: \"十堰\", g: \"110.801229,32.636994|13\" }, { n: \"随州\", g: \"113.379358,31.717858|13\" }, { n: \"天门\", g: \"113.12623,30.649047|13\" }, { n: \"仙桃\", g: \"113.387448,30.293966|13\" }, { n: \"咸宁\", g: \"114.300061,29.880657|13\" }, { n: \"襄阳\", g: \"112.176326,32.094934|12\" }, { n: \"孝感\", g: \"113.935734,30.927955|13\" }, { n: \"宜昌\", g: \"111.310981,30.732758|13\" }] }, { n: \"湖南\", g: \"111.720664,27.695864|7\", cities: [{ n: \"长沙\", g: \"112.979353,28.213478|12\" }, { n: \"常德\", g: \"111.653718,29.012149|12\" }, { n: \"郴州\", g: \"113.037704,25.782264|13\" }, { n: \"衡阳\", g: \"112.583819,26.898164|13\" }, { n: \"怀化\", g: \"109.986959,27.557483|13\" }, { n: \"娄底\", g: \"111.996396,27.741073|13\" }, { n: \"邵阳\", g: \"111.461525,27.236811|13\" }, { n: \"湘潭\", g: \"112.935556,27.835095|13\" }, { n: \"湘西州\", g: \"109.745746,28.317951|14\" }, { n: \"益阳\", g: \"112.366547,28.588088|13\" }, { n: \"永州\", g: \"111.614648,26.435972|13\" }, { n: \"岳阳\", g: \"113.146196,29.378007|13\" }, { n: \"张家界\", g: \"110.48162,29.124889|13\" }, { n: \"株洲\", g: \"113.131695,27.827433|13\" }] }, { n: \"江苏\", g: \"119.368489,33.013797|8\", cities: [{ n: \"南京\", g: \"118.778074,32.057236|12\" }, { n: \"常州\", g: \"119.981861,31.771397|12\" }, { n: \"淮安\", g: \"119.030186,33.606513|12\" }, { n: \"连云港\", g: \"119.173872,34.601549|12\" }, { n: \"南通\", g: \"120.873801,32.014665|12\" }, { n: \"苏州\", g: \"120.619907,31.317987|12\" }, { n: \"宿迁\", g: \"118.296893,33.95205|13\" }, { n: \"泰州\", g: \"119.919606,32.476053|13\" }, { n: \"无锡\", g: \"120.305456,31.570037|12\" }, { n: \"徐州\", g: \"117.188107,34.271553|12\" }, { n: \"盐城\", g: \"120.148872,33.379862|12\" }, { n: \"扬州\", g: \"119.427778,32.408505|13\" }, { n: \"镇江\", g: \"119.455835,32.204409|13\" }] }, { n: \"江西\", g: \"115.676082,27.757258|7\", cities: [{ n: \"南昌\", g: \"115.893528,28.689578|12\" }, { n: \"抚州\", g: \"116.360919,27.954545|13\" }, { n: \"赣州\", g: \"114.935909,25.845296|13\" }, { n: \"吉安\", g: \"114.992039,27.113848|13\" }, { n: \"景德镇\", g: \"117.186523,29.303563|12\" }, { n: \"九江\", g: \"115.999848,29.71964|13\" }, { n: \"萍乡\", g: \"113.859917,27.639544|13\" }, { n: \"上饶\", g: \"117.955464,28.457623|13\" }, { n: \"新余\", g: \"114.947117,27.822322|13\" }, { n: \"宜春\", g: \"114.400039,27.81113|13\" }, { n: \"鹰潭\", g: \"117.03545,28.24131|13\" }] }, { n: \"吉林\", g: \"126.262876,43.678846|7\", cities: [{ n: \"长春\", g: \"125.313642,43.898338|12\" }, { n: \"白城\", g: \"122.840777,45.621086|13\" }, { n: \"白山\", g: \"126.435798,41.945859|13\" }, { n: \"吉林\", g: \"126.564544,43.871988|12\" }, { n: \"辽源\", g: \"125.133686,42.923303|13\" }, { n: \"四平\", g: \"124.391382,43.175525|12\" }, { n: \"松原\", g: \"124.832995,45.136049|13\" }, { n: \"通化\", g: \"125.94265,41.736397|13\" }, { n: \"延边\", g: \"129.485902,42.896414|13\" }] }, { n: \"辽宁\", g: \"122.753592,41.6216|8\", cities: [{ n: \"沈阳\", g: \"123.432791,41.808645|12\" }, { n: \"鞍山\", g: \"123.007763,41.118744|13\" }, { n: \"本溪\", g: \"123.778062,41.325838|12\" }, { n: \"朝阳\", g: \"120.446163,41.571828|13\" }, { n: \"大连\", g: \"121.593478,38.94871|12\" }, { n: \"丹东\", g: \"124.338543,40.129023|12\" }, { n: \"抚顺\", g: \"123.92982,41.877304|12\" }, { n: \"阜新\", g: \"121.660822,42.01925|14\" }, { n: \"葫芦岛\", g: \"120.860758,40.74303|13\" }, { n: \"锦州\", g: \"121.147749,41.130879|13\" }, { n: \"辽阳\", g: \"123.172451,41.273339|14\" }, { n: \"盘锦\", g: \"122.073228,41.141248|13\" }, { n: \"铁岭\", g: \"123.85485,42.299757|13\" }, { n: \"营口\", g: \"122.233391,40.668651|13\" }] }, { n: \"内蒙古\", g: \"114.415868,43.468238|5\", cities: [{ n: \"呼和浩特\", g: \"111.660351,40.828319|12\" }, { n: \"阿拉善盟\", g: \"105.695683,38.843075|14\" }, { n: \"包头\", g: \"109.846239,40.647119|12\" }, { n: \"巴彦淖尔\", g: \"107.423807,40.76918|12\" }, { n: \"赤峰\", g: \"118.930761,42.297112|12\" }, { n: \"鄂尔多斯\", g: \"109.993706,39.81649|12\" }, { n: \"呼伦贝尔\", g: \"119.760822,49.201636|12\" }, { n: \"通辽\", g: \"122.260363,43.633756|12\" }, { n: \"乌海\", g: \"106.831999,39.683177|13\" }, { n: \"乌兰察布\", g: \"113.112846,41.022363|12\" }, { n: \"锡林郭勒盟\", g: \"116.02734,43.939705|11\" }, { n: \"兴安盟\", g: \"122.048167,46.083757|11\" }] }, { n: \"宁夏\", g: \"106.155481,37.321323|8\", cities: [{ n: \"银川\", g: \"106.206479,38.502621|12\" }, { n: \"固原\", g: \"106.285268,36.021523|13\" }, { n: \"石嘴山\", g: \"106.379337,39.020223|13\" }, { n: \"吴忠\", g: \"106.208254,37.993561|14\" }, { n: \"中卫\", g: \"105.196754,37.521124|14\" }] }, { n: \"青海\", g: \"96.202544,35.499761|7\", cities: [{ n: \"西宁\", g: \"101.767921,36.640739|12\" }, { n: \"果洛州\", g: \"100.223723,34.480485|11\" }, { n: \"海东地区\", g: \"102.085207,36.51761|11\" }, { n: \"海北州\", g: \"100.879802,36.960654|11\" }, { n: \"海南州\", g: \"100.624066,36.284364|11\" }, { n: \"海西州\", g: \"97.342625,37.373799|11\" }, { n: \"黄南州\", g: \"102.0076,35.522852|11\" }, { n: \"玉树州\", g: \"97.013316,33.00624|14\" }] }, { n: \"山东\", g: \"118.527663,36.09929|8\", cities: [{ n: \"济南\", g: \"117.024967,36.682785|12\" }, { n: \"滨州\", g: \"117.968292,37.405314|12\" }, { n: \"东营\", g: \"118.583926,37.487121|12\" }, { n: \"德州\", g: \"116.328161,37.460826|12\" }, { n: \"菏泽\", g: \"115.46336,35.26244|13\" }, { n: \"济宁\", g: \"116.600798,35.402122|13\" }, { n: \"莱芜\", g: \"117.684667,36.233654|13\" }, { n: \"聊城\", g: \"115.986869,36.455829|12\" }, { n: \"临沂\", g: \"118.340768,35.072409|12\" }, { n: \"青岛\", g: \"120.384428,36.105215|12\" }, { n: \"日照\", g: \"119.50718,35.420225|12\" }, { n: \"泰安\", g: \"117.089415,36.188078|13\" }, { n: \"威海\", g: \"122.093958,37.528787|13\" }, { n: \"潍坊\", g: \"119.142634,36.716115|12\" }, { n: \"烟台\", g: \"121.309555,37.536562|12\" }, { n: \"枣庄\", g: \"117.279305,34.807883|13\" }, { n: \"淄博\", g: \"118.059134,36.804685|12\" }] }, { n: \"山西\", g: \"112.515496,37.866566|7\", cities: [{ n: \"太原\", g: \"112.550864,37.890277|12\" }, { n: \"长治\", g: \"113.120292,36.201664|12\" }, { n: \"大同\", g: \"113.290509,40.113744|12\" }, { n: \"晋城\", g: \"112.867333,35.499834|13\" }, { n: \"晋中\", g: \"112.738514,37.693362|13\" }, { n: \"临汾\", g: \"111.538788,36.099745|13\" }, { n: \"吕梁\", g: \"111.143157,37.527316|14\" }, { n: \"朔州\", g: \"112.479928,39.337672|13\" }, { n: \"忻州\", g: \"112.727939,38.461031|12\" }, { n: \"阳泉\", g: \"113.569238,37.869529|13\" }, { n: \"运城\", g: \"111.006854,35.038859|13\" }] }, { n: \"陕西\", g: \"109.503789,35.860026|7\", cities: [{ n: \"西安\", g: \"108.953098,34.2778|12\" }, { n: \"安康\", g: \"109.038045,32.70437|13\" }, { n: \"宝鸡\", g: \"107.170645,34.364081|12\" }, { n: \"汉中\", g: \"107.045478,33.081569|13\" }, { n: \"商洛\", g: \"109.934208,33.873907|13\" }, { n: \"铜川\", g: \"108.968067,34.908368|13\" }, { n: \"渭南\", g: \"109.483933,34.502358|13\" }, { n: \"咸阳\", g: \"108.707509,34.345373|13\" }, { n: \"延安\", g: \"109.50051,36.60332|13\" }, { n: \"榆林\", g: \"109.745926,38.279439|12\" }] }, { n: \"四川\", g: \"102.89916,30.367481|7\", cities: [{ n: \"成都\", g: \"104.067923,30.679943|12\" }, { n: \"阿坝州\", g: \"102.228565,31.905763|15\" }, { n: \"巴中\", g: \"106.757916,31.869189|14\" }, { n: \"达州\", g: \"107.494973,31.214199|14\" }, { n: \"德阳\", g: \"104.402398,31.13114|13\" }, { n: \"甘孜州\", g: \"101.969232,30.055144|15\" }, { n: \"广安\", g: \"106.63572,30.463984|13\" }, { n: \"广元\", g: \"105.819687,32.44104|13\" }, { n: \"乐山\", g: \"103.760824,29.600958|13\" }, { n: \"凉山州\", g: \"102.259591,27.892393|14\" }, { n: \"泸州\", g: \"105.44397,28.89593|14\" }, { n: \"南充\", g: \"106.105554,30.800965|13\" }, { n: \"眉山\", g: \"103.84143,30.061115|13\" }, { n: \"绵阳\", g: \"104.705519,31.504701|12\" }, { n: \"内江\", g: \"105.073056,29.599462|13\" }, { n: \"攀枝花\", g: \"101.722423,26.587571|14\" }, { n: \"遂宁\", g: \"105.564888,30.557491|12\" }, { n: \"雅安\", g: \"103.009356,29.999716|13\" }, { n: \"宜宾\", g: \"104.633019,28.769675|13\" }, { n: \"资阳\", g: \"104.63593,30.132191|13\" }, { n: \"自贡\", g: \"104.776071,29.359157|13\" }] }, { n: \"西藏\", g: \"89.137982,31.367315|6\", cities: [{ n: \"拉萨\", g: \"91.111891,29.662557|13\" }, { n: \"阿里地区\", g: \"81.107669,30.404557|11\" }, { n: \"昌都地区\", g: \"97.185582,31.140576|15\" }, { n: \"林芝地区\", g: \"94.349985,29.666941|11\" }, { n: \"那曲地区\", g: \"92.067018,31.48068|14\" }, { n: \"日喀则地区\", g: \"88.891486,29.269023|14\" }, { n: \"山南地区\", g: \"91.750644,29.229027|11\" }] }, { n: \"新疆\", g: \"85.614899,42.127001|6\", cities: [{ n: \"乌鲁木齐\", g: \"87.564988,43.84038|12\" }, { n: \"阿拉尔\", g: \"81.291737,40.61568|13\" }, { n: \"阿克苏地区\", g: \"80.269846,41.171731|12\" }, { n: \"阿勒泰地区\", g: \"88.137915,47.839744|13\" }, { n: \"巴音郭楞\", g: \"86.121688,41.771362|12\" }, { n: \"博尔塔拉州\", g: \"82.052436,44.913651|11\" }, { n: \"昌吉州\", g: \"87.296038,44.007058|13\" }, { n: \"哈密地区\", g: \"93.528355,42.858596|13\" }, { n: \"和田地区\", g: \"79.930239,37.116774|13\" }, { n: \"喀什地区\", g: \"75.992973,39.470627|12\" }, { n: \"克拉玛依\", g: \"84.88118,45.594331|13\" }, { n: \"克孜勒苏州\", g: \"76.137564,39.750346|11\" }, { n: \"石河子\", g: \"86.041865,44.308259|13\" }, { n: \"塔城地区\", g: \"82.974881,46.758684|12\" }, { n: \"图木舒克\", g: \"79.198155,39.889223|13\" }, { n: \"吐鲁番地区\", g: \"89.181595,42.96047|13\" }, { n: \"五家渠\", g: \"87.565449,44.368899|13\" }, { n: \"伊犁州\", g: \"81.297854,43.922248|11\" }] }, { n: \"云南\", g: \"101.592952,24.864213|7\", cities: [{ n: \"昆明\", g: \"102.714601,25.049153|12\" }, { n: \"保山\", g: \"99.177996,25.120489|13\" }, { n: \"楚雄州\", g: \"101.529382,25.066356|13\" }, { n: \"大理州\", g: \"100.223675,25.5969|14\" }, { n: \"德宏州\", g: \"98.589434,24.44124|14\" }, { n: \"迪庆州\", g: \"99.713682,27.831029|14\" }, { n: \"红河州\", g: \"103.384065,23.367718|11\" }, { n: \"丽江\", g: \"100.229628,26.875351|13\" }, { n: \"临沧\", g: \"100.092613,23.887806|14\" }, { n: \"怒江州\", g: \"98.859932,25.860677|14\" }, { n: \"普洱\", g: \"100.980058,22.788778|14\" }, { n: \"曲靖\", g: \"103.782539,25.520758|12\" }, { n: \"昭通\", g: \"103.725021,27.340633|13\" }, { n: \"文山\", g: \"104.089112,23.401781|14\" }, { n: \"西双版纳\", g: \"100.803038,22.009433|13\" }, { n: \"玉溪\", g: \"102.545068,24.370447|13\" }] }, { n: \"浙江\", g: \"119.957202,29.159494|8\", cities: [{ n: \"杭州\", g: \"120.219375,30.259244|12\" }, { n: \"湖州\", g: \"120.137243,30.877925|12\" }, { n: \"嘉兴\", g: \"120.760428,30.773992|13\" }, { n: \"金华\", g: \"119.652576,29.102899|12\" }, { n: \"丽水\", g: \"119.929576,28.4563|13\" }, { n: \"宁波\", g: \"121.579006,29.885259|12\" }, { n: \"衢州\", g: \"118.875842,28.95691|12\" }, { n: \"绍兴\", g: \"120.592467,30.002365|13\" }, { n: \"台州\", g: \"121.440613,28.668283|13\" }, { n: \"温州\", g: \"120.690635,28.002838|12\" }, { n: \"舟山\", g: \"122.169872,30.03601|13\" }] }], other: [{ n: \"香港\", g: \"114.186124,22.293586|11\" }, { n: \"澳门\", g: \"113.557519,22.204118|13\" }, { n: \"台湾\", g: \"120.961454,23.80406|8\" }] };\n\nfunction getCenter(g) {\n    var item = g.split(\"|\");\n    item[0] = item[0].split(\",\");\n    return {\n        lng: parseFloat(item[0][0]),\n        lat: parseFloat(item[0][1])\n    };\n}\n\nvar cityCenter = {\n    getProvinceNameByCityName: function getProvinceNameByCityName(name) {\n        var provinces = citycenter.provinces;\n        for (var i = 0; i < provinces.length; i++) {\n            var provinceName = provinces[i].n;\n            var cities = provinces[i].cities;\n            for (var j = 0; j < cities.length; j++) {\n                if (cities[j].n == name) {\n                    return provinceName;\n                }\n            }\n        }\n        return null;\n    },\n    getCenterByCityName: function getCenterByCityName(name) {\n        name = name.replace('市', '');\n        for (var i = 0; i < citycenter.municipalities.length; i++) {\n            if (citycenter.municipalities[i].n == name) {\n                return getCenter(citycenter.municipalities[i].g);\n            }\n        }\n\n        for (var i = 0; i < citycenter.other.length; i++) {\n            if (citycenter.other[i].n == name) {\n                return getCenter(citycenter.other[i].g);\n            }\n        }\n\n        var provinces = citycenter.provinces;\n        for (var i = 0; i < provinces.length; i++) {\n            if (provinces[i].n == name) {\n                return getCenter(provinces[i].g);\n            }\n            var cities = provinces[i].cities;\n            for (var j = 0; j < cities.length; j++) {\n                if (cities[j].n == name) {\n                    return getCenter(cities[j].g);\n                }\n            }\n        }\n        return null;\n    }\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\nvar get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @author kyle / http://nikai.us/\n */\n\n/**\n * DataSet\n *\n * A data set can:\n * - add/remove/update data\n * - gives triggers upon changes in the data\n * - can  import/export data in various data formats\n * @param {Array} [data]    Optional array with initial data\n * the field geometry is like geojson, it can be:\n * {\n *     \"type\": \"Point\",\n *     \"coordinates\": [125.6, 10.1]\n * }\n * {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [\n *         [102.0, 0.0], [103.0, 1.0], [104.0, 0.0], [105.0, 1.0]\n *     ]\n * }\n * {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [\n *         [ [100.0, 0.0], [101.0, 0.0], [101.0, 1.0],\n *           [100.0, 1.0], [100.0, 0.0] ]\n *     ]\n * }\n * @param {Object} [options]   Available options:\n * \n */\nfunction DataSet(data, options) {\n    Event.bind(this)();\n\n    this._options = options || {};\n    this._data = []; // map with data indexed by id\n\n    // add initial data when provided\n    if (data) {\n        this.add(data);\n    }\n}\n\nDataSet.prototype = Event.prototype;\n\n/**\n * Add data.\n */\nDataSet.prototype.add = function (data, senderId) {\n    if (Array.isArray(data)) {\n        // Array\n        for (var i = 0, len = data.length; i < len; i++) {\n            if (data[i].time && data[i].time.length == 14 && data[i].time.substr(0, 2) == '20') {\n                var time = data[i].time;\n                data[i].time = new Date(time.substr(0, 4) + '-' + time.substr(4, 2) + '-' + time.substr(6, 2) + ' ' + time.substr(8, 2) + ':' + time.substr(10, 2) + ':' + time.substr(12, 2)).getTime();\n            }\n            this._data.push(data[i]);\n        }\n    } else if (data instanceof Object) {\n        // Single item\n        this._data.push(data);\n    } else {\n        throw new Error('Unknown dataType');\n    }\n\n    this._dataCache = JSON.parse(JSON.stringify(this._data));\n};\n\nDataSet.prototype.reset = function () {\n    this._data = JSON.parse(JSON.stringify(this._dataCache));\n};\n\n/**\n * get data.\n */\nDataSet.prototype.get = function (args) {\n    args = args || {};\n\n    //console.time('copy data time')\n    var start = new Date();\n    // TODO: 不修改原始数据，在数据上挂载新的名称，每次修改数据直接修改新名称下的数据，可以省去deepCopy\n    // var data = deepCopy(this._data);\n    var data = this._data;\n\n    var start = new Date();\n\n    if (args.filter) {\n        var newData = [];\n        for (var i = 0; i < data.length; i++) {\n            if (args.filter(data[i])) {\n                newData.push(data[i]);\n            }\n        }\n        data = newData;\n    }\n\n    if (args.transferCoordinate) {\n        data = this.transferCoordinate(data, args.transferCoordinate, args.fromColumn, args.toColumn);\n    }\n\n    // console.timeEnd('transferCoordinate time')\n\n    return data;\n};\n\n/**\n * set data.\n */\nDataSet.prototype.set = function (data) {\n    this._set(data);\n    this._trigger('change');\n};\n\n/**\n * set data.\n */\nDataSet.prototype._set = function (data) {\n    this.clear();\n    this.add(data);\n};\n\n/**\n * clear data.\n */\nDataSet.prototype.clear = function (args) {\n    this._data = []; // map with data indexed by id\n};\n\n/**\n * remove data.\n */\nDataSet.prototype.remove = function (args) {};\n\n/**\n * update data.\n */\nDataSet.prototype.update = function (cbk, condition) {\n\n    var data = this._data;\n\n    var item = null;\n    for (var i = 0; i < data.length; i++) {\n        if (condition) {\n            var flag = true;\n            for (var key in condition) {\n                if (data[i][key] != condition[key]) {\n                    flag = false;\n                }\n            }\n            if (flag) {\n                cbk && cbk(data[i]);\n            }\n        } else {\n            cbk && cbk(data[i]);\n        }\n    }\n\n    this._dataCache = JSON.parse(JSON.stringify(this._data));\n\n    this._trigger('change');\n};\n\n/**\n * transfer coordinate.\n */\nDataSet.prototype.transferCoordinate = function (data, transferFn, fromColumn, toColumnName) {\n\n    toColumnName = toColumnName || '_coordinates';\n    fromColumn = fromColumn || 'coordinates';\n\n    for (var i = 0; i < data.length; i++) {\n\n        var geometry = data[i].geometry;\n        var coordinates = geometry[fromColumn];\n        switch (geometry.type) {\n            case 'Point':\n                geometry[toColumnName] = transferFn(coordinates);\n                break;\n            case 'LineString':\n                var newCoordinates = [];\n                for (var j = 0; j < coordinates.length; j++) {\n                    newCoordinates.push(transferFn(coordinates[j]));\n                }\n                geometry[toColumnName] = newCoordinates;\n                break;\n            case 'Polygon':\n                var newCoordinates = getPolygon(coordinates);\n                geometry[toColumnName] = newCoordinates;\n                break;\n            case 'MultiPolygon':\n                var newCoordinates = [];\n                for (var c = 0; c < coordinates.length; c++) {\n                    var polygon = coordinates[c];\n                    var polygon = getPolygon(polygon);\n                    newCoordinates.push(polygon);\n                }\n\n                geometry[toColumnName] = newCoordinates;\n                break;\n        }\n    }\n\n    function getPolygon(coordinates) {\n        var newCoordinates = [];\n        for (var c = 0; c < coordinates.length; c++) {\n            var coordinate = coordinates[c];\n            var newcoordinate = [];\n            for (var j = 0; j < coordinate.length; j++) {\n                newcoordinate.push(transferFn(coordinate[j]));\n            }\n            newCoordinates.push(newcoordinate);\n        }\n        return newCoordinates;\n    }\n\n    return data;\n};\n\nDataSet.prototype.initGeometry = function (transferFn) {\n\n    if (transferFn) {\n\n        this._data.forEach(function (item) {\n            item.geometry = transferFn(item);\n        });\n    } else {\n\n        this._data.forEach(function (item) {\n            if (!item.geometry) {\n                if (item.lng && item.lat) {\n                    item.geometry = {\n                        type: 'Point',\n                        coordinates: [item.lng, item.lat]\n                    };\n                } else if (item.city) {\n                    var center = cityCenter.getCenterByCityName(item.city);\n                    if (center) {\n                        item.geometry = {\n                            type: 'Point',\n                            coordinates: [center.lng, center.lat]\n                        };\n                    }\n                }\n            }\n        });\n    }\n};\n\n/**\n * 获取当前列的最大值\n */\nDataSet.prototype.getMax = function (columnName) {\n    var data = this._data;\n\n    if (!data || data.length <= 0) {\n        return;\n    }\n\n    var max = parseFloat(data[0][columnName]);\n\n    for (var i = 1; i < data.length; i++) {\n        var value = parseFloat(data[i][columnName]);\n        if (value > max) {\n            max = value;\n        }\n    }\n\n    return max;\n};\n\n/**\n * 获取当前列的总和\n */\nDataSet.prototype.getSum = function (columnName) {\n    var data = this._data;\n\n    if (!data || data.length <= 0) {\n        return;\n    }\n\n    var sum = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        if (data[i][columnName]) {\n            sum += parseFloat(data[i][columnName]);\n        }\n    }\n\n    return sum;\n};\n\n/**\n * 获取当前列的最小值\n */\nDataSet.prototype.getMin = function (columnName) {\n    var data = this._data;\n\n    if (!data || data.length <= 0) {\n        return;\n    }\n\n    var min = parseFloat(data[0][columnName]);\n\n    for (var i = 1; i < data.length; i++) {\n        var value = parseFloat(data[i][columnName]);\n        if (value < min) {\n            min = value;\n        }\n    }\n\n    return min;\n};\n\n/**\n * 获取去重的数据\n */\nDataSet.prototype.getUnique = function (columnName) {\n    var data = this._data;\n\n    if (!data || data.length <= 0) {\n        return;\n    }\n\n    var maps = {};\n\n    for (var i = 1; i < data.length; i++) {\n        maps[data[i][columnName]] = true;\n    }\n\n    var data = [];\n    for (var key in maps) {\n        data.push(key);\n    }\n\n    return data;\n};\n\nfunction hex_corner(center, size, i) {\n    var angle_deg = 60 * i + 30;\n    var angle_rad = Math.PI / 180 * angle_deg;\n    return [center.x + size * Math.cos(angle_rad), center.y + size * Math.sin(angle_rad)];\n}\n\nfunction draw(context, x, y, size) {\n\n    for (var j = 0; j < 6; j++) {\n\n        var result = hex_corner({\n            x: x,\n            y: y\n        }, size, j);\n\n        context.lineTo(result[0], result[1]);\n    }\n}\n\n/**\n * @author kyle / http://nikai.us/\n */\n\nvar pathSimple = {\n    drawDataSet: function drawDataSet(context, dataSet, options) {\n\n        var data = dataSet instanceof DataSet ? dataSet.get() : dataSet;\n\n        for (var i = 0, len = data.length; i < len; i++) {\n            var item = data[i];\n            this.draw(context, item, options);\n        }\n    },\n    draw: function draw$$1(context, data, options) {\n        var type = data.geometry.type;\n        var coordinates = data.geometry._coordinates || data.geometry.coordinates;\n        var symbol = options.symbol || 'circle';\n        switch (type) {\n            case 'Point':\n                var size = data._size || data.size || options._size || options.size || 5;\n                if (symbol === 'circle') {\n                    if (options.bigData === 'Point') {\n                        context.moveTo(coordinates[0], coordinates[1]);\n                    }\n                    context.arc(coordinates[0], coordinates[1], size, 0, Math.PI * 2);\n                } else if (symbol === 'rect') {\n                    context.rect(coordinates[0] - size / 2, coordinates[1] - size / 2, size, size);\n                } else if (symbol === 'honeycomb') {\n                    draw(context, coordinates[0], coordinates[1], size);\n                }\n                break;\n            case 'LineString':\n                for (var j = 0; j < coordinates.length; j++) {\n                    var x = coordinates[j][0];\n                    var y = coordinates[j][1];\n                    if (j == 0) {\n                        context.moveTo(x, y);\n                    } else {\n                        context.lineTo(x, y);\n                    }\n                }\n                break;\n            case 'Polygon':\n                this.drawPolygon(context, coordinates);\n                break;\n            case 'MultiPolygon':\n                for (var i = 0; i < coordinates.length; i++) {\n                    var polygon = coordinates[i];\n                    this.drawPolygon(context, polygon);\n                }\n                context.closePath();\n                break;\n            default:\n                console.log('type' + type + 'is not support now!');\n                break;\n        }\n    },\n\n    drawPolygon: function drawPolygon(context, coordinates) {\n\n        for (var i = 0; i < coordinates.length; i++) {\n\n            var coordinate = coordinates[i];\n\n            context.moveTo(coordinate[0][0], coordinate[0][1]);\n            for (var j = 1; j < coordinate.length; j++) {\n                context.lineTo(coordinate[j][0], coordinate[j][1]);\n            }\n            context.lineTo(coordinate[0][0], coordinate[0][1]);\n        }\n    }\n\n};\n\n/**\n * @author kyle / http://nikai.us/\n */\n\nvar drawSimple = {\n    draw: function draw(context, dataSet, options) {\n\n        var data = dataSet instanceof DataSet ? dataSet.get() : dataSet;\n\n        // console.log('xxxx',options)\n        context.save();\n\n        for (var key in options) {\n            context[key] = options[key];\n        }\n\n        // console.log(data);\n        if (options.bigData) {\n            context.save();\n            context.beginPath();\n\n            for (var i = 0, len = data.length; i < len; i++) {\n\n                var item = data[i];\n\n                pathSimple.draw(context, item, options);\n            }\n\n            var type = options.bigData;\n\n            if (type == 'Point' || type == 'Polygon' || type == 'MultiPolygon') {\n\n                context.fill();\n\n                if ((item.strokeStyle || options.strokeStyle) && options.lineWidth) {\n                    context.stroke();\n                }\n            } else if (type == 'LineString') {\n                context.stroke();\n            }\n\n            context.restore();\n        } else {\n\n            for (var i = 0, len = data.length; i < len; i++) {\n\n                var item = data[i];\n\n                context.save();\n\n                if (item.fillStyle || item._fillStyle) {\n                    context.fillStyle = item.fillStyle || item._fillStyle;\n                }\n\n                if (item.strokeStyle || item._strokeStyle) {\n                    context.strokeStyle = item.strokeStyle || item._strokeStyle;\n                }\n\n                var type = item.geometry.type;\n\n                context.beginPath();\n\n                pathSimple.draw(context, item, options);\n\n                if (type == 'Point' || type == 'Polygon' || type == 'MultiPolygon') {\n\n                    context.fill();\n\n                    if ((item.strokeStyle || options.strokeStyle) && options.lineWidth) {\n                        context.stroke();\n                    }\n                } else if (type == 'LineString') {\n                    if (item.lineWidth || item._lineWidth) {\n                        context.lineWidth = item.lineWidth || item._lineWidth;\n                    }\n                    context.stroke();\n                }\n\n                context.restore();\n            }\n        }\n\n        context.restore();\n    }\n};\n\nfunction Canvas(width, height) {\n\n    var canvas;\n\n    if (typeof document === 'undefined') {\n\n        // var Canvas = require('canvas');\n        // canvas = new Canvas(width, height);\n\n    } else {\n\n        var canvas = document.createElement('canvas');\n\n        if (width) {\n            canvas.width = width;\n        }\n\n        if (height) {\n            canvas.height = height;\n        }\n    }\n\n    return canvas;\n}\n\n/**\n * @author kyle / http://nikai.us/\n */\n\n/**\n * Category\n * @param {Object} [options]   Available options:\n *                             {Object} gradient: { 0.25: \"rgb(0,0,255)\", 0.55: \"rgb(0,255,0)\", 0.85: \"yellow\", 1.0: \"rgb(255,0,0)\"}\n */\nfunction Intensity(options) {\n\n    options = options || {};\n    this.gradient = options.gradient || {\n        0.25: \"rgba(0, 0, 255, 1)\",\n        0.55: \"rgba(0, 255, 0, 1)\",\n        0.85: \"rgba(255, 255, 0, 1)\",\n        1.0: \"rgba(255, 0, 0, 1)\"\n    };\n    this.maxSize = options.maxSize || 35;\n    this.minSize = options.minSize || 0;\n    this.max = options.max || 100;\n    this.min = options.min || 0;\n    this.initPalette();\n}\n\nIntensity.prototype.setMax = function (value) {\n    this.max = value || 100;\n};\n\nIntensity.prototype.setMin = function (value) {\n    this.min = value || 0;\n};\n\nIntensity.prototype.setMaxSize = function (maxSize) {\n    this.maxSize = maxSize || 35;\n};\n\nIntensity.prototype.setMinSize = function (minSize) {\n    this.minSize = minSize || 0;\n};\n\nIntensity.prototype.initPalette = function () {\n\n    var gradient = this.gradient;\n\n    var canvas = new Canvas(256, 1);\n\n    var paletteCtx = this.paletteCtx = canvas.getContext('2d');\n\n    var lineGradient = paletteCtx.createLinearGradient(0, 0, 256, 1);\n\n    for (var key in gradient) {\n        lineGradient.addColorStop(parseFloat(key), gradient[key]);\n    }\n\n    paletteCtx.fillStyle = lineGradient;\n    paletteCtx.fillRect(0, 0, 256, 1);\n};\n\nIntensity.prototype.getColor = function (value) {\n\n    var imageData = this.getImageData(value);\n\n    return \"rgba(\" + imageData[0] + \", \" + imageData[1] + \", \" + imageData[2] + \", \" + imageData[3] / 256 + \")\";\n};\n\nIntensity.prototype.getImageData = function (value) {\n\n    var imageData = this.paletteCtx.getImageData(0, 0, 256, 1).data;\n\n    if (value === undefined) {\n        return imageData;\n    }\n\n    var max = this.max;\n    var min = this.min;\n\n    if (value > max) {\n        value = max;\n    }\n\n    if (value < min) {\n        value = min;\n    }\n\n    var index = Math.floor((value - min) / (max - min) * (256 - 1)) * 4;\n\n    return [imageData[index], imageData[index + 1], imageData[index + 2], imageData[index + 3]];\n};\n\n/**\n * @param Number value \n * @param Number max of value\n * @param Number max of size\n * @param Object other options\n */\nIntensity.prototype.getSize = function (value) {\n\n    var size = 0;\n    var max = this.max;\n    var min = this.min;\n    var maxSize = this.maxSize;\n    var minSize = this.minSize;\n\n    if (value > max) {\n        value = max;\n    }\n\n    if (value < min) {\n        value = min;\n    }\n\n    size = minSize + (value - min) / (max - min) * (maxSize - minSize);\n\n    return size;\n};\n\nIntensity.prototype.getLegend = function (options) {\n    var gradient = this.gradient;\n\n    var width = options.width || 20;\n    var height = options.height || 180;\n\n    var canvas = new Canvas(width, height);\n\n    var paletteCtx = canvas.getContext('2d');\n\n    var lineGradient = paletteCtx.createLinearGradient(0, height, 0, 0);\n\n    for (var key in gradient) {\n        lineGradient.addColorStop(parseFloat(key), gradient[key]);\n    }\n\n    paletteCtx.fillStyle = lineGradient;\n    paletteCtx.fillRect(0, 0, width, height);\n\n    return canvas;\n};\n\nvar global$1 = typeof window === 'undefined' ? {} : window;\n\nvar devicePixelRatio = global$1.devicePixelRatio || 1;\n\n/**\n * @author kyle / http://nikai.us/\n */\n\nfunction createCircle(size) {\n\n    var shadowBlur = size / 2;\n    var r2 = size + shadowBlur;\n    var offsetDistance = 10000;\n\n    var circle = new Canvas(r2 * 2, r2 * 2);\n    var context = circle.getContext('2d');\n\n    context.shadowBlur = shadowBlur;\n    context.shadowColor = 'black';\n    context.shadowOffsetX = context.shadowOffsetY = offsetDistance;\n\n    context.beginPath();\n    context.arc(r2 - offsetDistance, r2 - offsetDistance, size, 0, Math.PI * 2, true);\n    context.closePath();\n    context.fill();\n    return circle;\n}\n\nfunction colorize(pixels, gradient, options) {\n\n    var maxOpacity = options.maxOpacity || 0.8;\n    for (var i = 3, len = pixels.length, j; i < len; i += 4) {\n        j = pixels[i] * 4; // get gradient color from opacity value\n\n        if (pixels[i] / 256 > maxOpacity) {\n            pixels[i] = 256 * maxOpacity;\n        }\n\n        pixels[i - 3] = gradient[j];\n        pixels[i - 2] = gradient[j + 1];\n        pixels[i - 1] = gradient[j + 2];\n    }\n}\n\nfunction drawGray(context, dataSet, options) {\n\n    var max = options.max || 100;\n    var min = options.min || 0;\n    // console.log(max)\n    var size = options._size;\n    if (size == undefined) {\n        size = options.size;\n        if (size == undefined) {\n            size = 13;\n        }\n    }\n\n    var intensity = new Intensity({\n        gradient: options.gradient,\n        max: max,\n        min: min\n    });\n\n    var circle = createCircle(size);\n    var circleHalfWidth = circle.width / 2;\n    var circleHalfHeight = circle.height / 2;\n\n    var data = dataSet;\n\n    var dataOrderByAlpha = {};\n\n    data.forEach(function (item, index) {\n        var count = item.count === undefined ? 1 : item.count;\n        var alpha = Math.min(1, count / max).toFixed(2);\n        dataOrderByAlpha[alpha] = dataOrderByAlpha[alpha] || [];\n        dataOrderByAlpha[alpha].push(item);\n    });\n\n    for (var i in dataOrderByAlpha) {\n        if (isNaN(i)) continue;\n        var _data = dataOrderByAlpha[i];\n        context.beginPath();\n        if (!options.withoutAlpha) {\n            context.globalAlpha = i;\n        }\n        context.strokeStyle = intensity.getColor(i * max);\n        _data.forEach(function (item, index) {\n            if (!item.geometry) {\n                return;\n            }\n\n            var coordinates = item.geometry._coordinates || item.geometry.coordinates;\n            var type = item.geometry.type;\n            if (type === 'Point') {\n                var count = item.count === undefined ? 1 : item.count;\n                context.globalAlpha = count / max;\n                context.drawImage(circle, coordinates[0] - circleHalfWidth, coordinates[1] - circleHalfHeight);\n            } else if (type === 'LineString') {\n                var count = item.count === undefined ? 1 : item.count;\n                context.globalAlpha = count / max;\n                context.beginPath();\n                pathSimple.draw(context, item, options);\n                context.stroke();\n            } else if (type === 'Polygon') {}\n        });\n    }\n}\n\nfunction draw$1(context, dataSet, options) {\n    if (context.canvas.width <= 0 || context.canvas.height <= 0) {\n        return;\n    }\n\n    var strength = options.strength || 0.3;\n    context.strokeStyle = 'rgba(0,0,0,' + strength + ')';\n\n    var shadowCanvas = new Canvas(context.canvas.width, context.canvas.height);\n    var shadowContext = shadowCanvas.getContext('2d');\n    shadowContext.scale(devicePixelRatio, devicePixelRatio);\n\n    options = options || {};\n\n    var data = dataSet instanceof DataSet ? dataSet.get() : dataSet;\n\n    context.save();\n\n    var intensity = new Intensity({\n        gradient: options.gradient\n    });\n\n    //console.time('drawGray')\n    drawGray(shadowContext, data, options);\n\n    //console.timeEnd('drawGray');\n    // return false;\n    if (!options.absolute) {\n        //console.time('changeColor');\n        var colored = shadowContext.getImageData(0, 0, context.canvas.width, context.canvas.height);\n        colorize(colored.data, intensity.getImageData(), options);\n        //console.timeEnd('changeColor');\n        context.putImageData(colored, 0, 0);\n\n        context.restore();\n    }\n\n    intensity = null;\n    shadowCanvas = null;\n}\n\nvar drawHeatmap = {\n    draw: draw$1\n};\n\n/**\n * @author kyle / http://nikai.us/\n */\n\nvar drawGrid = {\n    draw: function draw(context, dataSet, options) {\n\n        context.save();\n\n        var data = dataSet instanceof DataSet ? dataSet.get() : dataSet;\n\n        var grids = {};\n\n        var size = options._size || options.size || 50;\n\n        var offset = options.offset || {\n            x: 0,\n            y: 0\n        };\n\n        for (var i = 0; i < data.length; i++) {\n            var coordinates = data[i].geometry._coordinates || data[i].geometry.coordinates;\n            var gridKey = Math.floor((coordinates[0] - offset.x) / size) + \",\" + Math.floor((coordinates[1] - offset.y) / size);\n            if (!grids[gridKey]) {\n                grids[gridKey] = 0;\n            }\n            grids[gridKey] += ~~(data[i].count || 1);\n        }\n\n        var intensity = new Intensity({\n            max: options.max || 100,\n            gradient: options.gradient\n        });\n\n        for (var gridKey in grids) {\n            gridKey = gridKey.split(\",\");\n\n            context.beginPath();\n            context.rect(gridKey[0] * size + .5 + offset.x, gridKey[1] * size + .5 + offset.y, size, size);\n            context.fillStyle = intensity.getColor(grids[gridKey]);\n            context.fill();\n            if (options.strokeStyle && options.lineWidth) {\n                context.stroke();\n            }\n        }\n\n        if (options.label && options.label.show !== false) {\n\n            context.fillStyle = options.label.fillStyle || 'white';\n\n            if (options.label.font) {\n                context.font = options.label.font;\n            }\n\n            if (options.label.shadowColor) {\n                context.shadowColor = options.label.shadowColor;\n            }\n\n            if (options.label.shadowBlur) {\n                context.shadowBlur = options.label.shadowBlur;\n            }\n\n            for (var gridKey in grids) {\n                gridKey = gridKey.split(\",\");\n                var text = grids[gridKey];\n                var textWidth = context.measureText(text).width;\n                context.fillText(text, gridKey[0] * size + .5 + offset.x + size / 2 - textWidth / 2, gridKey[1] * size + .5 + offset.y + size / 2 + 5);\n            }\n        }\n\n        context.restore();\n    }\n};\n\n/**\n * @author kyle / http://nikai.us/\n */\n\nfunction hex_corner$1(center, size, i) {\n    var angle_deg = 60 * i + 30;\n    var angle_rad = Math.PI / 180 * angle_deg;\n    return [center.x + size * Math.cos(angle_rad), center.y + size * Math.sin(angle_rad)];\n}\n\nvar drawHoneycomb = {\n    draw: function draw(context, dataSet, options) {\n\n        context.save();\n\n        var data = dataSet instanceof DataSet ? dataSet.get() : dataSet;\n\n        for (var key in options) {\n            context[key] = options[key];\n        }\n\n        var grids = {};\n\n        var offset = options.offset || {\n            x: 10,\n            y: 10\n        };\n\n        var r = options._size || options.size || 40;\n        r = r / 2 / Math.sin(Math.PI / 3);\n        var dx = r * 2 * Math.sin(Math.PI / 3);\n        var dy = r * 1.5;\n\n        var binsById = {};\n\n        for (var i = 0; i < data.length; i++) {\n            var coordinates = data[i].geometry._coordinates || data[i].geometry.coordinates;\n            var py = (coordinates[1] - offset.y) / dy,\n                pj = Math.round(py),\n                px = (coordinates[0] - offset.x) / dx - (pj & 1 ? .5 : 0),\n                pi = Math.round(px),\n                py1 = py - pj;\n\n            if (Math.abs(py1) * 3 > 1) {\n                var px1 = px - pi,\n                    pi2 = pi + (px < pi ? -1 : 1) / 2,\n                    pj2 = pj + (py < pj ? -1 : 1),\n                    px2 = px - pi2,\n                    py2 = py - pj2;\n                if (px1 * px1 + py1 * py1 > px2 * px2 + py2 * py2) pi = pi2 + (pj & 1 ? 1 : -1) / 2, pj = pj2;\n            }\n\n            var id = pi + \"-\" + pj,\n                bin = binsById[id];\n            if (bin) {\n                bin.push(data[i]);\n            } else {\n                bin = binsById[id] = [data[i]];\n                bin.i = pi;\n                bin.j = pj;\n                bin.x = (pi + (pj & 1 ? 1 / 2 : 0)) * dx;\n                bin.y = pj * dy;\n            }\n        }\n\n        var intensity = new Intensity({\n            max: options.max || 100,\n            maxSize: r,\n            gradient: options.gradient\n        });\n\n        for (var key in binsById) {\n\n            var item = binsById[key];\n\n            context.beginPath();\n\n            for (var j = 0; j < 6; j++) {\n\n                var result = hex_corner$1({\n                    x: item.x + offset.x,\n                    y: item.y + offset.y\n                }, r, j);\n\n                context.lineTo(result[0], result[1]);\n            }\n\n            context.closePath();\n\n            var count = 0;\n            for (var i = 0; i < item.length; i++) {\n                count += item[i].count || 1;\n            }\n            item.count = count;\n\n            context.fillStyle = intensity.getColor(count);\n            context.fill();\n            if (options.strokeStyle && options.lineWidth) {\n                context.stroke();\n            }\n        }\n\n        if (options.label && options.label.show !== false) {\n\n            context.fillStyle = options.label.fillStyle || 'white';\n\n            if (options.label.font) {\n                context.font = options.label.font;\n            }\n\n            if (options.label.shadowColor) {\n                context.shadowColor = options.label.shadowColor;\n            }\n\n            if (options.label.shadowBlur) {\n                context.shadowBlur = options.label.shadowBlur;\n            }\n\n            for (var key in binsById) {\n                var item = binsById[key];\n                var text = item.count;\n                if (text < 0) {\n                    text = text.toFixed(2);\n                } else {\n                    text = ~~text;\n                }\n                var textWidth = context.measureText(text).width;\n                context.fillText(text, item.x + offset.x - textWidth / 2, item.y + offset.y + 5);\n            }\n        }\n\n        context.restore();\n    }\n};\n\nfunction createShader(gl, src, type) {\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, src);\n    gl.compileShader(shader);\n    return shader;\n}\n\nfunction initShaders(gl, vs_source, fs_source) {\n\n    var vertexShader = createShader(gl, vs_source, gl.VERTEX_SHADER);\n    var fragmentShader = createShader(gl, fs_source, gl.FRAGMENT_SHADER);\n\n    var glProgram = gl.createProgram();\n\n    gl.attachShader(glProgram, vertexShader);\n    gl.attachShader(glProgram, fragmentShader);\n    gl.linkProgram(glProgram);\n\n    gl.useProgram(glProgram);\n\n    return glProgram;\n}\n\nfunction getColorData(color) {\n    var tmpCanvas = document.createElement('canvas');\n    var tmpCtx = tmpCanvas.getContext('2d');\n    tmpCanvas.width = 1;\n    tmpCanvas.height = 1;\n    tmpCtx.fillStyle = color;\n    tmpCtx.fillRect(0, 0, 1, 1);\n    return tmpCtx.getImageData(0, 0, 1, 1).data;\n}\n\nvar vs_s = ['attribute vec4 a_Position;', 'void main() {', 'gl_Position = a_Position;', 'gl_PointSize = 30.0;', '}'].join('');\n\nvar fs_s = ['precision mediump float;', 'uniform vec4 u_FragColor;', 'void main() {', 'gl_FragColor = u_FragColor;', '}'].join('');\n\nfunction draw$2(gl, data, options) {\n\n    if (!data) {\n        return;\n    }\n\n    var program = initShaders(gl, vs_s, fs_s);\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n\n    //gl.clearColor(0.0, 0.0, 1.0, 1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    var halfCanvasWidth = gl.canvas.width / 2;\n    var halfCanvasHeight = gl.canvas.height / 2;\n\n    // Create a buffer object\n    var vertexBuffer = gl.createBuffer();\n    // Bind the buffer object to target\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n\n    var a_Position = gl.getAttribLocation(program, 'a_Position');\n    // Assign the buffer object to a_Position variable\n    gl.vertexAttribPointer(a_Position, 2, gl.FLOAT, false, 0, 0);\n\n    // Enable the assignment to a_Position variable\n    gl.enableVertexAttribArray(a_Position);\n\n    var uFragColor = gl.getUniformLocation(program, 'u_FragColor');\n\n    var colored = getColorData(options.strokeStyle || 'red');\n\n    gl.uniform4f(uFragColor, colored[0] / 255, colored[1] / 255, colored[2] / 255, colored[3] / 255);\n\n    gl.lineWidth(options.lineWidth || 1);\n\n    for (var i = 0, len = data.length; i < len; i++) {\n        var _geometry = data[i].geometry._coordinates;\n\n        var verticesData = [];\n\n        for (var j = 0; j < _geometry.length; j++) {\n            var item = _geometry[j];\n\n            var x = (item[0] - halfCanvasWidth) / halfCanvasWidth;\n            var y = (halfCanvasHeight - item[1]) / halfCanvasHeight;\n            verticesData.push(x, y);\n        }\n\n        var vertices = new Float32Array(verticesData);\n        // Write date into the buffer object\n        gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n        gl.drawArrays(gl.LINE_STRIP, 0, _geometry.length);\n    }\n}\n\nvar line = {\n    draw: draw$2\n};\n\nvar vs_s$1 = ['attribute vec4 a_Position;', 'attribute float a_PointSize;', 'void main() {', 'gl_Position = a_Position;', 'gl_PointSize = a_PointSize;', '}'].join('');\n\nvar fs_s$1 = ['precision mediump float;', 'uniform vec4 u_FragColor;', 'void main() {', 'gl_FragColor = u_FragColor;', '}'].join('');\n\nfunction draw$3(gl, data, options) {\n\n    if (!data) {\n        return;\n    }\n\n    var program = initShaders(gl, vs_s$1, fs_s$1);\n\n    var a_Position = gl.getAttribLocation(program, 'a_Position');\n\n    var a_PointSize = gl.getAttribLocation(program, 'a_PointSize');\n\n    var uFragColor = gl.getUniformLocation(program, 'u_FragColor');\n\n    //gl.clearColor(0.0, 0.0, 1.0, 1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    var halfCanvasWidth = gl.canvas.width / 2;\n    var halfCanvasHeight = gl.canvas.height / 2;\n\n    var verticesData = [];\n    var count = 0;\n    for (var i = 0; i < data.length; i++) {\n        var item = data[i].geometry._coordinates;\n\n        var x = (item[0] - halfCanvasWidth) / halfCanvasWidth;\n        var y = (halfCanvasHeight - item[1]) / halfCanvasHeight;\n\n        if (x < -1 || x > 1 || y < -1 || y > 1) {\n            continue;\n        }\n        verticesData.push(x, y);\n        count++;\n    }\n\n    var vertices = new Float32Array(verticesData);\n    var n = count; // The number of vertices\n\n    // Create a buffer object\n    var vertexBuffer = gl.createBuffer();\n\n    // Bind the buffer object to target\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    // Write date into the buffer object\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n\n    // Assign the buffer object to a_Position variable\n    gl.vertexAttribPointer(a_Position, 2, gl.FLOAT, false, 0, 0);\n\n    // Enable the assignment to a_Position variable\n    gl.enableVertexAttribArray(a_Position);\n\n    gl.vertexAttrib1f(a_PointSize, options._size);\n\n    var colored = getColorData(options.fillStyle || 'red');\n\n    gl.uniform4f(uFragColor, colored[0] / 255, colored[1] / 255, colored[2] / 255, colored[3] / 255);\n    gl.drawArrays(gl.POINTS, 0, n);\n}\n\nvar point = {\n    draw: draw$3\n};\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, size;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and size are later used to transform coords into integers for z-order calculation\n        size = Math.max(maxX - minX, maxY - minY);\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, size);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === signedArea(data, start, end, dim) > 0) {\n        for (i = start; i < end; i += dim) {\n            last = insertNode(i, data[i], data[i + 1], last);\n        }\n    } else {\n        for (i = end - dim; i >= start; i -= dim) {\n            last = insertNode(i, data[i], data[i + 1], last);\n        }\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) return null;\n            again = true;\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, size, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && size) indexCurve(ear, minX, minY, size);\n\n    var stop = ear,\n        prev,\n        next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (size ? isEarHashed(ear, minX, minY, size) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertice leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, size, 1);\n\n                // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(ear, triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, size, 2);\n\n                // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, size);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, size) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? a.x < c.x ? a.x : c.x : b.x < c.x ? b.x : c.x,\n        minTY = a.y < b.y ? a.y < c.y ? a.y : c.y : b.y < c.y ? b.y : c.y,\n        maxTX = a.x > b.x ? a.x > c.x ? a.x : c.x : b.x > c.x ? b.x : c.x,\n        maxTY = a.y > b.y ? a.y > c.y ? a.y : c.y : b.y > c.y ? b.y : c.y;\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, size),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, size);\n\n    // first look for points inside the triangle in increasing z-order\n    var p = ear.nextZ;\n\n    while (p && p.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.nextZ;\n    }\n\n    // then look for points in decreasing z-order\n    p = ear.prevZ;\n\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return p;\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, size) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, size);\n                earcutLinked(c, triangles, dim, minX, minY, size);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i,\n        len,\n        start,\n        end,\n        list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        var b = splitPolygon(outerNode, hole);\n        filterPoints(b, b.next);\n    }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m.prev; // hole touches outer segment; pick lower endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m.next;\n\n    while (p !== stop) {\n        if (hx >= p.x && p.x >= mx && pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if ((tan < tanMin || tan === tanMin && p.x > m.x) && locallyInside(p, hole)) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    }\n\n    return m;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, size) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, size);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i,\n        p,\n        q,\n        e,\n        tail,\n        numMerges,\n        pSize,\n        qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n\n            qSize = inSize;\n\n            while (pSize > 0 || qSize > 0 && q) {\n\n                if (pSize === 0) {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                } else if (qSize === 0 || !q) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else if (p.z <= q.z) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and size of the data bounding box\nfunction zOrder(x, y, minX, minY, size) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) / size;\n    y = 32767 * (y - minY) / size;\n\n    x = (x | x << 8) & 0x00FF00FF;\n    x = (x | x << 4) & 0x0F0F0F0F;\n    x = (x | x << 2) & 0x33333333;\n    x = (x | x << 1) & 0x55555555;\n\n    y = (y | y << 8) & 0x00FF00FF;\n    y = (y | y << 4) & 0x0F0F0F0F;\n    y = (y | y << 2) & 0x33333333;\n    y = (y | y << 1) & 0x55555555;\n\n    return x | y << 1;\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b);\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    if (equals(p1, q1) && equals(p2, q2) || equals(p1, q2) && equals(p2, q1)) return true;\n    return area(p1, q1, p2) > 0 !== area(p1, q1, q2) > 0 && area(p2, q2, p1) > 0 !== area(p2, q2, q1) > 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i && intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (p.y > py !== p.next.y > py && px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x) inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertice index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertice nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs((data[a] - data[c]) * (data[b + 1] - data[a + 1]) - (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 : Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = { vertices: [], holes: [], dimensions: dim },\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) {\n                result.vertices.push(data[i][j][d]);\n            }\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n\nvar vs_s$2 = ['attribute vec4 a_Position;', 'void main() {', 'gl_Position = a_Position;', 'gl_PointSize = 30.0;', '}'].join('');\n\nvar fs_s$2 = ['precision mediump float;', 'uniform vec4 u_FragColor;', 'void main() {', 'gl_FragColor = u_FragColor;', '}'].join('');\n\nfunction draw$4(gl, data, options) {\n\n    if (!data) {\n        return;\n    }\n\n    // gl.clearColor(0.0, 0.0, 0.0, 1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n\n    var program = initShaders(gl, vs_s$2, fs_s$2);\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n\n    var halfCanvasWidth = gl.canvas.width / 2;\n    var halfCanvasHeight = gl.canvas.height / 2;\n\n    // Bind the buffer object to target\n    gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gl.createBuffer());\n\n    var a_Position = gl.getAttribLocation(program, 'a_Position');\n    // Assign the buffer object to a_Position variable\n    gl.vertexAttribPointer(a_Position, 2, gl.FLOAT, false, 0, 0);\n\n    // Enable the assignment to a_Position variable\n    gl.enableVertexAttribArray(a_Position);\n\n    var uFragColor = gl.getUniformLocation(program, 'u_FragColor');\n\n    var colored = getColorData(options.fillStyle || 'red');\n\n    gl.uniform4f(uFragColor, colored[0] / 255, colored[1] / 255, colored[2] / 255, colored[3] / 255);\n\n    gl.lineWidth(options.lineWidth || 1);\n\n    var verticesArr = [];\n    var trianglesArr = [];\n\n    var maxSize = 65536;\n    var indexOffset = 0;\n\n    for (var i = 0, len = data.length; i < len; i++) {\n\n        var flatten = earcut.flatten(data[i].geometry._coordinates || data[i].geometry.coordinates);\n        var vertices = flatten.vertices;\n        indexOffset = verticesArr.length / 2;\n        for (var j = 0; j < vertices.length; j += 2) {\n            vertices[j] = (vertices[j] - halfCanvasWidth) / halfCanvasWidth;\n            vertices[j + 1] = (halfCanvasHeight - vertices[j + 1]) / halfCanvasHeight;\n        }\n\n        if ((verticesArr.length + vertices.length) / 2 > maxSize) {\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verticesArr), gl.STATIC_DRAW);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(trianglesArr), gl.STATIC_DRAW);\n            gl.drawElements(gl.TRIANGLES, trianglesArr.length, gl.UNSIGNED_SHORT, 0);\n            verticesArr.length = 0;\n            trianglesArr.length = 0;\n            indexOffset = 0;\n        }\n\n        for (var j = 0; j < vertices.length; j++) {\n            verticesArr.push(vertices[j]);\n        }\n\n        var triangles = earcut(vertices, flatten.holes, flatten.dimensions);\n        for (var j = 0; j < triangles.length; j++) {\n            trianglesArr.push(triangles[j] + indexOffset);\n        }\n    }\n\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verticesArr), gl.STATIC_DRAW);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(trianglesArr), gl.STATIC_DRAW);\n    gl.drawElements(gl.TRIANGLES, trianglesArr.length, gl.UNSIGNED_SHORT, 0);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n}\n\nvar polygon = {\n    draw: draw$4\n};\n\n/**\n * @author kyle / http://nikai.us/\n */\nvar webglDrawSimple = {\n    draw: function draw(gl, dataSet, options) {\n        var data = dataSet instanceof DataSet ? dataSet.get() : dataSet;\n        if (data.length > 0) {\n            if (data[0].geometry.type == \"LineString\") {\n                line.draw(gl, data, options);\n            } else if (data[0].geometry.type == \"Polygon\" || data[0].geometry.type == \"MultiPolygon\") {\n                polygon.draw(gl, data, options);\n            } else {\n                point.draw(gl, data, options);\n            }\n        }\n    }\n};\n\n/**\n  * 根据弧线的坐标节点数组\n  */\nfunction getCurvePoints(points, options) {\n  options = options || {};\n  var curvePoints = [];\n  for (var i = 0; i < points.length - 1; i++) {\n    var p = getCurveByTwoPoints(points[i], points[i + 1], options.count);\n    if (p && p.length > 0) {\n      curvePoints = curvePoints.concat(p);\n    }\n  }\n  return curvePoints;\n}\n\n/**\n * 根据两点获取曲线坐标点数组\n * @param Point 起点\n * @param Point 终点\n */\nfunction getCurveByTwoPoints(obj1, obj2, count) {\n  if (!obj1 || !obj2) {\n    return null;\n  }\n\n  var B1 = function B1(x) {\n    return 1 - 2 * x + x * x;\n  };\n  var B2 = function B2(x) {\n    return 2 * x - 2 * x * x;\n  };\n  var B3 = function B3(x) {\n    return x * x;\n  };\n\n  var curveCoordinates = [];\n\n  var count = count || 40; // 曲线是由一些小的线段组成的，这个表示这个曲线所有到的折线的个数\n  var isFuture = false;\n  var t, h, h2, lat3, lng3, j, t2;\n  var LnArray = [];\n  var i = 0;\n  var inc = 0;\n\n  if (typeof obj2 == \"undefined\") {\n    if (typeof curveCoordinates != \"undefined\") {\n      curveCoordinates = [];\n    }\n    return;\n  }\n\n  var lat1 = parseFloat(obj1.lat);\n  var lat2 = parseFloat(obj2.lat);\n  var lng1 = parseFloat(obj1.lng);\n  var lng2 = parseFloat(obj2.lng);\n\n  // 计算曲线角度的方法\n  if (lng2 > lng1) {\n    if (parseFloat(lng2 - lng1) > 180) {\n      if (lng1 < 0) {\n        lng1 = parseFloat(180 + 180 + lng1);\n      }\n    }\n  }\n\n  if (lng1 > lng2) {\n    if (parseFloat(lng1 - lng2) > 180) {\n      if (lng2 < 0) {\n        lng2 = parseFloat(180 + 180 + lng2);\n      }\n    }\n  }\n  j = 0;\n  t2 = 0;\n  if (lat2 == lat1) {\n    t = 0;\n    h = lng1 - lng2;\n  } else if (lng2 == lng1) {\n    t = Math.PI / 2;\n    h = lat1 - lat2;\n  } else {\n    t = Math.atan((lat2 - lat1) / (lng2 - lng1));\n    h = (lat2 - lat1) / Math.sin(t);\n  }\n  if (t2 == 0) {\n    t2 = t + Math.PI / 5;\n  }\n  h2 = h / 2;\n  lng3 = h2 * Math.cos(t2) + lng1;\n  lat3 = h2 * Math.sin(t2) + lat1;\n\n  for (i = 0; i < count + 1; i++) {\n    curveCoordinates.push([lng1 * B1(inc) + lng3 * B2(inc) + lng2 * B3(inc), lat1 * B1(inc) + lat3 * B2(inc) + lat2 * B3(inc)]);\n    inc = inc + 1 / count;\n  }\n  return curveCoordinates;\n}\n\nvar curve = {\n  getPoints: getCurvePoints\n};\n\n/* \nFDEB algorithm implementation [www.win.tue.nl/~dholten/papers/forcebundles_eurovis.pdf].\n\nAuthor:  (github.com/upphiminn)\n2013\n\n*/\n\nvar ForceEdgeBundling = function ForceEdgeBundling() {\n    var data_nodes = {},\n        // {'nodeid':{'x':,'y':},..}\n    data_edges = [],\n        // [{'source':'nodeid1', 'target':'nodeid2'},..]\n    compatibility_list_for_edge = [],\n        subdivision_points_for_edge = [],\n        K = 0.1,\n        // global bundling constant controling edge stiffness\n    S_initial = 0.1,\n        // init. distance to move points\n    P_initial = 1,\n        // init. subdivision number\n    P_rate = 2,\n        // subdivision rate increase\n    C = 6,\n        // number of cycles to perform\n    I_initial = 70,\n        // init. number of iterations for cycle\n    I_rate = 0.6666667,\n        // rate at which iteration number decreases i.e. 2/3\n    compatibility_threshold = 0.6,\n        invers_quadratic_mode = false,\n        eps = 1e-8;\n\n    /*** Geometry Helper Methods ***/\n    function vector_dot_product(p, q) {\n        return p.x * q.x + p.y * q.y;\n    }\n\n    function edge_as_vector(P) {\n        return { 'x': data_nodes[P.target].x - data_nodes[P.source].x,\n            'y': data_nodes[P.target].y - data_nodes[P.source].y };\n    }\n\n    function edge_length(e) {\n        return Math.sqrt(Math.pow(data_nodes[e.source].x - data_nodes[e.target].x, 2) + Math.pow(data_nodes[e.source].y - data_nodes[e.target].y, 2));\n    }\n\n    function custom_edge_length(e) {\n        return Math.sqrt(Math.pow(e.source.x - e.target.x, 2) + Math.pow(e.source.y - e.target.y, 2));\n    }\n\n    function edge_midpoint(e) {\n        var middle_x = (data_nodes[e.source].x + data_nodes[e.target].x) / 2.0;\n        var middle_y = (data_nodes[e.source].y + data_nodes[e.target].y) / 2.0;\n        return { 'x': middle_x, 'y': middle_y };\n    }\n\n    function compute_divided_edge_length(e_idx) {\n        var length = 0;\n        for (var i = 1; i < subdivision_points_for_edge[e_idx].length; i++) {\n            var segment_length = euclidean_distance(subdivision_points_for_edge[e_idx][i], subdivision_points_for_edge[e_idx][i - 1]);\n            length += segment_length;\n        }\n        return length;\n    }\n\n    function euclidean_distance(p, q) {\n        return Math.sqrt(Math.pow(p.x - q.x, 2) + Math.pow(p.y - q.y, 2));\n    }\n\n    function project_point_on_line(p, Q) {\n        var L = Math.sqrt((Q.target.x - Q.source.x) * (Q.target.x - Q.source.x) + (Q.target.y - Q.source.y) * (Q.target.y - Q.source.y));\n        var r = ((Q.source.y - p.y) * (Q.source.y - Q.target.y) - (Q.source.x - p.x) * (Q.target.x - Q.source.x)) / (L * L);\n\n        return { 'x': Q.source.x + r * (Q.target.x - Q.source.x), 'y': Q.source.y + r * (Q.target.y - Q.source.y) };\n    }\n\n    /*** ********************** ***/\n\n    /*** Initialization Methods ***/\n    function initialize_edge_subdivisions() {\n        for (var i = 0; i < data_edges.length; i++) {\n            if (P_initial == 1) subdivision_points_for_edge[i] = []; //0 subdivisions\n            else {\n                    subdivision_points_for_edge[i] = [];\n                    subdivision_points_for_edge[i].push(data_nodes[data_edges[i].source]);\n                    subdivision_points_for_edge[i].push(data_nodes[data_edges[i].target]);\n                }\n        }\n    }\n\n    function initialize_compatibility_lists() {\n        for (var i = 0; i < data_edges.length; i++) {\n            compatibility_list_for_edge[i] = [];\n        } //0 compatible edges.\n    }\n\n    function filter_self_loops(edgelist) {\n        var filtered_edge_list = [];\n        for (var e = 0; e < edgelist.length; e++) {\n            if (data_nodes[edgelist[e].source].x != data_nodes[edgelist[e].target].x && data_nodes[edgelist[e].source].y != data_nodes[edgelist[e].target].y) {\n                //or smaller than eps\n                filtered_edge_list.push(edgelist[e]);\n            }\n        }\n\n        return filtered_edge_list;\n    }\n    /*** ********************** ***/\n\n    /*** Force Calculation Methods ***/\n    function apply_spring_force(e_idx, i, kP) {\n\n        var prev = subdivision_points_for_edge[e_idx][i - 1];\n        var next = subdivision_points_for_edge[e_idx][i + 1];\n        var crnt = subdivision_points_for_edge[e_idx][i];\n\n        var x = prev.x - crnt.x + next.x - crnt.x;\n        var y = prev.y - crnt.y + next.y - crnt.y;\n\n        x *= kP;\n        y *= kP;\n\n        return { 'x': x, 'y': y };\n    }\n\n    function apply_electrostatic_force(e_idx, i, S) {\n        var sum_of_forces = { 'x': 0, 'y': 0 };\n        var compatible_edges_list = compatibility_list_for_edge[e_idx];\n\n        for (var oe = 0; oe < compatible_edges_list.length; oe++) {\n            var force = { 'x': subdivision_points_for_edge[compatible_edges_list[oe]][i].x - subdivision_points_for_edge[e_idx][i].x,\n                'y': subdivision_points_for_edge[compatible_edges_list[oe]][i].y - subdivision_points_for_edge[e_idx][i].y };\n\n            if (Math.abs(force.x) > eps || Math.abs(force.y) > eps) {\n\n                var diff = 1 / Math.pow(custom_edge_length({ 'source': subdivision_points_for_edge[compatible_edges_list[oe]][i],\n                    'target': subdivision_points_for_edge[e_idx][i] }), 1);\n\n                sum_of_forces.x += force.x * diff;\n                sum_of_forces.y += force.y * diff;\n            }\n        }\n        return sum_of_forces;\n    }\n\n    function apply_resulting_forces_on_subdivision_points(e_idx, P, S) {\n        var kP = K / (edge_length(data_edges[e_idx]) * (P + 1)); // kP=K/|P|(number of segments), where |P| is the initial length of edge P.\n        // (length * (num of sub division pts - 1))\n        var resulting_forces_for_subdivision_points = [{ 'x': 0, 'y': 0 }];\n        for (var i = 1; i < P + 1; i++) {\n            // exclude initial end points of the edge 0 and P+1\n            var resulting_force = { 'x': 0, 'y': 0 };\n\n            var spring_force = apply_spring_force(e_idx, i, kP);\n            var electrostatic_force = apply_electrostatic_force(e_idx, i, S);\n\n            resulting_force.x = S * (spring_force.x + electrostatic_force.x);\n            resulting_force.y = S * (spring_force.y + electrostatic_force.y);\n\n            resulting_forces_for_subdivision_points.push(resulting_force);\n        }\n        resulting_forces_for_subdivision_points.push({ 'x': 0, 'y': 0 });\n        return resulting_forces_for_subdivision_points;\n    }\n    /*** ********************** ***/\n\n    /*** Edge Division Calculation Methods ***/\n    function update_edge_divisions(P) {\n        for (var e_idx = 0; e_idx < data_edges.length; e_idx++) {\n\n            if (P == 1) {\n                subdivision_points_for_edge[e_idx].push(data_nodes[data_edges[e_idx].source]); // source\n                subdivision_points_for_edge[e_idx].push(edge_midpoint(data_edges[e_idx])); // mid point\n                subdivision_points_for_edge[e_idx].push(data_nodes[data_edges[e_idx].target]); // target\n            } else {\n\n                var divided_edge_length = compute_divided_edge_length(e_idx);\n                var segment_length = divided_edge_length / (P + 1);\n                var current_segment_length = segment_length;\n                var new_subdivision_points = [];\n                new_subdivision_points.push(data_nodes[data_edges[e_idx].source]); //source\n\n                for (var i = 1; i < subdivision_points_for_edge[e_idx].length; i++) {\n                    var old_segment_length = euclidean_distance(subdivision_points_for_edge[e_idx][i], subdivision_points_for_edge[e_idx][i - 1]);\n\n                    while (old_segment_length > current_segment_length) {\n                        var percent_position = current_segment_length / old_segment_length;\n                        var new_subdivision_point_x = subdivision_points_for_edge[e_idx][i - 1].x;\n                        var new_subdivision_point_y = subdivision_points_for_edge[e_idx][i - 1].y;\n\n                        new_subdivision_point_x += percent_position * (subdivision_points_for_edge[e_idx][i].x - subdivision_points_for_edge[e_idx][i - 1].x);\n                        new_subdivision_point_y += percent_position * (subdivision_points_for_edge[e_idx][i].y - subdivision_points_for_edge[e_idx][i - 1].y);\n                        new_subdivision_points.push({ 'x': new_subdivision_point_x,\n                            'y': new_subdivision_point_y });\n\n                        old_segment_length -= current_segment_length;\n                        current_segment_length = segment_length;\n                    }\n                    current_segment_length -= old_segment_length;\n                }\n                new_subdivision_points.push(data_nodes[data_edges[e_idx].target]); //target\n                subdivision_points_for_edge[e_idx] = new_subdivision_points;\n            }\n        }\n    }\n    /*** ********************** ***/\n\n    /*** Edge compatibility measures ***/\n    function angle_compatibility(P, Q) {\n        var result = Math.abs(vector_dot_product(edge_as_vector(P), edge_as_vector(Q)) / (edge_length(P) * edge_length(Q)));\n        return result;\n    }\n\n    function scale_compatibility(P, Q) {\n        var lavg = (edge_length(P) + edge_length(Q)) / 2.0;\n        var result = 2.0 / (lavg / Math.min(edge_length(P), edge_length(Q)) + Math.max(edge_length(P), edge_length(Q)) / lavg);\n        return result;\n    }\n\n    function position_compatibility(P, Q) {\n        var lavg = (edge_length(P) + edge_length(Q)) / 2.0;\n        var midP = { 'x': (data_nodes[P.source].x + data_nodes[P.target].x) / 2.0,\n            'y': (data_nodes[P.source].y + data_nodes[P.target].y) / 2.0 };\n        var midQ = { 'x': (data_nodes[Q.source].x + data_nodes[Q.target].x) / 2.0,\n            'y': (data_nodes[Q.source].y + data_nodes[Q.target].y) / 2.0 };\n        var result = lavg / (lavg + euclidean_distance(midP, midQ));\n        return result;\n    }\n\n    function edge_visibility(P, Q) {\n        var I0 = project_point_on_line(data_nodes[Q.source], { 'source': data_nodes[P.source],\n            'target': data_nodes[P.target] });\n        var I1 = project_point_on_line(data_nodes[Q.target], { 'source': data_nodes[P.source],\n            'target': data_nodes[P.target] }); //send acutal edge points positions\n        var midI = { 'x': (I0.x + I1.x) / 2.0,\n            'y': (I0.y + I1.y) / 2.0 };\n        var midP = { 'x': (data_nodes[P.source].x + data_nodes[P.target].x) / 2.0,\n            'y': (data_nodes[P.source].y + data_nodes[P.target].y) / 2.0 };\n        var result = Math.max(0, 1 - 2 * euclidean_distance(midP, midI) / euclidean_distance(I0, I1));\n        return result;\n    }\n\n    function visibility_compatibility(P, Q) {\n        return Math.min(edge_visibility(P, Q), edge_visibility(Q, P));\n    }\n\n    function compatibility_score(P, Q) {\n        var result = angle_compatibility(P, Q) * scale_compatibility(P, Q) * position_compatibility(P, Q) * visibility_compatibility(P, Q);\n\n        return result;\n    }\n\n    function are_compatible(P, Q) {\n        // console.log('compatibility ' + P.source +' - '+ P.target + ' and ' + Q.source +' '+ Q.target);\n        return compatibility_score(P, Q) >= compatibility_threshold;\n    }\n\n    function compute_compatibility_lists() {\n        for (var e = 0; e < data_edges.length - 1; e++) {\n            for (var oe = e + 1; oe < data_edges.length; oe++) {\n                // don't want any duplicates\n                if (e == oe) continue;else {\n                    if (are_compatible(data_edges[e], data_edges[oe])) {\n                        compatibility_list_for_edge[e].push(oe);\n                        compatibility_list_for_edge[oe].push(e);\n                    }\n                }\n            }\n        }\n    }\n\n    /*** ************************ ***/\n\n    /*** Main Bundling Loop Methods ***/\n    var forcebundle = function forcebundle() {\n        var S = S_initial;\n        var I = I_initial;\n        var P = P_initial;\n\n        initialize_edge_subdivisions();\n        initialize_compatibility_lists();\n        update_edge_divisions(P);\n        compute_compatibility_lists();\n        for (var cycle = 0; cycle < C; cycle++) {\n            for (var iteration = 0; iteration < I; iteration++) {\n                var forces = [];\n                for (var edge = 0; edge < data_edges.length; edge++) {\n                    forces[edge] = apply_resulting_forces_on_subdivision_points(edge, P, S);\n                }\n                for (var e = 0; e < data_edges.length; e++) {\n                    for (var i = 0; i < P + 1; i++) {\n                        subdivision_points_for_edge[e][i].x += forces[e][i].x;\n                        subdivision_points_for_edge[e][i].y += forces[e][i].y;\n                    }\n                }\n            }\n            //prepare for next cycle\n            S = S / 2;\n            P = P * 2;\n            I = I_rate * I;\n\n            update_edge_divisions(P);\n            // console.log('C' + cycle);\n            // console.log('P' + P);\n            // console.log('S' + S);\n        }\n        return subdivision_points_for_edge;\n    };\n    /*** ************************ ***/\n\n    /*** Getters/Setters Methods ***/\n    forcebundle.nodes = function (nl) {\n        if (arguments.length == 0) {\n            return data_nodes;\n        } else {\n            data_nodes = nl;\n        }\n        return forcebundle;\n    };\n\n    forcebundle.edges = function (ll) {\n        if (arguments.length == 0) {\n            return data_edges;\n        } else {\n            data_edges = filter_self_loops(ll); //remove edges to from to the same point\n        }\n        return forcebundle;\n    };\n\n    forcebundle.bundling_stiffness = function (k) {\n        if (arguments.length == 0) {\n            return K;\n        } else {\n            K = k;\n        }\n        return forcebundle;\n    };\n\n    forcebundle.step_size = function (step) {\n        if (arguments.length == 0) {\n            return S_initial;\n        } else {\n            S_initial = step;\n        }\n        return forcebundle;\n    };\n\n    forcebundle.cycles = function (c) {\n        if (arguments.length == 0) {\n            return C;\n        } else {\n            C = c;\n        }\n        return forcebundle;\n    };\n\n    forcebundle.iterations = function (i) {\n        if (arguments.length == 0) {\n            return I_initial;\n        } else {\n            I_initial = i;\n        }\n        return forcebundle;\n    };\n\n    forcebundle.iterations_rate = function (i) {\n        if (arguments.length == 0) {\n            return I_rate;\n        } else {\n            I_rate = i;\n        }\n        return forcebundle;\n    };\n\n    forcebundle.subdivision_points_seed = function (p) {\n        if (arguments.length == 0) {\n            return P;\n        } else {\n            P = p;\n        }\n        return forcebundle;\n    };\n\n    forcebundle.subdivision_rate = function (r) {\n        if (arguments.length == 0) {\n            return P_rate;\n        } else {\n            P_rate = r;\n        }\n        return forcebundle;\n    };\n\n    forcebundle.compatbility_threshold = function (t) {\n        if (arguments.length == 0) {\n            return compatbility_threshold;\n        } else {\n            compatibility_threshold = t;\n        }\n        return forcebundle;\n    };\n\n    /*** ************************ ***/\n\n    return forcebundle;\n};\n\n/**\n * @author kyle / http://nikai.us/\n */\n\n/**\n * Category\n * @param {Object} splitList:\n *   { \n *       other: 1,\n *       1: 2,\n *       2: 3,\n *       3: 4,\n *       4: 5,\n *       5: 6,\n *       6: 7\n *   }\n */\nfunction Category(splitList) {\n    this.splitList = splitList || {\n        other: 1\n    };\n}\n\nCategory.prototype.get = function (count) {\n\n    var splitList = this.splitList;\n\n    var value = splitList['other'];\n\n    for (var i in splitList) {\n        if (count == i) {\n            value = splitList[i];\n            break;\n        }\n    }\n\n    return value;\n};\n\n/**\n * 根据DataSet自动生成对应的splitList\n */\nCategory.prototype.generateByDataSet = function (dataSet, color) {\n    var colors = color || ['rgba(255, 255, 0, 0.8)', 'rgba(253, 98, 104, 0.8)', 'rgba(255, 146, 149, 0.8)', 'rgba(255, 241, 193, 0.8)', 'rgba(110, 176, 253, 0.8)', 'rgba(52, 139, 251, 0.8)', 'rgba(17, 102, 252, 0.8)'];\n    var data = dataSet.get();\n    this.splitList = {};\n    var count = 0;\n    for (var i = 0; i < data.length; i++) {\n        if (this.splitList[data[i].count] === undefined) {\n            this.splitList[data[i].count] = colors[count];\n            count++;\n        }\n        if (count >= colors.length - 1) {\n            break;\n        }\n    }\n\n    this.splitList['other'] = colors[colors.length - 1];\n};\n\nCategory.prototype.getLegend = function (options) {\n    var splitList = this.splitList;\n    var container = document.createElement('div');\n    container.style.cssText = \"background:#fff; padding: 5px; border: 1px solid #ccc;\";\n    var html = '';\n    for (var key in splitList) {\n        html += '<div style=\"line-height: 19px;\" value=\"' + key + '\"><span style=\"vertical-align: -2px; display: inline-block; width: 30px;height: 19px;background:' + splitList[key] + ';\"></span><span style=\"margin-left: 3px;\">' + key + '<span></div>';\n    }\n    container.innerHTML = html;\n    return container;\n};\n\n/**\n * @author kyle / http://nikai.us/\n */\n\n/**\n * Choropleth\n * @param {Object} splitList:\n *       [\n *           {\n *               start: 0,\n *               end: 2,\n *               value: randomColor()\n *           },{\n *               start: 2,\n *               end: 4,\n *               value: randomColor()\n *           },{\n *               start: 4,\n *               value: randomColor()\n *           }\n *       ];\n *\n */\nfunction Choropleth(splitList) {\n    this.splitList = splitList || [{\n        start: 0,\n        value: 'red'\n    }];\n}\n\nChoropleth.prototype.get = function (count) {\n    var splitList = this.splitList;\n\n    var value = false;\n\n    for (var i = 0; i < splitList.length; i++) {\n        if ((splitList[i].start === undefined || splitList[i].start !== undefined && count >= splitList[i].start) && (splitList[i].end === undefined || splitList[i].end !== undefined && count < splitList[i].end)) {\n            value = splitList[i].value;\n            break;\n        }\n    }\n\n    return value;\n};\n\n/**\n * 根据DataSet自动生成对应的splitList\n */\nChoropleth.prototype.generateByDataSet = function (dataSet) {\n\n    var min = dataSet.getMin('count');\n    var max = dataSet.getMax('count');\n\n    this.generateByMinMax(min, max);\n};\n\n/**\n * 根据DataSet自动生成对应的splitList\n */\nChoropleth.prototype.generateByMinMax = function (min, max) {\n    var colors = ['rgba(255, 255, 0, 0.8)', 'rgba(253, 98, 104, 0.8)', 'rgba(255, 146, 149, 0.8)', 'rgba(255, 241, 193, 0.8)', 'rgba(110, 176, 253, 0.8)', 'rgba(52, 139, 251, 0.8)', 'rgba(17, 102, 252, 0.8)'];\n    var splitNum = Number((max - min) / 7);\n    // console.log(splitNum)\n    max = Number(max);\n    var index = Number(min);\n    this.splitList = [];\n    var count = 0;\n\n    while (index < max) {\n        this.splitList.push({\n            start: index,\n            end: index + splitNum,\n            value: colors[count]\n        });\n        count++;\n        index += splitNum;\n        // console.log(index, max)\n    }\n    // console.log('splitNum')\n};\n\nChoropleth.prototype.getLegend = function (options) {\n    var splitList = this.splitList;\n};\n\n/**\n * @author Mofei<http://www.zhuwenlong.com>\n */\n\nvar MapHelper = function () {\n    function MapHelper(id, type, opt) {\n        classCallCheck(this, MapHelper);\n\n        if (!id || !type) {\n            console.warn('id 和 type 为必填项');\n            return false;\n        }\n\n        if (type == 'baidu') {\n            if (!BMap) {\n                console.warn('请先引入百度地图JS API');\n                return false;\n            }\n        } else {\n            console.warn('暂不支持你的地图类型');\n        }\n        this.type = type;\n        var center = opt && opt.center ? opt.center : [106.962497, 38.208726];\n        var zoom = opt && opt.zoom ? opt.zoom : 5;\n        var map = this.map = new BMap.Map(id, {\n            enableMapClick: false\n        });\n        map.centerAndZoom(new BMap.Point(center[0], center[1]), zoom);\n        map.enableScrollWheelZoom(true);\n\n        map.setMapStyle({\n            style: 'light'\n        });\n    }\n\n    createClass(MapHelper, [{\n        key: 'addLayer',\n        value: function addLayer(datas, options) {\n            if (this.type == 'baidu') {\n                return new mapv.baiduMapLayer(this.map, dataSet, options);\n            }\n        }\n    }, {\n        key: 'getMap',\n        value: function getMap() {\n            return this.map;\n        }\n    }]);\n    return MapHelper;\n}();\n\n/**\n * 一直覆盖在当前地图视野的Canvas对象\n *\n * @author nikai (@胖嘟嘟的骨头, nikai@baidu.com)\n *\n * @param \n * {\n *     map 地图实例对象\n * }\n */\n\nfunction CanvasLayer(options) {\n    this.options = options || {};\n    this.paneName = this.options.paneName || 'mapPane';\n    this.context = this.options.context || '2d';\n    this.zIndex = this.options.zIndex || 0;\n    this.mixBlendMode = this.options.mixBlendMode || null;\n    this.enableMassClear = this.options.enableMassClear;\n    this._map = options.map;\n    this._lastDrawTime = null;\n    this.show();\n}\n\nvar global$3 = typeof window === 'undefined' ? {} : window;\n\nif (global$3.BMap) {\n\n    CanvasLayer.prototype = new BMap.Overlay();\n\n    CanvasLayer.prototype.initialize = function (map) {\n        this._map = map;\n        var canvas = this.canvas = document.createElement(\"canvas\");\n        canvas.style.cssText = \"position:absolute;\" + \"left:0;\" + \"top:0;\" + \"z-index:\" + this.zIndex + \";user-select:none;\";\n        canvas.style.mixBlendMode = this.mixBlendMode;\n        this.adjustSize();\n        map.getPanes()[this.paneName].appendChild(canvas);\n        var that = this;\n        map.addEventListener('resize', function () {\n            that.adjustSize();\n            that._draw();\n        });\n        return this.canvas;\n    };\n\n    CanvasLayer.prototype.adjustSize = function () {\n        var size = this._map.getSize();\n        var canvas = this.canvas;\n\n        var devicePixelRatio = this.devicePixelRatio = global$3.devicePixelRatio || 1;\n\n        canvas.width = size.width * devicePixelRatio;\n        canvas.height = size.height * devicePixelRatio;\n        if (this.context == '2d') {\n            canvas.getContext(this.context).scale(devicePixelRatio, devicePixelRatio);\n        }\n\n        canvas.style.width = size.width + \"px\";\n        canvas.style.height = size.height + \"px\";\n    };\n\n    CanvasLayer.prototype.draw = function () {\n        var self = this;\n        clearTimeout(self.timeoutID);\n        self.timeoutID = setTimeout(function () {\n            self._draw();\n        }, 15);\n    };\n\n    CanvasLayer.prototype._draw = function () {\n        var map = this._map;\n        var size = map.getSize();\n        var center = map.getCenter();\n        if (center) {\n            var pixel = map.pointToOverlayPixel(center);\n            this.canvas.style.left = pixel.x - size.width / 2 + 'px';\n            this.canvas.style.top = pixel.y - size.height / 2 + 'px';\n            this.dispatchEvent('draw');\n            this.options.update && this.options.update.call(this);\n        }\n    };\n\n    CanvasLayer.prototype.getContainer = function () {\n        return this.canvas;\n    };\n\n    CanvasLayer.prototype.show = function () {\n        if (!this.canvas) {\n            this._map.addOverlay(this);\n        }\n        this.canvas.style.display = \"block\";\n    };\n\n    CanvasLayer.prototype.hide = function () {\n        this.canvas.style.display = \"none\";\n        //this._map.removeOverlay(this);\n    };\n\n    CanvasLayer.prototype.setZIndex = function (zIndex) {\n        this.zIndex = zIndex;\n        this.canvas.style.zIndex = this.zIndex;\n    };\n\n    CanvasLayer.prototype.getZIndex = function () {\n        return this.zIndex;\n    };\n}\n\n/**\n * Tween.js - Licensed under the MIT license\n * https://github.com/tweenjs/tween.js\n * ----------------------------------------------\n *\n * See https://github.com/tweenjs/tween.js/graphs/contributors for the full list of contributors.\n * Thank you all, you're awesome!\n */\n\nvar TWEEN = TWEEN || function () {\n\n    var _tweens = [];\n\n    return {\n\n        getAll: function getAll() {\n\n            return _tweens;\n        },\n\n        removeAll: function removeAll() {\n\n            _tweens = [];\n        },\n\n        add: function add(tween) {\n\n            _tweens.push(tween);\n        },\n\n        remove: function remove(tween) {\n\n            var i = _tweens.indexOf(tween);\n\n            if (i !== -1) {\n                _tweens.splice(i, 1);\n            }\n        },\n\n        update: function update(time, preserve) {\n\n            if (_tweens.length === 0) {\n                return false;\n            }\n\n            var i = 0;\n\n            time = time !== undefined ? time : TWEEN.now();\n\n            while (i < _tweens.length) {\n\n                if (_tweens[i].update(time) || preserve) {\n                    i++;\n                } else {\n                    _tweens.splice(i, 1);\n                }\n            }\n\n            return true;\n        }\n    };\n}();\n\n// Include a performance.now polyfill.\n// In node.js, use process.hrtime.\nif (typeof window === 'undefined' && typeof process !== 'undefined') {\n    TWEEN.now = function () {\n        var time = process.hrtime();\n\n        // Convert [seconds, nanoseconds] to milliseconds.\n        return time[0] * 1000 + time[1] / 1000000;\n    };\n}\n// In a browser, use window.performance.now if it is available.\nelse if (typeof window !== 'undefined' && window.performance !== undefined && window.performance.now !== undefined) {\n        // This must be bound, because directly assigning this function\n        // leads to an invocation exception in Chrome.\n        TWEEN.now = window.performance.now.bind(window.performance);\n    }\n    // Use Date.now if it is available.\n    else if (Date.now !== undefined) {\n            TWEEN.now = Date.now;\n        }\n        // Otherwise, use 'new Date().getTime()'.\n        else {\n                TWEEN.now = function () {\n                    return new Date().getTime();\n                };\n            }\n\nTWEEN.Tween = function (object) {\n\n    var _object = object;\n    var _valuesStart = {};\n    var _valuesEnd = {};\n    var _valuesStartRepeat = {};\n    var _duration = 1000;\n    var _repeat = 0;\n    var _repeatDelayTime;\n    var _yoyo = false;\n    var _isPlaying = false;\n    var _reversed = false;\n    var _delayTime = 0;\n    var _startTime = null;\n    var _easingFunction = TWEEN.Easing.Linear.None;\n    var _interpolationFunction = TWEEN.Interpolation.Linear;\n    var _chainedTweens = [];\n    var _onStartCallback = null;\n    var _onStartCallbackFired = false;\n    var _onUpdateCallback = null;\n    var _onCompleteCallback = null;\n    var _onStopCallback = null;\n\n    this.to = function (properties, duration) {\n\n        _valuesEnd = properties;\n\n        if (duration !== undefined) {\n            _duration = duration;\n        }\n\n        return this;\n    };\n\n    this.start = function (time) {\n\n        TWEEN.add(this);\n\n        _isPlaying = true;\n\n        _onStartCallbackFired = false;\n\n        _startTime = time !== undefined ? time : TWEEN.now();\n        _startTime += _delayTime;\n\n        for (var property in _valuesEnd) {\n\n            // Check if an Array was provided as property value\n            if (_valuesEnd[property] instanceof Array) {\n\n                if (_valuesEnd[property].length === 0) {\n                    continue;\n                }\n\n                // Create a local copy of the Array with the start value at the front\n                _valuesEnd[property] = [_object[property]].concat(_valuesEnd[property]);\n            }\n\n            // If `to()` specifies a property that doesn't exist in the source object,\n            // we should not set that property in the object\n            if (_object[property] === undefined) {\n                continue;\n            }\n\n            // Save the starting value.\n            _valuesStart[property] = _object[property];\n\n            if (_valuesStart[property] instanceof Array === false) {\n                _valuesStart[property] *= 1.0; // Ensures we're using numbers, not strings\n            }\n\n            _valuesStartRepeat[property] = _valuesStart[property] || 0;\n        }\n\n        return this;\n    };\n\n    this.stop = function () {\n\n        if (!_isPlaying) {\n            return this;\n        }\n\n        TWEEN.remove(this);\n        _isPlaying = false;\n\n        if (_onStopCallback !== null) {\n            _onStopCallback.call(_object, _object);\n        }\n\n        this.stopChainedTweens();\n        return this;\n    };\n\n    this.end = function () {\n\n        this.update(_startTime + _duration);\n        return this;\n    };\n\n    this.stopChainedTweens = function () {\n\n        for (var i = 0, numChainedTweens = _chainedTweens.length; i < numChainedTweens; i++) {\n            _chainedTweens[i].stop();\n        }\n    };\n\n    this.delay = function (amount) {\n\n        _delayTime = amount;\n        return this;\n    };\n\n    this.repeat = function (times) {\n\n        _repeat = times;\n        return this;\n    };\n\n    this.repeatDelay = function (amount) {\n\n        _repeatDelayTime = amount;\n        return this;\n    };\n\n    this.yoyo = function (yoyo) {\n\n        _yoyo = yoyo;\n        return this;\n    };\n\n    this.easing = function (easing) {\n\n        _easingFunction = easing;\n        return this;\n    };\n\n    this.interpolation = function (interpolation) {\n\n        _interpolationFunction = interpolation;\n        return this;\n    };\n\n    this.chain = function () {\n\n        _chainedTweens = arguments;\n        return this;\n    };\n\n    this.onStart = function (callback) {\n\n        _onStartCallback = callback;\n        return this;\n    };\n\n    this.onUpdate = function (callback) {\n\n        _onUpdateCallback = callback;\n        return this;\n    };\n\n    this.onComplete = function (callback) {\n\n        _onCompleteCallback = callback;\n        return this;\n    };\n\n    this.onStop = function (callback) {\n\n        _onStopCallback = callback;\n        return this;\n    };\n\n    this.update = function (time) {\n\n        var property;\n        var elapsed;\n        var value;\n\n        if (time < _startTime) {\n            return true;\n        }\n\n        if (_onStartCallbackFired === false) {\n\n            if (_onStartCallback !== null) {\n                _onStartCallback.call(_object, _object);\n            }\n\n            _onStartCallbackFired = true;\n        }\n\n        elapsed = (time - _startTime) / _duration;\n        elapsed = elapsed > 1 ? 1 : elapsed;\n\n        value = _easingFunction(elapsed);\n\n        for (property in _valuesEnd) {\n\n            // Don't update properties that do not exist in the source object\n            if (_valuesStart[property] === undefined) {\n                continue;\n            }\n\n            var start = _valuesStart[property] || 0;\n            var end = _valuesEnd[property];\n\n            if (end instanceof Array) {\n\n                _object[property] = _interpolationFunction(end, value);\n            } else {\n\n                // Parses relative end values with start as base (e.g.: +10, -3)\n                if (typeof end === 'string') {\n\n                    if (end.charAt(0) === '+' || end.charAt(0) === '-') {\n                        end = start + parseFloat(end);\n                    } else {\n                        end = parseFloat(end);\n                    }\n                }\n\n                // Protect against non numeric properties.\n                if (typeof end === 'number') {\n                    _object[property] = start + (end - start) * value;\n                }\n            }\n        }\n\n        if (_onUpdateCallback !== null) {\n            _onUpdateCallback.call(_object, value);\n        }\n\n        if (elapsed === 1) {\n\n            if (_repeat > 0) {\n\n                if (isFinite(_repeat)) {\n                    _repeat--;\n                }\n\n                // Reassign starting values, restart by making startTime = now\n                for (property in _valuesStartRepeat) {\n\n                    if (typeof _valuesEnd[property] === 'string') {\n                        _valuesStartRepeat[property] = _valuesStartRepeat[property] + parseFloat(_valuesEnd[property]);\n                    }\n\n                    if (_yoyo) {\n                        var tmp = _valuesStartRepeat[property];\n\n                        _valuesStartRepeat[property] = _valuesEnd[property];\n                        _valuesEnd[property] = tmp;\n                    }\n\n                    _valuesStart[property] = _valuesStartRepeat[property];\n                }\n\n                if (_yoyo) {\n                    _reversed = !_reversed;\n                }\n\n                if (_repeatDelayTime !== undefined) {\n                    _startTime = time + _repeatDelayTime;\n                } else {\n                    _startTime = time + _delayTime;\n                }\n\n                return true;\n            } else {\n\n                if (_onCompleteCallback !== null) {\n\n                    _onCompleteCallback.call(_object, _object);\n                }\n\n                for (var i = 0, numChainedTweens = _chainedTweens.length; i < numChainedTweens; i++) {\n                    // Make the chained tweens start exactly at the time they should,\n                    // even if the `update()` method was called way past the duration of the tween\n                    _chainedTweens[i].start(_startTime + _duration);\n                }\n\n                return false;\n            }\n        }\n\n        return true;\n    };\n};\n\nTWEEN.Easing = {\n\n    Linear: {\n\n        None: function None(k) {\n\n            return k;\n        }\n\n    },\n\n    Quadratic: {\n\n        In: function In(k) {\n\n            return k * k;\n        },\n\n        Out: function Out(k) {\n\n            return k * (2 - k);\n        },\n\n        InOut: function InOut(k) {\n\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n\n            return -0.5 * (--k * (k - 2) - 1);\n        }\n\n    },\n\n    Cubic: {\n\n        In: function In(k) {\n\n            return k * k * k;\n        },\n\n        Out: function Out(k) {\n\n            return --k * k * k + 1;\n        },\n\n        InOut: function InOut(k) {\n\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n\n            return 0.5 * ((k -= 2) * k * k + 2);\n        }\n\n    },\n\n    Quartic: {\n\n        In: function In(k) {\n\n            return k * k * k * k;\n        },\n\n        Out: function Out(k) {\n\n            return 1 - --k * k * k * k;\n        },\n\n        InOut: function InOut(k) {\n\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        }\n\n    },\n\n    Quintic: {\n\n        In: function In(k) {\n\n            return k * k * k * k * k;\n        },\n\n        Out: function Out(k) {\n\n            return --k * k * k * k * k + 1;\n        },\n\n        InOut: function InOut(k) {\n\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        }\n\n    },\n\n    Sinusoidal: {\n\n        In: function In(k) {\n\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n\n        Out: function Out(k) {\n\n            return Math.sin(k * Math.PI / 2);\n        },\n\n        InOut: function InOut(k) {\n\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        }\n\n    },\n\n    Exponential: {\n\n        In: function In(k) {\n\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n\n        Out: function Out(k) {\n\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n\n        InOut: function InOut(k) {\n\n            if (k === 0) {\n                return 0;\n            }\n\n            if (k === 1) {\n                return 1;\n            }\n\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        }\n\n    },\n\n    Circular: {\n\n        In: function In(k) {\n\n            return 1 - Math.sqrt(1 - k * k);\n        },\n\n        Out: function Out(k) {\n\n            return Math.sqrt(1 - --k * k);\n        },\n\n        InOut: function InOut(k) {\n\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        }\n\n    },\n\n    Elastic: {\n\n        In: function In(k) {\n\n            if (k === 0) {\n                return 0;\n            }\n\n            if (k === 1) {\n                return 1;\n            }\n\n            return -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n        },\n\n        Out: function Out(k) {\n\n            if (k === 0) {\n                return 0;\n            }\n\n            if (k === 1) {\n                return 1;\n            }\n\n            return Math.pow(2, -10 * k) * Math.sin((k - 0.1) * 5 * Math.PI) + 1;\n        },\n\n        InOut: function InOut(k) {\n\n            if (k === 0) {\n                return 0;\n            }\n\n            if (k === 1) {\n                return 1;\n            }\n\n            k *= 2;\n\n            if (k < 1) {\n                return -0.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n            }\n\n            return 0.5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\n        }\n\n    },\n\n    Back: {\n\n        In: function In(k) {\n\n            var s = 1.70158;\n\n            return k * k * ((s + 1) * k - s);\n        },\n\n        Out: function Out(k) {\n\n            var s = 1.70158;\n\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n\n        InOut: function InOut(k) {\n\n            var s = 1.70158 * 1.525;\n\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        }\n\n    },\n\n    Bounce: {\n\n        In: function In(k) {\n\n            return 1 - TWEEN.Easing.Bounce.Out(1 - k);\n        },\n\n        Out: function Out(k) {\n\n            if (k < 1 / 2.75) {\n                return 7.5625 * k * k;\n            } else if (k < 2 / 2.75) {\n                return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n            } else if (k < 2.5 / 2.75) {\n                return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n            } else {\n                return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n            }\n        },\n\n        InOut: function InOut(k) {\n\n            if (k < 0.5) {\n                return TWEEN.Easing.Bounce.In(k * 2) * 0.5;\n            }\n\n            return TWEEN.Easing.Bounce.Out(k * 2 - 1) * 0.5 + 0.5;\n        }\n\n    }\n\n};\n\nTWEEN.Interpolation = {\n\n    Linear: function Linear(v, k) {\n\n        var m = v.length - 1;\n        var f = m * k;\n        var i = Math.floor(f);\n        var fn = TWEEN.Interpolation.Utils.Linear;\n\n        if (k < 0) {\n            return fn(v[0], v[1], f);\n        }\n\n        if (k > 1) {\n            return fn(v[m], v[m - 1], m - f);\n        }\n\n        return fn(v[i], v[i + 1 > m ? m : i + 1], f - i);\n    },\n\n    Bezier: function Bezier(v, k) {\n\n        var b = 0;\n        var n = v.length - 1;\n        var pw = Math.pow;\n        var bn = TWEEN.Interpolation.Utils.Bernstein;\n\n        for (var i = 0; i <= n; i++) {\n            b += pw(1 - k, n - i) * pw(k, i) * v[i] * bn(n, i);\n        }\n\n        return b;\n    },\n\n    CatmullRom: function CatmullRom(v, k) {\n\n        var m = v.length - 1;\n        var f = m * k;\n        var i = Math.floor(f);\n        var fn = TWEEN.Interpolation.Utils.CatmullRom;\n\n        if (v[0] === v[m]) {\n\n            if (k < 0) {\n                i = Math.floor(f = m * (1 + k));\n            }\n\n            return fn(v[(i - 1 + m) % m], v[i], v[(i + 1) % m], v[(i + 2) % m], f - i);\n        } else {\n\n            if (k < 0) {\n                return v[0] - (fn(v[0], v[0], v[1], v[1], -f) - v[0]);\n            }\n\n            if (k > 1) {\n                return v[m] - (fn(v[m], v[m], v[m - 1], v[m - 1], f - m) - v[m]);\n            }\n\n            return fn(v[i ? i - 1 : 0], v[i], v[m < i + 1 ? m : i + 1], v[m < i + 2 ? m : i + 2], f - i);\n        }\n    },\n\n    Utils: {\n\n        Linear: function Linear(p0, p1, t) {\n\n            return (p1 - p0) * t + p0;\n        },\n\n        Bernstein: function Bernstein(n, i) {\n\n            var fc = TWEEN.Interpolation.Utils.Factorial;\n\n            return fc(n) / fc(i) / fc(n - i);\n        },\n\n        Factorial: function () {\n\n            var a = [1];\n\n            return function (n) {\n\n                var s = 1;\n\n                if (a[n]) {\n                    return a[n];\n                }\n\n                for (var i = n; i > 1; i--) {\n                    s *= i;\n                }\n\n                a[n] = s;\n                return s;\n            };\n        }(),\n\n        CatmullRom: function CatmullRom(p0, p1, p2, p3, t) {\n\n            var v0 = (p2 - p0) * 0.5;\n            var v1 = (p3 - p1) * 0.5;\n            var t2 = t * t;\n            var t3 = t * t2;\n\n            return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n        }\n\n    }\n\n};\n\n/**\n * @author Mofei Zhu<mapv@zhuwenlong.com>\n * This file is to draw text\n */\n\nvar drawText = {\n    draw: function draw(context, dataSet, options) {\n\n        var data = dataSet instanceof DataSet ? dataSet.get() : dataSet;\n        context.save();\n\n        // set from options\n        for (var key in options) {\n            context[key] = options[key];\n        }\n\n        var offset = options.offset || {\n            x: 0,\n            y: 0\n        };\n\n        var rects = [];\n\n        var size = options._size || options.size;\n        if (size) {\n            context.font = \"bold \" + size + \"px Arial\";\n        } else {\n            size = 12;\n        }\n\n        var textKey = options.textKey || 'text';\n\n        if (!options.textAlign) {\n            context.textAlign = 'center';\n        }\n\n        if (!options.textBaseline) {\n            context.textBaseline = 'middle';\n        }\n\n        if (options.avoid) {\n            // 标注避让\n            for (var i = 0, len = data.length; i < len; i++) {\n                var coordinates = data[i].geometry._coordinates || data[i].geometry.coordinates;\n                var x = coordinates[0] + offset.x;\n                var y = coordinates[1] + offset.y;\n                var text = data[i][textKey];\n                var textWidth = context.measureText(text).width;\n\n                // 根据文本宽度和高度调整x，y位置，使得绘制文本时候坐标点在文本中心点，这个计算出的是左上角坐标\n                var px = x - textWidth / 2;\n                var py = y - size / 2;\n\n                var rect = {\n                    sw: {\n                        x: px,\n                        y: py + size\n                    },\n                    ne: {\n                        x: px + textWidth,\n                        y: py\n                    }\n                };\n\n                if (!hasOverlay(rects, rect)) {\n                    rects.push(rect);\n                    px = px + textWidth / 2;\n                    py = py + size / 2;\n                    context.fillText(text, px, py);\n                }\n            }\n        } else {\n            for (var i = 0, len = data.length; i < len; i++) {\n                var coordinates = data[i].geometry._coordinates || data[i].geometry.coordinates;\n                var x = coordinates[0] + offset.x;\n                var y = coordinates[1] + offset.y;\n                var text = data[i][textKey];\n                context.fillText(text, x, y);\n            }\n        }\n\n        context.restore();\n    }\n\n    /*\n     *  当前文字区域和已有的文字区域是否有重叠部分\n     */\n};function hasOverlay(rects, overlay) {\n    for (var i = 0; i < rects.length; i++) {\n        if (isRectOverlay(rects[i], overlay)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n//判断2个矩形是否有重叠部分\nfunction isRectOverlay(rect1, rect2) {\n    //minx、miny 2个矩形右下角最小的x和y\n    //maxx、maxy 2个矩形左上角最大的x和y\n    var minx = Math.min(rect1.ne.x, rect2.ne.x);\n    var miny = Math.min(rect1.sw.y, rect2.sw.y);\n    var maxx = Math.max(rect1.sw.x, rect2.sw.x);\n    var maxy = Math.max(rect1.ne.y, rect2.ne.y);\n    if (minx > maxx && miny > maxy) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * @author Mofei Zhu<mapv@zhuwenlong.com>\n * This file is to draw text\n */\n\nvar drawIcon = {\n    draw: function draw(context, dataSet, options) {\n        var data = dataSet instanceof DataSet ? dataSet.get() : dataSet;\n\n        context.fillStyle = 'white';\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n\n        var offset = options.offset || {\n            x: 0,\n            y: 0\n        };\n\n        // set from options\n        // for (var key in options) {\n        //     context[key] = options[key];\n        // }\n        // console.log(data)\n        for (var i = 0, len = data.length; i < len; i++) {\n\n            if (data[i].geometry) {\n                var deg = data[i].deg || options.deg;\n                var icon = data[i].icon || options.icon;\n                var coordinates = data[i].geometry._coordinates || data[i].geometry.coordinates;\n                var x = coordinates[0];\n                var y = coordinates[1];\n                if (deg) {\n                    context.save();\n                    context.translate(x, y);\n                    context.rotate(deg * Math.PI / 180);\n                    context.translate(-x, -y);\n                }\n                var width = options._width || options.width || icon.width;\n                var height = options._height || options.height || icon.height;\n                x = x - width / 2 + offset.x;\n                y = y - height / 2 + offset.y;\n                if (options.sx && options.sy && options.swidth && options.sheight && options.width && options.height) {\n                    context.drawImage(icon, options.sx, options.sy, options.swidth, options.sheight, x, y, width, height);\n                } else if (options.width && options.height) {\n                    context.drawImage(icon, x, y, width, height);\n                } else {\n                    context.drawImage(icon, x, y);\n                }\n\n                if (deg) {\n                    context.restore();\n                }\n            }\n        }\n    }\n};\n\n/**\n * @author kyle / http://nikai.us/\n */\n\nif (typeof window !== 'undefined') {\n    requestAnimationFrame(animate);\n}\n\nfunction animate(time) {\n    requestAnimationFrame(animate);\n    TWEEN.update(time);\n}\n\nvar BaseLayer = function () {\n    function BaseLayer(map, dataSet, options) {\n        classCallCheck(this, BaseLayer);\n\n        if (!(dataSet instanceof DataSet)) {\n            dataSet = new DataSet(dataSet);\n        }\n\n        this.dataSet = dataSet;\n        this.map = map;\n    }\n\n    createClass(BaseLayer, [{\n        key: \"getDefaultContextConfig\",\n        value: function getDefaultContextConfig() {\n            return {\n                globalAlpha: 1,\n                globalCompositeOperation: 'source-over',\n                imageSmoothingEnabled: true,\n                strokeStyle: '#000000',\n                fillStyle: '#000000',\n                shadowOffsetX: 0,\n                shadowOffsetY: 0,\n                shadowBlur: 0,\n                shadowColor: 'rgba(0, 0, 0, 0)',\n                lineWidth: 1,\n                lineCap: 'butt',\n                lineJoin: 'miter',\n                miterLimit: 10,\n                lineDashOffset: 0,\n                font: '10px sans-serif',\n                textAlign: 'start',\n                textBaseline: 'alphabetic'\n            };\n        }\n    }, {\n        key: \"initDataRange\",\n        value: function initDataRange(options) {\n            var self = this;\n            self.intensity = new Intensity({\n                maxSize: self.options.maxSize,\n                minSize: self.options.minSize,\n                gradient: self.options.gradient,\n                max: self.options.max || this.dataSet.getMax('count')\n            });\n            self.category = new Category(self.options.splitList);\n            self.choropleth = new Choropleth(self.options.splitList);\n            if (self.options.splitList === undefined) {\n                self.category.generateByDataSet(this.dataSet, self.options.color);\n            }\n            if (self.options.splitList === undefined) {\n                var min = self.options.min || this.dataSet.getMin('count');\n                var max = self.options.max || this.dataSet.getMax('count');\n                self.choropleth.generateByMinMax(min, max);\n            }\n        }\n    }, {\n        key: \"getLegend\",\n        value: function getLegend(options) {\n            var draw = this.options.draw;\n            var legend = null;\n            var self = this;\n            if (self.options.draw == 'intensity' || self.options.draw == 'heatmap') {\n                return this.intensity.getLegend(options);\n            } else if (self.options.draw == 'category') {\n                return this.category.getLegend(options);\n            }\n        }\n    }, {\n        key: \"processData\",\n        value: function processData(data) {\n            var self = this;\n            var draw = self.options.draw;\n            if (draw == 'bubble' || draw == 'intensity' || draw == 'category' || draw == 'choropleth' || draw == 'simple') {\n\n                for (var i = 0; i < data.length; i++) {\n                    var item = data[i];\n\n                    if (self.options.draw == 'bubble') {\n                        data[i]._size = self.intensity.getSize(item.count);\n                    } else {\n                        data[i]._size = undefined;\n                    }\n\n                    var styleType = '_fillStyle';\n\n                    if (data[i].geometry.type === 'LineString' || self.options.styleType === 'stroke') {\n                        styleType = '_strokeStyle';\n                    }\n\n                    if (self.options.draw == 'intensity') {\n                        data[i][styleType] = self.intensity.getColor(item.count);\n                    } else if (self.options.draw == 'category') {\n                        data[i][styleType] = self.category.get(item.count);\n                    } else if (self.options.draw == 'choropleth') {\n                        data[i][styleType] = self.choropleth.get(item.count);\n                    }\n                }\n            }\n        }\n    }, {\n        key: \"isEnabledTime\",\n        value: function isEnabledTime() {\n\n            var animationOptions = this.options.animation;\n\n            var flag = animationOptions && !(animationOptions.enabled === false);\n\n            return flag;\n        }\n    }, {\n        key: \"argCheck\",\n        value: function argCheck(options) {\n            if (options.draw == 'heatmap') {\n                if (options.strokeStyle) {\n                    console.warn('[heatmap] options.strokeStyle is discard, pleause use options.strength [eg: options.strength = 0.1]');\n                }\n            }\n        }\n    }, {\n        key: \"drawContext\",\n        value: function drawContext(context, dataSet, options, nwPixel) {\n            var self = this;\n            switch (self.options.draw) {\n                case 'heatmap':\n                    drawHeatmap.draw(context, dataSet, self.options);\n                    break;\n                case 'grid':\n                case 'honeycomb':\n                    self.options.offset = {\n                        x: nwPixel.x,\n                        y: nwPixel.y\n                    };\n                    if (self.options.draw == 'grid') {\n                        drawGrid.draw(context, dataSet, self.options);\n                    } else {\n                        drawHoneycomb.draw(context, dataSet, self.options);\n                    }\n                    break;\n                case 'text':\n                    drawText.draw(context, dataSet, self.options);\n                    break;\n                case 'icon':\n                    drawIcon.draw(context, dataSet, self.options);\n                    break;\n                case 'clip':\n                    context.save();\n                    context.fillStyle = self.options.fillStyle || 'rgba(0, 0, 0, 0.5)';\n                    context.fillRect(0, 0, context.canvas.width, context.canvas.height);\n                    drawSimple.draw(context, dataSet, self.options);\n                    context.beginPath();\n                    pathSimple.drawDataSet(context, dataSet, self.options);\n                    context.clip();\n                    clear(context);\n                    context.restore();\n                    break;\n                default:\n                    if (self.options.context == \"webgl\") {\n                        webglDrawSimple.draw(self.canvasLayer.canvas.getContext('webgl'), dataSet, self.options);\n                    } else {\n                        drawSimple.draw(context, dataSet, self.options);\n                    }\n            }\n        }\n    }, {\n        key: \"isPointInPath\",\n        value: function isPointInPath(context, pixel) {\n            var context = this.canvasLayer.canvas.getContext(this.context);\n            var data = this.dataSet.get();\n            for (var i = 0; i < data.length; i++) {\n                context.beginPath();\n                pathSimple.draw(context, data[i], this.options);\n                var x = pixel.x * this.canvasLayer.devicePixelRatio;\n                var y = pixel.y * this.canvasLayer.devicePixelRatio;\n                if (context.isPointInPath(x, y) || context.isPointInStroke(x, y)) {\n                    return data[i];\n                }\n            }\n        }\n    }, {\n        key: \"clickEvent\",\n        value: function clickEvent(pixel, e) {\n\n            var dataItem = this.isPointInPath(this.getContext(), pixel);\n\n            if (dataItem) {\n                this.options.methods.click(dataItem, e);\n            } else {\n                this.options.methods.click(null, e);\n            }\n        }\n    }, {\n        key: \"mousemoveEvent\",\n        value: function mousemoveEvent(pixel, e) {\n            var dataItem = this.isPointInPath(this.getContext(), pixel);\n            if (dataItem) {\n                this.options.methods.mousemove(dataItem, e);\n            } else {\n                this.options.methods.mousemove(null, e);\n            }\n        }\n\n        /**\n         * obj.options\n         */\n\n    }, {\n        key: \"update\",\n        value: function update(obj, isDraw) {\n            var self = this;\n            var _options = obj.options;\n            var options = self.options;\n            for (var i in _options) {\n                options[i] = _options[i];\n            }\n            self.init(options);\n            if (isDraw !== false) {\n                self.draw();\n            }\n        }\n    }, {\n        key: \"setOptions\",\n        value: function setOptions(options) {\n            var self = this;\n            self.dataSet.reset();\n            // console.log('xxx1')\n            self.init(options);\n            // console.log('xxx')\n            self.draw();\n        }\n    }, {\n        key: \"set\",\n        value: function set$$1(obj) {\n            var self = this;\n            var ctx = this.getContext();\n            var conf = this.getDefaultContextConfig();\n            for (var i in conf) {\n                ctx[i] = conf[i];\n            }\n            self.init(obj.options);\n            self.draw();\n        }\n    }, {\n        key: \"destroy\",\n        value: function destroy() {\n            this.unbindEvent();\n            this.hide();\n        }\n    }, {\n        key: \"initAnimator\",\n        value: function initAnimator() {\n            var self = this;\n            var animationOptions = self.options.animation;\n\n            if (self.options.draw == 'time' || self.isEnabledTime()) {\n\n                if (!animationOptions.stepsRange) {\n                    animationOptions.stepsRange = {\n                        start: this.dataSet.getMin('time') || 0,\n                        end: this.dataSet.getMax('time') || 0\n                    };\n                }\n\n                this.steps = { step: animationOptions.stepsRange.start };\n                self.animator = new TWEEN.Tween(this.steps).onUpdate(function () {\n                    self._canvasUpdate(this.step);\n                }).repeat(Infinity);\n\n                this.addAnimatorEvent();\n\n                var duration = animationOptions.duration * 1000 || 5000;\n\n                self.animator.to({ step: animationOptions.stepsRange.end }, duration);\n                self.animator.start();\n            } else {\n                self.animator && self.animator.stop();\n            }\n        }\n    }, {\n        key: \"addAnimatorEvent\",\n        value: function addAnimatorEvent() {}\n    }, {\n        key: \"animatorMovestartEvent\",\n        value: function animatorMovestartEvent() {\n            var animationOptions = this.options.animation;\n            if (this.isEnabledTime() && this.animator) {\n                this.steps.step = animationOptions.stepsRange.start;\n                this.animator.stop();\n            }\n        }\n    }, {\n        key: \"animatorMoveendEvent\",\n        value: function animatorMoveendEvent() {\n            if (this.isEnabledTime() && this.animator) {\n                this.animator.start();\n            }\n        }\n    }]);\n    return BaseLayer;\n}();\n\nvar AnimationLayer = function (_BaseLayer) {\n    inherits(AnimationLayer, _BaseLayer);\n\n    function AnimationLayer(map, dataSet, options) {\n        classCallCheck(this, AnimationLayer);\n\n        var _this = possibleConstructorReturn(this, (AnimationLayer.__proto__ || Object.getPrototypeOf(AnimationLayer)).call(this, map, dataSet, options));\n\n        _this.map = map;\n        _this.options = options || {};\n        _this.dataSet = dataSet;\n\n        var canvasLayer = new CanvasLayer({\n            map: map,\n            zIndex: _this.options.zIndex,\n            update: _this._canvasUpdate.bind(_this)\n        });\n\n        _this.init(_this.options);\n\n        _this.canvasLayer = canvasLayer;\n        _this.transferToMercator();\n        var self = _this;\n        dataSet.on('change', function () {\n            self.transferToMercator();\n            canvasLayer.draw();\n        });\n        _this.ctx = canvasLayer.canvas.getContext('2d');\n\n        _this.start();\n        return _this;\n    }\n\n    createClass(AnimationLayer, [{\n        key: \"draw\",\n        value: function draw() {\n            this.canvasLayer.draw();\n        }\n    }, {\n        key: \"init\",\n        value: function init(options) {\n\n            var self = this;\n            self.options = options;\n            this.initDataRange(options);\n            this.context = self.options.context || '2d';\n\n            if (self.options.zIndex) {\n                this.canvasLayer && this.canvasLayer.setZIndex(self.options.zIndex);\n            }\n\n            if (self.options.max) {\n                this.intensity.setMax(self.options.max);\n            }\n\n            if (self.options.min) {\n                this.intensity.setMin(self.options.min);\n            }\n\n            this.initAnimator();\n        }\n\n        // 经纬度左边转换为墨卡托坐标\n\n    }, {\n        key: \"transferToMercator\",\n        value: function transferToMercator() {\n            var projection = this.map.getMapType().getProjection();\n\n            if (this.options.coordType !== 'bd09mc') {\n                var data = this.dataSet.get();\n                data = this.dataSet.transferCoordinate(data, function (coordinates) {\n                    var pixel = projection.lngLatToPoint({\n                        lng: coordinates[0],\n                        lat: coordinates[1]\n                    });\n                    return [pixel.x, pixel.y];\n                }, 'coordinates', 'coordinates_mercator');\n                this.dataSet._set(data);\n            }\n        }\n    }, {\n        key: \"_canvasUpdate\",\n        value: function _canvasUpdate() {\n            var ctx = this.ctx;\n            if (!ctx) {\n                return;\n            }\n            //clear(ctx);\n            var map = this.map;\n            var zoomUnit = Math.pow(2, 18 - map.getZoom());\n            var projection = map.getMapType().getProjection();\n\n            var mcCenter = projection.lngLatToPoint(map.getCenter());\n            var nwMc = new BMap.Pixel(mcCenter.x - map.getSize().width / 2 * zoomUnit, mcCenter.y + map.getSize().height / 2 * zoomUnit); //左上角墨卡托坐标\n\n            clear(ctx);\n\n            var dataGetOptions = {\n                fromColumn: this.options.coordType == 'bd09mc' ? 'coordinates' : 'coordinates_mercator',\n                transferCoordinate: function transferCoordinate(coordinate) {\n                    if (!coordinate) {\n                        return;\n                    }\n                    var x = (coordinate[0] - nwMc.x) / zoomUnit;\n                    var y = (nwMc.y - coordinate[1]) / zoomUnit;\n                    return [x, y];\n                }\n            };\n\n            this.data = this.dataSet.get(dataGetOptions);\n\n            this.processData(this.data);\n\n            this.drawAnimation();\n        }\n    }, {\n        key: \"drawAnimation\",\n        value: function drawAnimation() {\n            var ctx = this.ctx;\n            var data = this.data;\n            if (!data) {\n                return;\n            }\n\n            ctx.save();\n            ctx.globalCompositeOperation = 'destination-out';\n            ctx.fillStyle = 'rgba(0, 0, 0, .1)';\n            ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n            ctx.restore();\n\n            ctx.save();\n            if (this.options.shadowColor) {\n                ctx.shadowColor = this.options.shadowColor;\n            }\n\n            if (this.options.shadowBlur) {\n                ctx.shadowBlur = this.options.shadowBlur;\n            }\n\n            if (this.options.globalAlpha) {\n                ctx.globalAlpha = this.options.globalAlpha;\n            }\n\n            if (this.options.globalCompositeOperation) {\n                ctx.globalCompositeOperation = this.options.globalCompositeOperation;\n            }\n\n            var options = this.options;\n            for (var i = 0; i < data.length; i++) {\n                if (data[i].geometry.type === 'Point') {\n                    ctx.beginPath();\n                    var maxSize = data[i].size || this.options.size;\n                    var minSize = data[i].minSize || this.options.minSize || 0;\n                    if (data[i]._size === undefined) {\n                        data[i]._size = minSize;\n                    }\n                    ctx.arc(data[i].geometry._coordinates[0], data[i].geometry._coordinates[1], data[i]._size, 0, Math.PI * 2, true);\n                    ctx.closePath();\n\n                    data[i]._size++;\n\n                    if (data[i]._size > maxSize) {\n                        data[i]._size = minSize;\n                    }\n                    ctx.lineWidth = 1;\n                    ctx.strokeStyle = data[i].strokeStyle || data[i]._strokeStyle || options.strokeStyle || 'yellow';\n                    ctx.stroke();\n                    var fillStyle = data[i].fillStyle || data[i]._fillStyle || options.fillStyle;\n                    if (fillStyle) {\n                        ctx.fillStyle = fillStyle;\n                        ctx.fill();\n                    }\n                } else if (data[i].geometry.type === 'LineString') {\n                    ctx.beginPath();\n                    var size = data[i].size || this.options.size || 5;\n                    var minSize = data[i].minSize || this.options.minSize || 0;\n                    if (data[i]._index === undefined) {\n                        data[i]._index = 0;\n                    }\n                    var index = data[i]._index;\n                    ctx.arc(data[i].geometry._coordinates[index][0], data[i].geometry._coordinates[index][1], size, 0, Math.PI * 2, true);\n                    ctx.closePath();\n\n                    data[i]._index++;\n\n                    if (data[i]._index >= data[i].geometry._coordinates.length) {\n                        data[i]._index = 0;\n                    }\n\n                    var strokeStyle = data[i].strokeStyle || options.strokeStyle;\n                    var fillStyle = data[i].fillStyle || options.fillStyle || 'yellow';\n                    ctx.fillStyle = fillStyle;\n                    ctx.fill();\n                    if (strokeStyle && options.lineWidth) {\n                        ctx.lineWidth = options.lineWidth || 1;\n                        ctx.strokeStyle = strokeStyle;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    }, {\n        key: \"animate\",\n        value: function animate() {\n            this.drawAnimation();\n            var animateTime = this.options.animateTime || 100;\n            this.timeout = setTimeout(this.animate.bind(this), animateTime);\n        }\n    }, {\n        key: \"start\",\n        value: function start() {\n            this.stop();\n            this.animate();\n        }\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            clearTimeout(this.timeout);\n        }\n    }, {\n        key: \"unbindEvent\",\n        value: function unbindEvent() {}\n    }, {\n        key: \"hide\",\n        value: function hide() {\n            this.canvasLayer.hide();\n            this.stop();\n        }\n    }, {\n        key: \"show\",\n        value: function show() {\n            this.start();\n        }\n    }]);\n    return AnimationLayer;\n}(BaseLayer);\n\n/**\n * @author kyle / http://nikai.us/\n */\n\nvar Layer = function (_BaseLayer) {\n    inherits(Layer, _BaseLayer);\n\n    function Layer(map, dataSet, options) {\n        classCallCheck(this, Layer);\n\n        var _this = possibleConstructorReturn(this, (Layer.__proto__ || Object.getPrototypeOf(Layer)).call(this, map, dataSet, options));\n\n        var self = _this;\n        var data = null;\n        options = options || {};\n\n        _this.clickEvent = _this.clickEvent.bind(_this);\n        _this.mousemoveEvent = _this.mousemoveEvent.bind(_this);\n\n        self.init(options);\n        self.argCheck(options);\n        self.transferToMercator();\n\n        var canvasLayer = _this.canvasLayer = new CanvasLayer({\n            map: map,\n            context: _this.context,\n            paneName: options.paneName,\n            mixBlendMode: options.mixBlendMode,\n            enableMassClear: options.enableMassClear,\n            zIndex: options.zIndex,\n            update: function update() {\n                self._canvasUpdate();\n            }\n        });\n\n        dataSet.on('change', function () {\n            self.transferToMercator();\n            canvasLayer.draw();\n        });\n\n        return _this;\n    }\n\n    createClass(Layer, [{\n        key: \"clickEvent\",\n        value: function clickEvent(e) {\n            var pixel = e.pixel;\n            get(Layer.prototype.__proto__ || Object.getPrototypeOf(Layer.prototype), \"clickEvent\", this).call(this, pixel, e);\n        }\n    }, {\n        key: \"mousemoveEvent\",\n        value: function mousemoveEvent(e) {\n            var pixel = e.pixel;\n            get(Layer.prototype.__proto__ || Object.getPrototypeOf(Layer.prototype), \"mousemoveEvent\", this).call(this, pixel, e);\n        }\n    }, {\n        key: \"bindEvent\",\n        value: function bindEvent(e) {\n            this.unbindEvent();\n            var map = this.map;\n\n            if (this.options.methods) {\n                if (this.options.methods.click) {\n                    map.setDefaultCursor(\"default\");\n                    map.addEventListener('click', this.clickEvent);\n                }\n                if (this.options.methods.mousemove) {\n                    map.addEventListener('mousemove', this.mousemoveEvent);\n                }\n            }\n        }\n    }, {\n        key: \"unbindEvent\",\n        value: function unbindEvent(e) {\n            var map = this.map;\n\n            if (this.options.methods) {\n                if (this.options.methods.click) {\n                    map.removeEventListener('click', this.clickEvent);\n                }\n                if (this.options.methods.mousemove) {\n                    map.removeEventListener('mousemove', this.mousemoveEvent);\n                }\n            }\n        }\n\n        // 经纬度左边转换为墨卡托坐标\n\n    }, {\n        key: \"transferToMercator\",\n        value: function transferToMercator() {\n            var projection = this.map.getMapType().getProjection();\n\n            if (this.options.coordType !== 'bd09mc') {\n                var data = this.dataSet.get();\n                data = this.dataSet.transferCoordinate(data, function (coordinates) {\n                    var pixel = projection.lngLatToPoint({\n                        lng: coordinates[0],\n                        lat: coordinates[1]\n                    });\n                    return [pixel.x, pixel.y];\n                }, 'coordinates', 'coordinates_mercator');\n                this.dataSet._set(data);\n            }\n        }\n    }, {\n        key: \"getContext\",\n        value: function getContext() {\n            return this.canvasLayer.canvas.getContext(this.context);\n        }\n    }, {\n        key: \"_canvasUpdate\",\n        value: function _canvasUpdate(time) {\n            if (!this.canvasLayer) {\n                return;\n            }\n\n            var self = this;\n\n            var animationOptions = self.options.animation;\n\n            var map = this.canvasLayer._map;\n\n            var zoomUnit = Math.pow(2, 18 - map.getZoom());\n            var projection = map.getMapType().getProjection();\n\n            var mcCenter = projection.lngLatToPoint(map.getCenter());\n            var nwMc = new BMap.Pixel(mcCenter.x - map.getSize().width / 2 * zoomUnit, mcCenter.y + map.getSize().height / 2 * zoomUnit); //左上角墨卡托坐标\n\n            var context = this.getContext();\n\n            if (self.isEnabledTime()) {\n                if (time === undefined) {\n                    clear(context);\n                    return;\n                }\n                if (this.context == '2d') {\n                    context.save();\n                    context.globalCompositeOperation = 'destination-out';\n                    context.fillStyle = 'rgba(0, 0, 0, .1)';\n                    context.fillRect(0, 0, context.canvas.width, context.canvas.height);\n                    context.restore();\n                }\n            } else {\n                clear(context);\n            }\n\n            if (this.context == '2d') {\n                for (var key in self.options) {\n                    context[key] = self.options[key];\n                }\n            } else {\n                context.clear(context.COLOR_BUFFER_BIT);\n            }\n\n            if (self.options.minZoom && map.getZoom() < self.options.minZoom || self.options.maxZoom && map.getZoom() > self.options.maxZoom) {\n                return;\n            }\n\n            var scale = 1;\n            if (this.context != '2d') {\n                scale = this.canvasLayer.devicePixelRatio;\n            }\n\n            var dataGetOptions = {\n                fromColumn: self.options.coordType == 'bd09mc' ? 'coordinates' : 'coordinates_mercator',\n                transferCoordinate: function transferCoordinate(coordinate) {\n                    var x = (coordinate[0] - nwMc.x) / zoomUnit * scale;\n                    var y = (nwMc.y - coordinate[1]) / zoomUnit * scale;\n                    return [x, y];\n                }\n            };\n\n            if (time !== undefined) {\n                dataGetOptions.filter = function (item) {\n                    var trails = animationOptions.trails || 10;\n                    if (time && item.time > time - trails && item.time < time) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                };\n            }\n\n            // get data from data set\n            var data = self.dataSet.get(dataGetOptions);\n\n            this.processData(data);\n\n            var nwPixel = map.pointToPixel(new BMap.Point(0, 0));\n\n            if (self.options.unit == 'm') {\n                if (self.options.size) {\n                    self.options._size = self.options.size / zoomUnit;\n                }\n                if (self.options.width) {\n                    self.options._width = self.options.width / zoomUnit;\n                }\n                if (self.options.height) {\n                    self.options._height = self.options.height / zoomUnit;\n                }\n            } else {\n                self.options._size = self.options.size;\n                self.options._height = self.options.height;\n                self.options._width = self.options.width;\n            }\n\n            this.drawContext(context, data, self.options, nwPixel);\n\n            //console.timeEnd('draw');\n\n            //console.timeEnd('update')\n            self.options.updateCallback && self.options.updateCallback(time);\n        }\n    }, {\n        key: \"init\",\n        value: function init(options) {\n\n            var self = this;\n            self.options = options;\n            this.initDataRange(options);\n            this.context = self.options.context || '2d';\n\n            if (self.options.zIndex) {\n                this.canvasLayer && this.canvasLayer.setZIndex(self.options.zIndex);\n            }\n\n            if (self.options.max) {\n                this.intensity.setMax(self.options.max);\n            }\n\n            if (self.options.min) {\n                this.intensity.setMin(self.options.min);\n            }\n\n            this.initAnimator();\n            this.bindEvent();\n        }\n    }, {\n        key: \"addAnimatorEvent\",\n        value: function addAnimatorEvent() {\n            this.map.addEventListener('movestart', this.animatorMovestartEvent.bind(this));\n            this.map.addEventListener('moveend', this.animatorMoveendEvent.bind(this));\n        }\n    }, {\n        key: \"show\",\n        value: function show() {\n            this.map.addOverlay(this.canvasLayer);\n        }\n    }, {\n        key: \"hide\",\n        value: function hide() {\n            this.map.removeOverlay(this.canvasLayer);\n        }\n    }, {\n        key: \"draw\",\n        value: function draw() {\n            this.canvasLayer.draw();\n        }\n    }]);\n    return Layer;\n}(BaseLayer);\n\n/**\n * Copyright 2012 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Extends OverlayView to provide a canvas \"Layer\".\n * @author Brendan Kenny\n */\n\n/**\n * A map layer that provides a canvas over the slippy map and a callback\n * system for efficient animation. Requires canvas and CSS 2D transform\n * support.\n * @constructor\n * @extends google.maps.OverlayView\n * @param {CanvasLayerOptions=} opt_options Options to set in this CanvasLayer.\n */\nfunction CanvasLayer$2(opt_options) {\n  /**\n   * If true, canvas is in a map pane and the OverlayView is fully functional.\n   * See google.maps.OverlayView.onAdd for more information.\n   * @type {boolean}\n   * @private\n   */\n  this.isAdded_ = false;\n\n  /**\n   * If true, each update will immediately schedule the next.\n   * @type {boolean}\n   * @private\n   */\n  this.isAnimated_ = false;\n\n  /**\n   * The name of the MapPane in which this layer will be displayed.\n   * @type {string}\n   * @private\n   */\n  this.paneName_ = CanvasLayer$2.DEFAULT_PANE_NAME_;\n\n  /**\n   * A user-supplied function called whenever an update is required. Null or\n   * undefined if a callback is not provided.\n   * @type {?function=}\n   * @private\n   */\n  this.updateHandler_ = null;\n\n  /**\n   * A user-supplied function called whenever an update is required and the\n   * map has been resized since the last update. Null or undefined if a\n   * callback is not provided.\n   * @type {?function}\n   * @private\n   */\n  this.resizeHandler_ = null;\n\n  /**\n   * The LatLng coordinate of the top left of the current view of the map. Will\n   * be null when this.isAdded_ is false.\n   * @type {google.maps.LatLng}\n   * @private\n   */\n  this.topLeft_ = null;\n\n  /**\n   * The map-pan event listener. Will be null when this.isAdded_ is false. Will\n   * be null when this.isAdded_ is false.\n   * @type {?function}\n   * @private\n   */\n  this.centerListener_ = null;\n\n  /**\n   * The map-resize event listener. Will be null when this.isAdded_ is false.\n   * @type {?function}\n   * @private\n   */\n  this.resizeListener_ = null;\n\n  /**\n   * If true, the map size has changed and this.resizeHandler_ must be called\n   * on the next update.\n   * @type {boolean}\n   * @private\n   */\n  this.needsResize_ = true;\n\n  /**\n   * A browser-defined id for the currently requested callback. Null when no\n   * callback is queued.\n   * @type {?number}\n   * @private\n   */\n  this.requestAnimationFrameId_ = null;\n\n  var canvas = document.createElement('canvas');\n  canvas.style.position = 'absolute';\n  canvas.style.top = 0;\n  canvas.style.left = 0;\n  canvas.style.pointerEvents = 'none';\n\n  /**\n   * The canvas element.\n   * @type {!HTMLCanvasElement}\n   */\n  this.canvas = canvas;\n\n  /**\n   * The CSS width of the canvas, which may be different than the width of the\n   * backing store.\n   * @private {number}\n   */\n  this.canvasCssWidth_ = 300;\n\n  /**\n   * The CSS height of the canvas, which may be different than the height of\n   * the backing store.\n   * @private {number}\n   */\n  this.canvasCssHeight_ = 150;\n\n  /**\n   * A value for scaling the CanvasLayer resolution relative to the CanvasLayer\n   * display size.\n   * @private {number}\n   */\n  this.resolutionScale_ = 1;\n\n  /**\n   * Simple bind for functions with no args for bind-less browsers (Safari).\n   * @param {Object} thisArg The this value used for the target function.\n   * @param {function} func The function to be bound.\n   */\n  function simpleBindShim(thisArg, func) {\n    return function () {\n      func.apply(thisArg);\n    };\n  }\n\n  /**\n   * A reference to this.repositionCanvas_ with this bound as its this value.\n   * @type {function}\n   * @private\n   */\n  this.repositionFunction_ = simpleBindShim(this, this.repositionCanvas_);\n\n  /**\n   * A reference to this.resize_ with this bound as its this value.\n   * @type {function}\n   * @private\n   */\n  this.resizeFunction_ = simpleBindShim(this, this.resize_);\n\n  /**\n   * A reference to this.update_ with this bound as its this value.\n   * @type {function}\n   * @private\n   */\n  this.requestUpdateFunction_ = simpleBindShim(this, this.update_);\n\n  // set provided options, if any\n  if (opt_options) {\n    this.setOptions(opt_options);\n  }\n}\n\nvar global$4 = typeof window === 'undefined' ? {} : window;\n\nif (global$4.google && global$4.google.maps) {\n\n  CanvasLayer$2.prototype = new google.maps.OverlayView();\n\n  /**\n   * The default MapPane to contain the canvas.\n   * @type {string}\n   * @const\n   * @private\n   */\n  CanvasLayer$2.DEFAULT_PANE_NAME_ = 'overlayLayer';\n\n  /**\n   * Transform CSS property name, with vendor prefix if required. If browser\n   * does not support transforms, property will be ignored.\n   * @type {string}\n   * @const\n   * @private\n   */\n  CanvasLayer$2.CSS_TRANSFORM_ = function () {\n    var div = document.createElement('div');\n    var transformProps = ['transform', 'WebkitTransform', 'MozTransform', 'OTransform', 'msTransform'];\n    for (var i = 0; i < transformProps.length; i++) {\n      var prop = transformProps[i];\n      if (div.style[prop] !== undefined) {\n        return prop;\n      }\n    }\n\n    // return unprefixed version by default\n    return transformProps[0];\n  }();\n\n  /**\n   * The requestAnimationFrame function, with vendor-prefixed or setTimeout-based\n   * fallbacks. MUST be called with window as thisArg.\n   * @type {function}\n   * @param {function} callback The function to add to the frame request queue.\n   * @return {number} The browser-defined id for the requested callback.\n   * @private\n   */\n  CanvasLayer$2.prototype.requestAnimFrame_ = global$4.requestAnimationFrame || global$4.webkitRequestAnimationFrame || global$4.mozRequestAnimationFrame || global$4.oRequestAnimationFrame || global$4.msRequestAnimationFrame || function (callback) {\n    return global$4.setTimeout(callback, 1000 / 60);\n  };\n\n  /**\n   * The cancelAnimationFrame function, with vendor-prefixed fallback. Does not\n   * fall back to clearTimeout as some platforms implement requestAnimationFrame\n   * but not cancelAnimationFrame, and the cost is an extra frame on onRemove.\n   * MUST be called with window as thisArg.\n   * @type {function}\n   * @param {number=} requestId The id of the frame request to cancel.\n   * @private\n   */\n  CanvasLayer$2.prototype.cancelAnimFrame_ = global$4.cancelAnimationFrame || global$4.webkitCancelAnimationFrame || global$4.mozCancelAnimationFrame || global$4.oCancelAnimationFrame || global$4.msCancelAnimationFrame || function (requestId) {};\n\n  /**\n   * Sets any options provided. See CanvasLayerOptions for more information.\n   * @param {CanvasLayerOptions} options The options to set.\n   */\n  CanvasLayer$2.prototype.setOptions = function (options) {\n    if (options.animate !== undefined) {\n      this.setAnimate(options.animate);\n    }\n\n    if (options.paneName !== undefined) {\n      this.setPaneName(options.paneName);\n    }\n\n    if (options.updateHandler !== undefined) {\n      this.setUpdateHandler(options.updateHandler);\n    }\n\n    if (options.resizeHandler !== undefined) {\n      this.setResizeHandler(options.resizeHandler);\n    }\n\n    if (options.resolutionScale !== undefined) {\n      this.setResolutionScale(options.resolutionScale);\n    }\n\n    if (options.map !== undefined) {\n      this.setMap(options.map);\n    }\n  };\n\n  /**\n   * Set the animated state of the layer. If true, updateHandler will be called\n   * repeatedly, once per frame. If false, updateHandler will only be called when\n   * a map property changes that could require the canvas content to be redrawn.\n   * @param {boolean} animate Whether the canvas is animated.\n   */\n  CanvasLayer$2.prototype.setAnimate = function (animate) {\n    this.isAnimated_ = !!animate;\n\n    if (this.isAnimated_) {\n      this.scheduleUpdate();\n    }\n  };\n\n  /**\n   * @return {boolean} Whether the canvas is animated.\n   */\n  CanvasLayer$2.prototype.isAnimated = function () {\n    return this.isAnimated_;\n  };\n\n  /**\n   * Set the MapPane in which this layer will be displayed, by name. See\n   * {@code google.maps.MapPanes} for the panes available.\n   * @param {string} paneName The name of the desired MapPane.\n   */\n  CanvasLayer$2.prototype.setPaneName = function (paneName) {\n    this.paneName_ = paneName;\n\n    this.setPane_();\n  };\n\n  /**\n   * @return {string} The name of the current container pane.\n   */\n  CanvasLayer$2.prototype.getPaneName = function () {\n    return this.paneName_;\n  };\n\n  /**\n   * Adds the canvas to the specified container pane. Since this is guaranteed to\n   * execute only after onAdd is called, this is when paneName's existence is\n   * checked (and an error is thrown if it doesn't exist).\n   * @private\n   */\n  CanvasLayer$2.prototype.setPane_ = function () {\n    if (!this.isAdded_) {\n      return;\n    }\n\n    // onAdd has been called, so panes can be used\n    var panes = this.getPanes();\n    if (!panes[this.paneName_]) {\n      throw new Error('\"' + this.paneName_ + '\" is not a valid MapPane name.');\n    }\n\n    panes[this.paneName_].appendChild(this.canvas);\n  };\n\n  /**\n   * Set a function that will be called whenever the parent map and the overlay's\n   * canvas have been resized. If opt_resizeHandler is null or unspecified, any\n   * existing callback is removed.\n   * @param {?function=} opt_resizeHandler The resize callback function.\n   */\n  CanvasLayer$2.prototype.setResizeHandler = function (opt_resizeHandler) {\n    this.resizeHandler_ = opt_resizeHandler;\n  };\n\n  /**\n   * Sets a value for scaling the canvas resolution relative to the canvas\n   * display size. This can be used to save computation by scaling the backing\n   * buffer down, or to support high DPI devices by scaling it up (by e.g.\n   * window.devicePixelRatio).\n   * @param {number} scale\n   */\n  CanvasLayer$2.prototype.setResolutionScale = function (scale) {\n    if (typeof scale === 'number') {\n      this.resolutionScale_ = scale;\n      this.resize_();\n    }\n  };\n\n  /**\n   * Set a function that will be called when a repaint of the canvas is required.\n   * If opt_updateHandler is null or unspecified, any existing callback is\n   * removed.\n   * @param {?function=} opt_updateHandler The update callback function.\n   */\n  CanvasLayer$2.prototype.setUpdateHandler = function (opt_updateHandler) {\n    this.updateHandler_ = opt_updateHandler;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLayer$2.prototype.onAdd = function () {\n    if (this.isAdded_) {\n      return;\n    }\n\n    this.isAdded_ = true;\n    this.setPane_();\n\n    this.resizeListener_ = google.maps.event.addListener(this.getMap(), 'resize', this.resizeFunction_);\n    this.centerListener_ = google.maps.event.addListener(this.getMap(), 'center_changed', this.repositionFunction_);\n\n    this.resize_();\n    this.repositionCanvas_();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLayer$2.prototype.onRemove = function () {\n    if (!this.isAdded_) {\n      return;\n    }\n\n    this.isAdded_ = false;\n    this.topLeft_ = null;\n\n    // remove canvas and listeners for pan and resize from map\n    this.canvas.parentElement.removeChild(this.canvas);\n    if (this.centerListener_) {\n      google.maps.event.removeListener(this.centerListener_);\n      this.centerListener_ = null;\n    }\n    if (this.resizeListener_) {\n      google.maps.event.removeListener(this.resizeListener_);\n      this.resizeListener_ = null;\n    }\n\n    // cease canvas update callbacks\n    if (this.requestAnimationFrameId_) {\n      this.cancelAnimFrame_.call(global$4, this.requestAnimationFrameId_);\n      this.requestAnimationFrameId_ = null;\n    }\n  };\n\n  /**\n   * The internal callback for resize events that resizes the canvas to keep the\n   * map properly covered.\n   * @private\n   */\n  CanvasLayer$2.prototype.resize_ = function () {\n    if (!this.isAdded_) {\n      return;\n    }\n\n    var map = this.getMap();\n    var mapWidth = map.getDiv().offsetWidth;\n    var mapHeight = map.getDiv().offsetHeight;\n\n    var newWidth = mapWidth * this.resolutionScale_;\n    var newHeight = mapHeight * this.resolutionScale_;\n    var oldWidth = this.canvas.width;\n    var oldHeight = this.canvas.height;\n\n    // resizing may allocate a new back buffer, so do so conservatively\n    if (oldWidth !== newWidth || oldHeight !== newHeight) {\n      this.canvas.width = newWidth;\n      this.canvas.height = newHeight;\n\n      this.needsResize_ = true;\n      this.scheduleUpdate();\n    }\n\n    // reset styling if new sizes don't match; resize of data not needed\n    if (this.canvasCssWidth_ !== mapWidth || this.canvasCssHeight_ !== mapHeight) {\n      this.canvasCssWidth_ = mapWidth;\n      this.canvasCssHeight_ = mapHeight;\n      this.canvas.style.width = mapWidth + 'px';\n      this.canvas.style.height = mapHeight + 'px';\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLayer$2.prototype.draw = function () {\n    this.repositionCanvas_();\n  };\n\n  /**\n   * Internal callback for map view changes. Since the Maps API moves the overlay\n   * along with the map, this function calculates the opposite translation to\n   * keep the canvas in place.\n   * @private\n   */\n  CanvasLayer$2.prototype.repositionCanvas_ = function () {\n    // TODO(bckenny): *should* only be executed on RAF, but in current browsers\n    //     this causes noticeable hitches in map and overlay relative\n    //     positioning.\n\n    var map = this.getMap();\n\n    // topLeft can't be calculated from map.getBounds(), because bounds are\n    // clamped to -180 and 180 when completely zoomed out. Instead, calculate\n    // left as an offset from the center, which is an unwrapped LatLng.\n    var top = map.getBounds().getNorthEast().lat();\n    var center = map.getCenter();\n    var scale = Math.pow(2, map.getZoom());\n    var left = center.lng() - this.canvasCssWidth_ * 180 / (256 * scale);\n    this.topLeft_ = new google.maps.LatLng(top, left);\n\n    // Canvas position relative to draggable map's container depends on\n    // overlayView's projection, not the map's. Have to use the center of the\n    // map for this, not the top left, for the same reason as above.\n    var projection = this.getProjection();\n    var divCenter = projection.fromLatLngToDivPixel(center);\n    var offsetX = -Math.round(this.canvasCssWidth_ / 2 - divCenter.x);\n    var offsetY = -Math.round(this.canvasCssHeight_ / 2 - divCenter.y);\n    this.canvas.style[CanvasLayer$2.CSS_TRANSFORM_] = 'translate(' + offsetX + 'px,' + offsetY + 'px)';\n\n    this.scheduleUpdate();\n  };\n\n  /**\n   * Internal callback that serves as main animation scheduler via\n   * requestAnimationFrame. Calls resize and update callbacks if set, and\n   * schedules the next frame if overlay is animated.\n   * @private\n   */\n  CanvasLayer$2.prototype.update_ = function () {\n    this.requestAnimationFrameId_ = null;\n\n    if (!this.isAdded_) {\n      return;\n    }\n\n    if (this.isAnimated_) {\n      this.scheduleUpdate();\n    }\n\n    if (this.needsResize_ && this.resizeHandler_) {\n      this.needsResize_ = false;\n      this.resizeHandler_();\n    }\n\n    if (this.updateHandler_) {\n      this.updateHandler_();\n    }\n  };\n\n  /**\n   * A convenience method to get the current LatLng coordinate of the top left of\n   * the current view of the map.\n   * @return {google.maps.LatLng} The top left coordinate.\n   */\n  CanvasLayer$2.prototype.getTopLeft = function () {\n    return this.topLeft_;\n  };\n\n  /**\n   * Schedule a requestAnimationFrame callback to updateHandler. If one is\n   * already scheduled, there is no effect.\n   */\n  CanvasLayer$2.prototype.scheduleUpdate = function () {\n    if (this.isAdded_ && !this.requestAnimationFrameId_) {\n      this.requestAnimationFrameId_ = this.requestAnimFrame_.call(global$4, this.requestUpdateFunction_);\n    }\n  };\n}\n\n/**\n * @author kyle / http://nikai.us/\n */\n\nvar Layer$2 = function (_BaseLayer) {\n    inherits(Layer, _BaseLayer);\n\n    function Layer(map, dataSet, options) {\n        classCallCheck(this, Layer);\n\n        var _this = possibleConstructorReturn(this, (Layer.__proto__ || Object.getPrototypeOf(Layer)).call(this, map, dataSet, options));\n\n        var self = _this;\n        var data = null;\n        options = options || {};\n\n        self.init(options);\n        self.argCheck(options);\n\n        var canvasLayerOptions = {\n            map: map,\n            animate: false,\n            updateHandler: function updateHandler() {\n                self._canvasUpdate();\n            },\n            resolutionScale: resolutionScale\n        };\n\n        var canvasLayer = _this.canvasLayer = new CanvasLayer$2(canvasLayerOptions);\n\n        _this.clickEvent = _this.clickEvent.bind(_this);\n        _this.mousemoveEvent = _this.mousemoveEvent.bind(_this);\n        _this.bindEvent();\n        return _this;\n    }\n\n    createClass(Layer, [{\n        key: \"clickEvent\",\n        value: function clickEvent(e) {\n            var pixel = e.pixel;\n            get(Layer.prototype.__proto__ || Object.getPrototypeOf(Layer.prototype), \"clickEvent\", this).call(this, pixel, e);\n        }\n    }, {\n        key: \"mousemoveEvent\",\n        value: function mousemoveEvent(e) {\n            var pixel = e.pixel;\n            get(Layer.prototype.__proto__ || Object.getPrototypeOf(Layer.prototype), \"mousemoveEvent\", this).call(this, pixel, e);\n        }\n    }, {\n        key: \"bindEvent\",\n        value: function bindEvent(e) {\n            var map = this.map;\n\n            if (this.options.methods) {\n                if (this.options.methods.click) {\n                    map.setDefaultCursor(\"default\");\n                    map.addListener('click', this.clickEvent);\n                }\n                if (this.options.methods.mousemove) {\n                    map.addListener('mousemove', this.mousemoveEvent);\n                }\n            }\n        }\n    }, {\n        key: \"unbindEvent\",\n        value: function unbindEvent(e) {\n            var map = this.map;\n\n            if (this.options.methods) {\n                if (this.options.methods.click) {\n                    map.removeListener('click', this.clickEvent);\n                }\n                if (this.options.methods.mousemove) {\n                    map.removeListener('mousemove', this.mousemoveEvent);\n                }\n            }\n        }\n    }, {\n        key: \"getContext\",\n        value: function getContext() {\n            return this.canvasLayer.canvas.getContext(this.context);\n        }\n    }, {\n        key: \"_canvasUpdate\",\n        value: function _canvasUpdate(time) {\n            if (!this.canvasLayer) {\n                return;\n            }\n\n            var self = this;\n\n            var animationOptions = self.options.animation;\n\n            var context = this.getContext();\n\n            if (self.isEnabledTime()) {\n                if (time === undefined) {\n                    clear(context);\n                    return;\n                }\n                if (this.context == '2d') {\n                    context.save();\n                    context.globalCompositeOperation = 'destination-out';\n                    context.fillStyle = 'rgba(0, 0, 0, .1)';\n                    context.fillRect(0, 0, context.canvas.width, context.canvas.height);\n                    context.restore();\n                }\n            } else {\n                clear(context);\n            }\n\n            if (this.context == '2d') {\n                for (var key in self.options) {\n                    context[key] = self.options[key];\n                }\n            } else {\n                context.clear(context.COLOR_BUFFER_BIT);\n            }\n\n            if (self.options.minZoom && map.getZoom() < self.options.minZoom || self.options.maxZoom && map.getZoom() > self.options.maxZoom) {\n                return;\n            }\n\n            var scale = 1;\n            if (this.context != '2d') {\n                scale = this.canvasLayer.devicePixelRatio;\n            }\n\n            var map = this.map;\n            var mapProjection = map.getProjection();\n            var scale = Math.pow(2, map.zoom) * resolutionScale;\n            var offset = mapProjection.fromLatLngToPoint(this.canvasLayer.getTopLeft());\n            var dataGetOptions = {\n                //fromColumn: self.options.coordType == 'bd09mc' ? 'coordinates' : 'coordinates_mercator',\n                transferCoordinate: function transferCoordinate(coordinate) {\n                    var latLng = new google.maps.LatLng(coordinate[1], coordinate[0]);\n                    var worldPoint = mapProjection.fromLatLngToPoint(latLng);\n                    var pixel = {\n                        x: (worldPoint.x - offset.x) * scale,\n                        y: (worldPoint.y - offset.y) * scale\n                    };\n                    return [pixel.x, pixel.y];\n                }\n            };\n\n            if (time !== undefined) {\n                dataGetOptions.filter = function (item) {\n                    var trails = animationOptions.trails || 10;\n                    if (time && item.time > time - trails && item.time < time) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                };\n            }\n\n            // get data from data set\n            var data = self.dataSet.get(dataGetOptions);\n\n            this.processData(data);\n\n            var latLng = new google.maps.LatLng(0, 0);\n            var worldPoint = mapProjection.fromLatLngToPoint(latLng);\n            var pixel = {\n                x: (worldPoint.x - offset.x) * scale,\n                y: (worldPoint.y - offset.y) * scale\n            };\n\n            if (self.options.unit == 'm' && self.options.size) {\n                self.options._size = self.options.size / zoomUnit;\n            } else {\n                self.options._size = self.options.size;\n            }\n\n            this.drawContext(context, new DataSet(data), self.options, pixel);\n\n            //console.timeEnd('draw');\n\n            //console.timeEnd('update')\n            self.options.updateCallback && self.options.updateCallback(time);\n        }\n    }, {\n        key: \"init\",\n        value: function init(options) {\n\n            var self = this;\n\n            self.options = options;\n\n            this.initDataRange(options);\n\n            this.context = self.options.context || '2d';\n\n            if (self.options.zIndex) {\n                this.canvasLayer && this.canvasLayer.setZIndex(self.options.zIndex);\n            }\n\n            this.initAnimator();\n        }\n    }, {\n        key: \"addAnimatorEvent\",\n        value: function addAnimatorEvent() {\n            this.map.addListener('movestart', this.animatorMovestartEvent.bind(this));\n            this.map.addListener('moveend', this.animatorMoveendEvent.bind(this));\n        }\n    }, {\n        key: \"show\",\n        value: function show() {\n            this.map.addOverlay(this.canvasLayer);\n        }\n    }, {\n        key: \"hide\",\n        value: function hide() {\n            this.map.removeOverlay(this.canvasLayer);\n        }\n    }, {\n        key: \"draw\",\n        value: function draw() {\n            self.canvasLayer.draw();\n        }\n    }]);\n    return Layer;\n}(BaseLayer);\n\n/**\n * @author kyle / http://nikai.us/\n */\n\nvar geojson = {\n    getDataSet: function getDataSet(geoJson) {\n\n        var data = [];\n        var features = geoJson.features;\n        for (var i = 0; i < features.length; i++) {\n            var feature = features[i];\n            var geometry = feature.geometry;\n            var properties = feature.properties;\n            var item = {};\n            for (var key in properties) {\n                item[key] = properties[key];\n            }\n            item.geometry = geometry;\n            data.push(item);\n        }\n        return new DataSet(data);\n    }\n};\n\n/**\n * @author kyle / http://nikai.us/\n */\n\nvar csv = {\n    CSVToArray: function CSVToArray(strData, strDelimiter) {\n        // Check to see if the delimiter is defined. If not,\n        // then default to comma.\n        strDelimiter = strDelimiter || \",\";\n\n        // Create a regular expression to parse the CSV values.\n        var objPattern = new RegExp(\n        // Delimiters.\n        \"(\\\\\" + strDelimiter + \"|\\\\r?\\\\n|\\\\r|^)\" +\n\n        // Quoted fields.\n        \"(?:\\\"([^\\\"]*(?:\\\"\\\"[^\\\"]*)*)\\\"|\" +\n\n        // Standard fields.\n        \"([^\\\"\\\\\" + strDelimiter + \"\\\\r\\\\n]*))\", \"gi\");\n\n        // Create an array to hold our data. Give the array\n        // a default empty first row.\n        var arrData = [[]];\n\n        // Create an array to hold our individual pattern\n        // matching groups.\n        var arrMatches = null;\n\n        // Keep looping over the regular expression matches\n        // until we can no longer find a match.\n        while (arrMatches = objPattern.exec(strData)) {\n\n            // Get the delimiter that was found.\n            var strMatchedDelimiter = arrMatches[1];\n\n            // Check to see if the given delimiter has a length\n            // (is not the start of string) and if it matches\n            // field delimiter. If id does not, then we know\n            // that this delimiter is a row delimiter.\n            if (strMatchedDelimiter.length && strMatchedDelimiter !== strDelimiter) {\n\n                // Since we have reached a new row of data,\n                // add an empty row to our data array.\n                arrData.push([]);\n            }\n\n            var strMatchedValue;\n\n            // Now that we have our delimiter out of the way,\n            // let's check to see which kind of value we\n            // captured (quoted or unquoted).\n            if (arrMatches[2]) {\n\n                // We found a quoted value. When we capture\n                // this value, unescape any double quotes.\n                strMatchedValue = arrMatches[2].replace(new RegExp(\"\\\"\\\"\", \"g\"), \"\\\"\");\n            } else {\n\n                // We found a non-quoted value.\n                strMatchedValue = arrMatches[3];\n            }\n\n            // Now that we have our value string, let's add\n            // it to the data array.\n            arrData[arrData.length - 1].push(strMatchedValue);\n        }\n\n        // Return the parsed data.\n        return arrData;\n    },\n\n    getDataSet: function getDataSet(csvStr, split) {\n\n        var arr = this.CSVToArray(csvStr, split || ',');\n\n        var data = [];\n\n        var header = arr[0];\n\n        for (var i = 1; i < arr.length - 1; i++) {\n            var line = arr[i];\n            var item = {};\n            for (var j = 0; j < line.length; j++) {\n                var value = line[j];\n                if (header[j] == 'geometry') {\n                    value = JSON.parse(value);\n                }\n                item[header[j]] = value;\n            }\n            data.push(item);\n        }\n\n        return new DataSet(data);\n    }\n};\n\nexports.version = version;\nexports.canvasClear = clear;\nexports.canvasResolutionScale = resolutionScale$1;\nexports.canvasDrawSimple = drawSimple;\nexports.canvasDrawHeatmap = drawHeatmap;\nexports.canvasDrawGrid = drawGrid;\nexports.canvasDrawHoneycomb = drawHoneycomb;\nexports.webglDrawSimple = webglDrawSimple;\nexports.webglDrawPoint = point;\nexports.webglDrawLine = line;\nexports.webglDrawPolygon = polygon;\nexports.utilCityCenter = cityCenter;\nexports.utilCurve = curve;\nexports.utilForceEdgeBundling = ForceEdgeBundling;\nexports.utilDataRangeIntensity = Intensity;\nexports.utilDataRangeCategory = Category;\nexports.utilDataRangeChoropleth = Choropleth;\nexports.Map = MapHelper;\nexports.baiduMapCanvasLayer = CanvasLayer;\nexports.baiduMapAnimationLayer = AnimationLayer;\nexports.baiduMapLayer = Layer;\nexports.googleMapCanvasLayer = CanvasLayer$2;\nexports.googleMapLayer = Layer$2;\nexports.DataSet = DataSet;\nexports.geojson = geojson;\nexports.csv = csv;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(127)))\n\n/***/ }),\n\n/***/ 1143:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"properties\":{\"id\":\"65\",\"name\":\"新疆\",\"cp\":[84.9023,41.748],\"childNum\":18},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[96.416,42.7588],[96.416,42.7148],[95.9766,42.4951],[96.0645,42.3193],[96.2402,42.2314],[95.9766,41.9238],[95.2734,41.6162],[95.1855,41.792],[94.5703,41.4844],[94.043,41.0889],[93.8672,40.6934],[93.0762,40.6494],[92.6367,39.6387],[92.373,39.3311],[92.373,39.1113],[92.373,39.0234],[90.1758,38.4961],[90.3516,38.2324],[90.6152,38.3203],[90.5273,37.8369],[91.0547,37.4414],[91.3184,37.0898],[90.7031,36.7822],[90.791,36.6064],[91.0547,36.5186],[91.0547,36.0791],[90.8789,36.0352],[90,36.2549],[89.9121,36.0791],[89.7363,36.0791],[89.209,36.2988],[88.7695,36.3428],[88.5938,36.4746],[87.3633,36.4307],[86.2207,36.167],[86.1328,35.8594],[85.6055,35.6836],[85.0781,35.7275],[84.1992,35.376],[83.1445,35.4199],[82.8809,35.6836],[82.4414,35.7275],[82.002,35.332],[81.6504,35.2441],[80.4199,35.4199],[80.2441,35.2881],[80.332,35.1563],[80.2441,35.2002],[79.8926,34.8047],[79.8047,34.4971],[79.1016,34.4531],[79.0137,34.3213],[78.2227,34.7168],[78.0469,35.2441],[78.0469,35.5078],[77.4316,35.4639],[76.8164,35.6396],[76.5527,35.8594],[76.2012,35.8154],[75.9375,36.0352],[76.0254,36.4746],[75.8496,36.6943],[75.498,36.7383],[75.4102,36.958],[75.0586,37.002],[74.8828,36.9141],[74.7949,37.0459],[74.5313,37.0898],[74.5313,37.2217],[74.8828,37.2217],[75.1465,37.4414],[74.8828,37.5732],[74.9707,37.749],[74.8828,38.4521],[74.3555,38.6719],[74.1797,38.6719],[74.0918,38.54],[73.8281,38.584],[73.7402,38.8477],[73.8281,38.9795],[73.4766,39.375],[73.916,39.5068],[73.916,39.6826],[73.8281,39.7705],[74.0039,40.0342],[74.8828,40.3418],[74.7949,40.5176],[75.2344,40.4297],[75.5859,40.6494],[75.7617,40.2979],[76.377,40.3857],[76.9043,41.001],[77.6074,41.001],[78.1348,41.2207],[78.1348,41.3965],[80.1563,42.0557],[80.2441,42.2754],[80.1563,42.627],[80.2441,42.8467],[80.5078,42.8906],[80.4199,43.0664],[80.7715,43.1982],[80.4199,44.165],[80.4199,44.6045],[79.9805,44.8242],[79.9805,44.9561],[81.7383,45.3955],[82.0898,45.2197],[82.5293,45.2197],[82.2656,45.6592],[83.0566,47.2412],[83.6719,47.0215],[84.7266,47.0215],[84.9023,46.8896],[85.5176,47.0654],[85.6934,47.2852],[85.5176,48.1201],[85.7813,48.4277],[86.5723,48.5596],[86.8359,48.8232],[86.748,48.9551],[86.8359,49.1309],[87.8027,49.1748],[87.8906,48.999],[87.7148,48.9111],[88.0664,48.7354],[87.9785,48.6035],[88.5059,48.3838],[88.6816,48.1641],[89.1211,47.9883],[89.5605,48.0322],[89.7363,47.8564],[90.0879,47.8564],[90.3516,47.6807],[90.5273,47.2412],[90.8789,46.9775],[91.0547,46.582],[90.8789,46.3184],[91.0547,46.0107],[90.7031,45.7471],[90.7031,45.5273],[90.8789,45.2197],[91.582,45.0879],[93.5156,44.9561],[94.7461,44.3408],[95.3613,44.2969],[95.3613,44.0332],[95.5371,43.9014],[95.8887,43.2422],[96.3281,42.9346],[96.416,42.7588]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"54\",\"name\":\"西藏\",\"cp\":[88.7695,31.6846],\"childNum\":7},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[79.0137,34.3213],[79.1016,34.4531],[79.8047,34.4971],[79.8926,34.8047],[80.2441,35.2002],[80.332,35.1563],[80.2441,35.2881],[80.4199,35.4199],[81.6504,35.2441],[82.002,35.332],[82.4414,35.7275],[82.8809,35.6836],[83.1445,35.4199],[84.1992,35.376],[85.0781,35.7275],[85.6055,35.6836],[86.1328,35.8594],[86.2207,36.167],[87.3633,36.4307],[88.5938,36.4746],[88.7695,36.3428],[89.209,36.2988],[89.7363,36.0791],[89.3848,36.0352],[89.4727,35.9033],[89.7363,35.7715],[89.7363,35.4199],[89.4727,35.376],[89.4727,35.2441],[89.5605,34.8926],[89.8242,34.8486],[89.7363,34.6729],[89.8242,34.3652],[89.6484,34.0137],[90.0879,33.4863],[90.7031,33.1348],[91.4063,33.1348],[91.9336,32.8271],[92.1973,32.8271],[92.2852,32.7393],[92.9883,32.7393],[93.5156,32.4756],[93.7793,32.5635],[94.1309,32.4316],[94.6582,32.6074],[95.1855,32.4316],[95.0098,32.2998],[95.1855,32.3438],[95.2734,32.2119],[95.3613,32.168],[95.3613,31.9922],[95.4492,31.8164],[95.8008,31.6846],[95.9766,31.8164],[96.1523,31.5967],[96.2402,31.9482],[96.5039,31.7285],[96.8555,31.6846],[96.7676,31.9922],[97.2949,32.0801],[97.3828,32.5635],[97.7344,32.5195],[98.1738,32.3438],[98.4375,31.8604],[98.877,31.4209],[98.6133,31.2012],[98.9648,30.7617],[99.1406,29.2676],[98.9648,29.1357],[98.9648,28.8281],[98.7891,28.8721],[98.7891,29.0039],[98.7012,28.916],[98.6133,28.5205],[98.7891,28.3447],[98.7012,28.2129],[98.3496,28.125],[98.2617,28.3887],[98.1738,28.125],[97.5586,28.5205],[97.2949,28.0811],[97.3828,27.9053],[97.0313,27.7295],[96.5039,28.125],[95.7129,28.2568],[95.3613,28.125],[95.2734,27.9492],[94.2188,27.5537],[93.8672,27.0264],[93.6035,26.9385],[92.1094,26.8506],[92.0215,27.4658],[91.582,27.5537],[91.582,27.9053],[91.4063,28.0371],[91.0547,27.8613],[90.7031,28.0811],[89.8242,28.2129],[89.6484,28.1689],[89.1211,27.5977],[89.1211,27.334],[89.0332,27.2021],[88.7695,27.4219],[88.8574,27.9932],[88.6816,28.125],[88.1543,27.9053],[87.8906,27.9492],[87.7148,27.8174],[87.0996,27.8174],[86.748,28.125],[86.5723,28.125],[86.4844,27.9053],[86.1328,28.125],[86.0449,27.9053],[85.6934,28.3447],[85.6055,28.2568],[85.166,28.3447],[85.166,28.6523],[84.9023,28.5645],[84.4629,28.7402],[84.2871,28.8721],[84.1992,29.2236],[84.1113,29.2676],[83.584,29.1797],[83.2324,29.5752],[82.1777,30.0586],[82.0898,30.3223],[81.3867,30.3662],[81.2109,30.0146],[81.0352,30.2344],[80.0684,30.5859],[79.7168,30.9375],[79.0137,31.0693],[78.75,31.333],[78.8379,31.5967],[78.6621,31.8164],[78.75,31.9043],[78.4863,32.124],[78.3984,32.5195],[78.75,32.6953],[78.9258,32.3438],[79.2773,32.5635],[79.1016,33.1787],[78.6621,33.6621],[78.6621,34.1016],[78.9258,34.1455],[79.0137,34.3213]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"15\",\"name\":\"内蒙古\",\"cp\":[117.5977,44.3408],\"childNum\":12},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[97.207,42.8027],[99.4922,42.583],[100.8105,42.6709],[101.7773,42.4951],[102.041,42.2314],[102.7441,42.1436],[103.3594,41.8799],[103.8867,41.792],[104.502,41.8799],[104.502,41.6602],[105.0293,41.5723],[105.7324,41.9238],[107.4023,42.4512],[109.4238,42.4512],[110.3906,42.7588],[111.0059,43.3301],[111.9727,43.6816],[111.9727,43.8135],[111.4453,44.3848],[111.7969,45],[111.9727,45.0879],[113.6426,44.7363],[114.1699,44.9561],[114.5215,45.3955],[115.6641,45.4395],[116.1914,45.7031],[116.2793,45.9668],[116.543,46.2744],[117.334,46.3623],[117.4219,46.582],[117.7734,46.5381],[118.3008,46.7578],[118.7402,46.7139],[118.916,46.7578],[119.0918,46.6699],[119.707,46.626],[119.9707,46.7139],[119.707,47.1973],[118.4766,47.9883],[117.8613,48.0322],[117.334,47.6807],[116.8066,47.9004],[116.1914,47.8564],[115.9277,47.6807],[115.5762,47.9004],[115.4883,48.1641],[115.8398,48.252],[115.8398,48.5596],[116.7188,49.834],[117.7734,49.5264],[118.5645,49.9219],[119.2676,50.0977],[119.3555,50.3174],[119.1797,50.3613],[119.5313,50.7568],[119.5313,50.8887],[119.707,51.0645],[120.1465,51.6797],[120.6738,51.9434],[120.7617,52.1191],[120.7617,52.251],[120.5859,52.3389],[120.6738,52.5146],[120.4102,52.6465],[120.0586,52.6025],[120.0586,52.7344],[120.8496,53.2617],[121.4648,53.3496],[121.8164,53.042],[121.2012,52.5586],[121.6406,52.4268],[121.7285,52.2949],[121.9922,52.2949],[122.168,52.5146],[122.6953,52.251],[122.6074,52.0752],[122.959,51.3281],[123.3105,51.2402],[123.6621,51.3721],[124.3652,51.2842],[124.541,51.3721],[124.8926,51.3721],[125.0684,51.6357],[125.332,51.6357],[126.0352,51.0205],[125.7715,50.7568],[125.7715,50.5371],[125.332,50.1416],[125.1563,49.834],[125.2441,49.1748],[124.8047,49.1309],[124.4531,48.1201],[124.2773,48.5156],[122.4316,47.373],[123.0469,46.7139],[123.3984,46.8896],[123.3984,46.9775],[123.4863,46.9775],[123.5742,46.8457],[123.5742,46.8896],[123.5742,46.6699],[123.0469,46.582],[123.2227,46.2305],[122.7832,46.0107],[122.6953,45.7031],[122.4316,45.8789],[122.2559,45.791],[121.8164,46.0107],[121.7285,45.7471],[121.9043,45.7031],[122.2559,45.2637],[122.0801,44.8682],[122.3438,44.2529],[123.1348,44.4727],[123.4863,43.7256],[123.3105,43.5059],[123.6621,43.374],[123.5742,43.0225],[123.3105,42.9785],[123.1348,42.8027],[122.7832,42.7148],[122.3438,42.8467],[122.3438,42.6709],[121.9922,42.7148],[121.7285,42.4512],[121.4648,42.4951],[120.498,42.0996],[120.1465,41.7041],[119.8828,42.1875],[119.5313,42.3633],[119.3555,42.2754],[119.2676,41.7041],[119.4434,41.6162],[119.2676,41.3086],[118.3887,41.3086],[118.125,41.748],[118.3008,41.792],[118.3008,42.0996],[118.125,42.0557],[117.9492,42.2314],[118.0371,42.4072],[117.7734,42.627],[117.5098,42.583],[117.334,42.4512],[116.8945,42.4072],[116.8066,42.0117],[116.2793,42.0117],[116.0156,41.792],[115.9277,41.9238],[115.2246,41.5723],[114.9609,41.6162],[114.873,42.0996],[114.5215,42.1436],[114.1699,41.792],[114.2578,41.5723],[113.9063,41.4404],[113.9941,41.2207],[113.9063,41.1328],[114.082,40.7373],[114.082,40.5176],[113.8184,40.5176],[113.5547,40.3418],[113.2031,40.3857],[112.7637,40.166],[112.3242,40.2539],[111.9727,39.5947],[111.4453,39.6387],[111.3574,39.4189],[111.0938,39.375],[111.0938,39.5947],[110.6543,39.2871],[110.127,39.4629],[110.2148,39.2871],[109.8633,39.2432],[109.9512,39.1553],[108.9844,38.3203],[109.0723,38.0127],[108.8965,37.9688],[108.8086,38.0127],[108.7207,37.7051],[108.1934,37.6172],[107.666,37.8809],[107.3145,38.1006],[106.7871,38.1885],[106.5234,38.3203],[106.9629,38.9795],[106.7871,39.375],[106.3477,39.2871],[105.9082,38.7158],[105.8203,37.793],[104.3262,37.4414],[103.4473,37.8369],[103.3594,38.0127],[103.5352,38.1445],[103.4473,38.3643],[104.2383,38.9795],[104.0625,39.4189],[103.3594,39.3311],[103.0078,39.1113],[102.4805,39.2432],[101.8652,39.1113],[102.041,38.8916],[101.7773,38.6719],[101.3379,38.7598],[101.25,39.0234],[100.9863,38.9355],[100.8105,39.4189],[100.5469,39.4189],[100.0195,39.7705],[99.4922,39.8584],[100.1074,40.2539],[100.1953,40.6494],[99.9316,41.001],[99.2285,40.8691],[99.0527,40.6934],[98.9648,40.7813],[98.7891,40.6055],[98.5254,40.7373],[98.6133,40.6494],[98.3496,40.5615],[98.3496,40.9131],[97.4707,41.4844],[97.8223,41.6162],[97.8223,41.748],[97.207,42.8027]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"63\",\"name\":\"青海\",\"cp\":[96.2402,35.4199],\"childNum\":8},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[89.7363,36.0791],[89.9121,36.0791],[90,36.2549],[90.8789,36.0352],[91.0547,36.0791],[91.0547,36.5186],[90.791,36.6064],[90.7031,36.7822],[91.3184,37.0898],[91.0547,37.4414],[90.5273,37.8369],[90.6152,38.3203],[90.3516,38.2324],[90.1758,38.4961],[92.373,39.0234],[92.373,39.1113],[93.1641,39.1992],[93.1641,38.9795],[93.6914,38.9355],[93.8672,38.7158],[94.3066,38.7598],[94.5703,38.3643],[95.0098,38.4082],[95.4492,38.2764],[95.7129,38.3643],[96.2402,38.1006],[96.416,38.2324],[96.6797,38.1885],[96.6797,38.4521],[97.1191,38.584],[97.0313,39.1992],[98.1738,38.8037],[98.3496,39.0234],[98.6133,38.9355],[98.7891,39.0674],[99.1406,38.9355],[99.8438,38.3643],[100.1953,38.2764],[100.0195,38.4521],[100.1074,38.4961],[100.459,38.2764],[100.7227,38.2324],[101.1621,37.8369],[101.5137,37.8809],[101.7773,37.6172],[101.9531,37.7051],[102.1289,37.4414],[102.5684,37.1777],[102.4805,36.958],[102.6563,36.8262],[102.5684,36.7383],[102.832,36.3428],[103.0078,36.2549],[102.9199,36.0791],[102.9199,35.9033],[102.6563,35.7715],[102.832,35.5957],[102.4805,35.5957],[102.3047,35.4199],[102.3926,35.2002],[101.9531,34.8486],[101.9531,34.6289],[102.2168,34.4092],[102.1289,34.2773],[101.6895,34.1016],[100.9863,34.3652],[100.8105,34.2773],[101.25,33.6621],[101.5137,33.7061],[101.6016,33.5303],[101.7773,33.5303],[101.6895,33.3105],[101.7773,33.2227],[101.6016,33.1348],[101.1621,33.2227],[101.25,32.6953],[100.7227,32.6514],[100.7227,32.5195],[100.3711,32.7393],[100.1074,32.6514],[100.1074,32.8711],[99.8438,33.0029],[99.7559,32.7393],[99.2285,32.915],[99.2285,33.0469],[98.877,33.1787],[98.4375,34.0576],[97.8223,34.1895],[97.6465,34.1016],[97.7344,33.9258],[97.3828,33.8818],[97.4707,33.5742],[97.7344,33.3984],[97.3828,32.8711],[97.4707,32.6953],[97.7344,32.5195],[97.3828,32.5635],[97.2949,32.0801],[96.7676,31.9922],[96.8555,31.6846],[96.5039,31.7285],[96.2402,31.9482],[96.1523,31.5967],[95.9766,31.8164],[95.8008,31.6846],[95.4492,31.8164],[95.3613,31.9922],[95.3613,32.168],[95.2734,32.2119],[95.1855,32.3438],[95.0098,32.2998],[95.1855,32.4316],[94.6582,32.6074],[94.1309,32.4316],[93.7793,32.5635],[93.5156,32.4756],[92.9883,32.7393],[92.2852,32.7393],[92.1973,32.8271],[91.9336,32.8271],[91.4063,33.1348],[90.7031,33.1348],[90.0879,33.4863],[89.6484,34.0137],[89.8242,34.3652],[89.7363,34.6729],[89.8242,34.8486],[89.5605,34.8926],[89.4727,35.2441],[89.4727,35.376],[89.7363,35.4199],[89.7363,35.7715],[89.4727,35.9033],[89.3848,36.0352],[89.7363,36.0791]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"51\",\"name\":\"四川\",\"cp\":[102.9199,30.1904],\"childNum\":21},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[101.7773,33.5303],[101.8652,33.5742],[101.9531,33.4424],[101.8652,33.0908],[102.4805,33.4424],[102.2168,33.9258],[102.9199,34.3213],[103.0957,34.1895],[103.1836,33.7939],[104.1504,33.6182],[104.2383,33.3984],[104.4141,33.3105],[104.3262,33.2227],[104.4141,33.0469],[104.3262,32.8711],[104.4141,32.7393],[105.2051,32.6074],[105.3809,32.7393],[105.3809,32.8711],[105.4688,32.915],[105.5566,32.7393],[106.084,32.8711],[106.084,32.7393],[106.3477,32.6514],[107.0508,32.6953],[107.1387,32.4756],[107.2266,32.4316],[107.4023,32.5195],[108.0176,32.168],[108.2813,32.2559],[108.5449,32.2119],[108.3691,32.168],[108.2813,31.9043],[108.5449,31.6846],[108.1934,31.5088],[107.9297,30.8496],[107.4902,30.8496],[107.4023,30.7617],[107.4902,30.6299],[107.0508,30.0146],[106.7871,30.0146],[106.6113,30.3223],[106.2598,30.1904],[105.8203,30.4541],[105.6445,30.2783],[105.5566,30.1025],[105.7324,29.8828],[105.293,29.5313],[105.4688,29.3115],[105.7324,29.2676],[105.8203,28.96],[106.2598,28.8721],[106.3477,28.5205],[105.9961,28.7402],[105.6445,28.4326],[105.9082,28.125],[106.1719,28.125],[106.3477,27.8174],[105.6445,27.6416],[105.5566,27.7734],[105.293,27.7295],[105.2051,27.9932],[105.0293,28.0811],[104.8535,27.9053],[104.4141,27.9492],[104.3262,28.0371],[104.4141,28.125],[104.4141,28.2568],[104.2383,28.4326],[104.4141,28.6084],[103.8867,28.6523],[103.7988,28.3008],[103.4473,28.125],[103.4473,27.7734],[102.9199,27.29],[103.0078,26.3672],[102.6563,26.1914],[102.5684,26.3672],[102.1289,26.1035],[101.8652,26.0596],[101.6016,26.2354],[101.6895,26.3672],[101.4258,26.5869],[101.4258,26.8066],[101.4258,26.7188],[101.1621,27.0264],[101.1621,27.1582],[100.7227,27.8613],[100.3711,27.8174],[100.2832,27.7295],[100.0195,28.125],[100.1953,28.3447],[99.668,28.8281],[99.4043,28.5205],[99.4043,28.1689],[99.2285,28.3008],[99.1406,29.2676],[98.9648,30.7617],[98.6133,31.2012],[98.877,31.4209],[98.4375,31.8604],[98.1738,32.3438],[97.7344,32.5195],[97.4707,32.6953],[97.3828,32.8711],[97.7344,33.3984],[97.4707,33.5742],[97.3828,33.8818],[97.7344,33.9258],[97.6465,34.1016],[97.8223,34.1895],[98.4375,34.0576],[98.877,33.1787],[99.2285,33.0469],[99.2285,32.915],[99.7559,32.7393],[99.8438,33.0029],[100.1074,32.8711],[100.1074,32.6514],[100.3711,32.7393],[100.7227,32.5195],[100.7227,32.6514],[101.25,32.6953],[101.1621,33.2227],[101.6016,33.1348],[101.7773,33.2227],[101.6895,33.3105],[101.7773,33.5303]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"23\",\"name\":\"黑龙江\",\"cp\":[128.1445,48.5156],\"childNum\":13},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[121.4648,53.3496],[123.6621,53.5693],[124.8926,53.0859],[125.0684,53.2178],[125.5957,53.0859],[125.6836,52.9102],[126.123,52.7783],[126.0352,52.6025],[126.2109,52.5146],[126.3867,52.2949],[126.3867,52.207],[126.5625,52.1631],[126.4746,51.9434],[126.9141,51.3721],[126.8262,51.2842],[127.002,51.3281],[126.9141,51.1084],[127.2656,50.7568],[127.3535,50.2734],[127.6172,50.2295],[127.5293,49.8779],[127.793,49.6143],[128.7598,49.5703],[129.1113,49.3506],[129.4629,49.4385],[130.2539,48.8672],[130.6934,48.8672],[130.5176,48.6475],[130.8691,48.2959],[130.6934,48.1201],[131.0449,47.6807],[132.5391,47.7246],[132.627,47.9443],[133.0664,48.1201],[133.5059,48.1201],[134.209,48.3838],[135.0879,48.4277],[134.7363,48.252],[134.5605,47.9883],[134.7363,47.6807],[134.5605,47.4609],[134.3848,47.4609],[134.209,47.2852],[134.209,47.1533],[133.8574,46.5381],[133.9453,46.2744],[133.5059,45.835],[133.418,45.5713],[133.2422,45.5273],[133.0664,45.1318],[132.8906,45.0439],[131.9238,45.3516],[131.5723,45.0439],[131.0449,44.8682],[131.3086,44.0771],[131.2207,43.7256],[131.3086,43.4619],[130.8691,43.418],[130.5176,43.6377],[130.3418,43.9893],[129.9902,43.8574],[129.9023,44.0332],[129.8145,43.9014],[129.2871,43.8135],[129.1992,43.5938],[128.8477,43.5498],[128.4961,44.165],[128.4082,44.4727],[128.0566,44.3408],[128.0566,44.1211],[127.7051,44.1211],[127.5293,44.6045],[127.0898,44.6045],[127.002,44.7803],[127.0898,45],[126.9141,45.1318],[126.5625,45.2637],[126.0352,45.1758],[125.7715,45.3076],[125.6836,45.5273],[125.0684,45.3955],[124.8926,45.5273],[124.3652,45.4395],[124.0137,45.7471],[123.9258,46.2305],[123.2227,46.2305],[123.0469,46.582],[123.5742,46.6699],[123.5742,46.8896],[123.5742,46.8457],[123.4863,46.9775],[123.3984,46.9775],[123.3984,46.8896],[123.0469,46.7139],[122.4316,47.373],[124.2773,48.5156],[124.4531,48.1201],[124.8047,49.1309],[125.2441,49.1748],[125.1563,49.834],[125.332,50.1416],[125.7715,50.5371],[125.7715,50.7568],[126.0352,51.0205],[125.332,51.6357],[125.0684,51.6357],[124.8926,51.3721],[124.541,51.3721],[124.3652,51.2842],[123.6621,51.3721],[123.3105,51.2402],[122.959,51.3281],[122.6074,52.0752],[122.6953,52.251],[122.168,52.5146],[121.9922,52.2949],[121.7285,52.2949],[121.6406,52.4268],[121.2012,52.5586],[121.8164,53.042],[121.4648,53.3496]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"62\",\"name\":\"甘肃\",\"cp\":[95.7129,40.166],\"childNum\":14},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[96.416,42.7148],[97.207,42.8027],[97.8223,41.748],[97.8223,41.6162],[97.4707,41.4844],[98.3496,40.9131],[98.3496,40.5615],[98.6133,40.6494],[98.5254,40.7373],[98.7891,40.6055],[98.9648,40.7813],[99.0527,40.6934],[99.2285,40.8691],[99.9316,41.001],[100.1953,40.6494],[100.1074,40.2539],[99.4922,39.8584],[100.0195,39.7705],[100.5469,39.4189],[100.8105,39.4189],[100.9863,38.9355],[101.25,39.0234],[101.3379,38.7598],[101.7773,38.6719],[102.041,38.8916],[101.8652,39.1113],[102.4805,39.2432],[103.0078,39.1113],[103.3594,39.3311],[104.0625,39.4189],[104.2383,38.9795],[103.4473,38.3643],[103.5352,38.1445],[103.3594,38.0127],[103.4473,37.8369],[104.3262,37.4414],[104.5898,37.4414],[104.5898,37.2217],[104.8535,37.2217],[105.293,36.8262],[105.2051,36.6943],[105.4688,36.123],[105.293,35.9912],[105.3809,35.7715],[105.7324,35.7275],[105.8203,35.5518],[105.9961,35.4639],[105.9082,35.4199],[105.9961,35.4199],[106.084,35.376],[106.2598,35.4199],[106.3477,35.2441],[106.5234,35.332],[106.4355,35.6836],[106.6992,35.6836],[106.9629,35.8154],[106.875,36.123],[106.5234,36.2549],[106.5234,36.4746],[106.4355,36.5625],[106.6113,36.7822],[106.6113,37.0898],[107.3145,37.0898],[107.3145,36.9141],[108.7207,36.3428],[108.6328,35.9912],[108.5449,35.8594],[108.6328,35.5518],[108.5449,35.2881],[107.7539,35.2881],[107.7539,35.1123],[107.8418,35.0244],[107.666,34.9365],[107.2266,34.8926],[106.9629,35.0684],[106.6113,35.0684],[106.5234,34.7607],[106.3477,34.585],[106.6992,34.3213],[106.5234,34.2773],[106.6113,34.1455],[106.4355,33.9258],[106.5234,33.5303],[105.9961,33.6182],[105.7324,33.3984],[105.9961,33.1787],[105.9082,33.0029],[105.4688,32.915],[105.3809,32.8711],[105.3809,32.7393],[105.2051,32.6074],[104.4141,32.7393],[104.3262,32.8711],[104.4141,33.0469],[104.3262,33.2227],[104.4141,33.3105],[104.2383,33.3984],[104.1504,33.6182],[103.1836,33.7939],[103.0957,34.1895],[102.9199,34.3213],[102.2168,33.9258],[102.4805,33.4424],[101.8652,33.0908],[101.9531,33.4424],[101.8652,33.5742],[101.7773,33.5303],[101.6016,33.5303],[101.5137,33.7061],[101.25,33.6621],[100.8105,34.2773],[100.9863,34.3652],[101.6895,34.1016],[102.1289,34.2773],[102.2168,34.4092],[101.9531,34.6289],[101.9531,34.8486],[102.3926,35.2002],[102.3047,35.4199],[102.4805,35.5957],[102.832,35.5957],[102.6563,35.7715],[102.9199,35.9033],[102.9199,36.0791],[103.0078,36.2549],[102.832,36.3428],[102.5684,36.7383],[102.6563,36.8262],[102.4805,36.958],[102.5684,37.1777],[102.1289,37.4414],[101.9531,37.7051],[101.7773,37.6172],[101.5137,37.8809],[101.1621,37.8369],[100.7227,38.2324],[100.459,38.2764],[100.1074,38.4961],[100.0195,38.4521],[100.1953,38.2764],[99.8438,38.3643],[99.1406,38.9355],[98.7891,39.0674],[98.6133,38.9355],[98.3496,39.0234],[98.1738,38.8037],[97.0313,39.1992],[97.1191,38.584],[96.6797,38.4521],[96.6797,38.1885],[96.416,38.2324],[96.2402,38.1006],[95.7129,38.3643],[95.4492,38.2764],[95.0098,38.4082],[94.5703,38.3643],[94.3066,38.7598],[93.8672,38.7158],[93.6914,38.9355],[93.1641,38.9795],[93.1641,39.1992],[92.373,39.1113],[92.373,39.3311],[92.6367,39.6387],[93.0762,40.6494],[93.8672,40.6934],[94.043,41.0889],[94.5703,41.4844],[95.1855,41.792],[95.2734,41.6162],[95.9766,41.9238],[96.2402,42.2314],[96.0645,42.3193],[95.9766,42.4951],[96.416,42.7148]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"53\",\"name\":\"云南\",\"cp\":[101.8652,25.1807],\"childNum\":16},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[98.1738,28.125],[98.2617,28.3887],[98.3496,28.125],[98.7012,28.2129],[98.7891,28.3447],[98.6133,28.5205],[98.7012,28.916],[98.7891,29.0039],[98.7891,28.8721],[98.9648,28.8281],[98.9648,29.1357],[99.1406,29.2676],[99.2285,28.3008],[99.4043,28.1689],[99.4043,28.5205],[99.668,28.8281],[100.1953,28.3447],[100.0195,28.125],[100.2832,27.7295],[100.3711,27.8174],[100.7227,27.8613],[101.1621,27.1582],[101.1621,27.0264],[101.4258,26.7188],[101.4258,26.8066],[101.4258,26.5869],[101.6895,26.3672],[101.6016,26.2354],[101.8652,26.0596],[102.1289,26.1035],[102.5684,26.3672],[102.6563,26.1914],[103.0078,26.3672],[102.9199,27.29],[103.4473,27.7734],[103.4473,28.125],[103.7988,28.3008],[103.8867,28.6523],[104.4141,28.6084],[104.2383,28.4326],[104.4141,28.2568],[104.4141,28.125],[104.3262,28.0371],[104.4141,27.9492],[104.8535,27.9053],[105.0293,28.0811],[105.2051,27.9932],[105.293,27.7295],[105.2051,27.3779],[104.5898,27.334],[104.4141,27.4658],[104.1504,27.2461],[103.8867,27.4219],[103.623,27.0264],[103.7109,26.9824],[103.7109,26.7627],[103.8867,26.543],[104.4141,26.6748],[104.6777,26.4111],[104.3262,25.708],[104.8535,25.2246],[104.5898,25.0488],[104.6777,24.9609],[104.502,24.7412],[104.6777,24.3457],[104.7656,24.4775],[105.0293,24.4336],[105.2051,24.082],[105.4688,24.0381],[105.5566,24.126],[105.9961,24.126],[106.1719,23.8184],[106.1719,23.5547],[105.6445,23.4229],[105.5566,23.2031],[105.293,23.3789],[104.8535,23.1592],[104.7656,22.8516],[104.3262,22.6758],[104.1504,22.8076],[103.9746,22.5439],[103.623,22.7637],[103.5352,22.5879],[103.3594,22.8076],[103.0957,22.4561],[102.4805,22.7637],[102.3047,22.4121],[101.8652,22.3682],[101.7773,22.5],[101.6016,22.1924],[101.8652,21.6211],[101.7773,21.1377],[101.6016,21.2256],[101.25,21.1816],[101.1621,21.7529],[100.6348,21.4453],[100.1074,21.4893],[99.9316,22.0605],[99.2285,22.1484],[99.4043,22.5879],[99.3164,22.7197],[99.4922,23.0713],[98.877,23.2031],[98.7012,23.9502],[98.877,24.126],[98.1738,24.082],[97.7344,23.8623],[97.5586,23.9063],[97.7344,24.126],[97.6465,24.4336],[97.5586,24.4336],[97.5586,24.7412],[97.7344,24.8291],[97.8223,25.2686],[98.1738,25.4004],[98.1738,25.6201],[98.3496,25.5762],[98.5254,25.8398],[98.7012,25.8838],[98.6133,26.0596],[98.7012,26.1475],[98.7891,26.5869],[98.7012,27.5098],[98.5254,27.6416],[98.3496,27.5098],[98.1738,28.125]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"45\",\"name\":\"广西\",\"cp\":[108.2813,23.6426],\"childNum\":14},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[104.502,24.7412],[104.6777,24.6094],[105.2051,24.9609],[105.9961,24.6533],[106.1719,24.7852],[106.1719,24.9609],[106.875,25.1807],[107.0508,25.2686],[106.9629,25.4883],[107.2266,25.6201],[107.4902,25.2246],[107.7539,25.2246],[107.8418,25.1367],[108.1055,25.2246],[108.1934,25.4443],[108.3691,25.5322],[108.6328,25.3125],[108.6328,25.5762],[109.0723,25.5322],[108.9844,25.752],[109.3359,25.708],[109.5117,26.0156],[109.7754,25.8838],[109.9512,26.1914],[110.2148,25.9717],[110.5664,26.3232],[111.1816,26.3232],[111.2695,26.2354],[111.2695,25.8838],[111.4453,25.8398],[111.0059,25.0049],[111.0938,24.9609],[111.3574,25.1367],[111.5332,24.6533],[111.709,24.7852],[112.0605,24.7412],[111.8848,24.6533],[112.0605,24.3457],[111.8848,24.2139],[111.8848,23.9941],[111.7969,23.8184],[111.6211,23.8184],[111.6211,23.6865],[111.3574,23.4668],[111.4453,23.0273],[111.2695,22.8076],[110.7422,22.5439],[110.7422,22.2803],[110.6543,22.1484],[110.3027,22.1484],[110.3027,21.8848],[109.9512,21.8408],[109.8633,21.665],[109.7754,21.6211],[109.7754,21.4014],[109.5996,21.4453],[109.1602,21.3574],[109.248,20.874],[109.0723,20.9619],[109.0723,21.5332],[108.7207,21.5332],[108.6328,21.665],[108.2813,21.4893],[107.8418,21.6211],[107.4023,21.6211],[107.0508,21.7969],[107.0508,21.9287],[106.6992,22.0166],[106.6113,22.4121],[106.7871,22.7637],[106.6992,22.8955],[105.9082,22.9395],[105.5566,23.0713],[105.5566,23.2031],[105.6445,23.4229],[106.1719,23.5547],[106.1719,23.8184],[105.9961,24.126],[105.5566,24.126],[105.4688,24.0381],[105.2051,24.082],[105.0293,24.4336],[104.7656,24.4775],[104.6777,24.3457],[104.502,24.7412]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"43\",\"name\":\"湖南\",\"cp\":[111.5332,27.3779],\"childNum\":14},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[109.248,28.4766],[109.248,29.1357],[109.5117,29.6191],[109.6875,29.6191],[109.7754,29.751],[110.4785,29.6631],[110.6543,29.751],[110.4785,30.0146],[110.8301,30.1465],[111.7969,29.9268],[112.2363,29.5313],[112.5,29.6191],[112.6758,29.5752],[112.9395,29.7949],[113.0273,29.751],[112.9395,29.4873],[113.0273,29.4434],[113.5547,29.8389],[113.5547,29.707],[113.7305,29.5752],[113.6426,29.3115],[113.7305,29.0918],[113.9063,29.0479],[114.1699,28.8281],[114.082,28.5645],[114.2578,28.3447],[113.7305,27.9492],[113.6426,27.5977],[113.6426,27.3779],[113.8184,27.29],[113.7305,27.1143],[113.9063,26.9385],[113.9063,26.6309],[114.082,26.5869],[113.9941,26.1914],[114.2578,26.1475],[113.9941,26.0596],[113.9063,25.4443],[113.6426,25.3125],[113.2031,25.5322],[112.8516,25.3564],[113.0273,25.2246],[113.0273,24.9609],[112.8516,24.917],[112.5879,25.1367],[112.2363,25.1807],[112.1484,24.873],[112.0605,24.7412],[111.709,24.7852],[111.5332,24.6533],[111.3574,25.1367],[111.0938,24.9609],[111.0059,25.0049],[111.4453,25.8398],[111.2695,25.8838],[111.2695,26.2354],[111.1816,26.3232],[110.5664,26.3232],[110.2148,25.9717],[109.9512,26.1914],[109.7754,25.8838],[109.5117,26.0156],[109.4238,26.2793],[109.248,26.3232],[109.4238,26.5869],[109.3359,26.7188],[109.5117,26.8066],[109.5117,27.0264],[109.3359,27.1582],[108.8965,27.0264],[108.8086,27.1143],[109.4238,27.5977],[109.3359,27.9053],[109.3359,28.2568],[109.248,28.4766]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"61\",\"name\":\"陕西\",\"cp\":[109.5996,35.6396],\"childNum\":10},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[105.4688,32.915],[105.9082,33.0029],[105.9961,33.1787],[105.7324,33.3984],[105.9961,33.6182],[106.5234,33.5303],[106.4355,33.9258],[106.6113,34.1455],[106.5234,34.2773],[106.6992,34.3213],[106.3477,34.585],[106.5234,34.7607],[106.6113,35.0684],[106.9629,35.0684],[107.2266,34.8926],[107.666,34.9365],[107.8418,35.0244],[107.7539,35.1123],[107.7539,35.2881],[108.5449,35.2881],[108.6328,35.5518],[108.5449,35.8594],[108.6328,35.9912],[108.7207,36.3428],[107.3145,36.9141],[107.3145,37.0898],[107.3145,37.6172],[107.666,37.8809],[108.1934,37.6172],[108.7207,37.7051],[108.8086,38.0127],[108.8965,37.9688],[109.0723,38.0127],[108.9844,38.3203],[109.9512,39.1553],[109.8633,39.2432],[110.2148,39.2871],[110.127,39.4629],[110.6543,39.2871],[111.0938,39.5947],[111.0938,39.375],[111.1816,39.2432],[110.918,38.7158],[110.8301,38.4961],[110.4785,38.1885],[110.4785,37.9688],[110.8301,37.6611],[110.3906,37.002],[110.4785,36.123],[110.5664,35.6396],[110.2148,34.8926],[110.2148,34.6729],[110.3906,34.585],[110.4785,34.2334],[110.6543,34.1455],[110.6543,33.8379],[111.0059,33.5303],[111.0059,33.2666],[110.7422,33.1348],[110.5664,33.2666],[110.3027,33.1787],[109.5996,33.2666],[109.4238,33.1348],[109.7754,33.0469],[109.7754,32.915],[110.127,32.7393],[110.127,32.6074],[109.6875,32.6074],[109.5117,32.4316],[109.5996,31.7285],[109.248,31.7285],[109.0723,31.9482],[108.5449,32.2119],[108.2813,32.2559],[108.0176,32.168],[107.4023,32.5195],[107.2266,32.4316],[107.1387,32.4756],[107.0508,32.6953],[106.3477,32.6514],[106.084,32.7393],[106.084,32.8711],[105.5566,32.7393],[105.4688,32.915]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"44\",\"name\":\"广东\",\"cp\":[113.4668,22.8076],\"childNum\":21},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[109.7754,21.4014],[109.7754,21.6211],[109.8633,21.665],[109.9512,21.8408],[110.3027,21.8848],[110.3027,22.1484],[110.6543,22.1484],[110.7422,22.2803],[110.7422,22.5439],[111.2695,22.8076],[111.4453,23.0273],[111.3574,23.4668],[111.6211,23.6865],[111.6211,23.8184],[111.7969,23.8184],[111.8848,23.9941],[111.8848,24.2139],[112.0605,24.3457],[111.8848,24.6533],[112.0605,24.7412],[112.1484,24.873],[112.2363,25.1807],[112.5879,25.1367],[112.8516,24.917],[113.0273,24.9609],[113.0273,25.2246],[112.8516,25.3564],[113.2031,25.5322],[113.6426,25.3125],[113.9063,25.4443],[113.9941,25.2686],[114.6094,25.4004],[114.7852,25.2686],[114.6973,25.1367],[114.4336,24.9609],[114.1699,24.6973],[114.4336,24.5215],[115.4004,24.7852],[115.8398,24.5654],[115.752,24.7852],[115.9277,24.917],[116.2793,24.7852],[116.3672,24.873],[116.543,24.6094],[116.7188,24.6533],[116.9824,24.1699],[116.9824,23.9063],[117.1582,23.5547],[117.334,23.2471],[116.8945,23.3789],[116.6309,23.1152],[116.543,22.8516],[115.9277,22.7197],[115.6641,22.7637],[115.5762,22.6318],[115.0488,22.6758],[114.6094,22.3682],[114.3457,22.5439],[113.9941,22.5],[113.8184,22.1924],[114.3457,22.1484],[114.4336,22.0166],[114.082,21.9287],[113.9941,21.7969],[113.5547,22.0166],[113.1152,21.8408],[112.9395,21.5771],[112.4121,21.4453],[112.2363,21.5332],[111.5332,21.4893],[111.2695,21.3574],[110.7422,21.3574],[110.6543,21.2256],[110.7422,20.918],[110.4785,20.874],[110.6543,20.2588],[110.5664,20.2588],[110.3906,20.127],[110.0391,20.127],[109.8633,20.127],[109.8633,20.3027],[109.5996,20.918],[109.7754,21.4014],[109.7754,21.4014]],[[113.5986,22.1649],[113.6096,22.1265],[113.5547,22.11],[113.5437,22.2034],[113.5767,22.2034],[113.5986,22.1649]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"22\",\"name\":\"吉林\",\"cp\":[126.4746,43.5938],\"childNum\":9},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[123.2227,46.2305],[123.9258,46.2305],[124.0137,45.7471],[124.3652,45.4395],[124.8926,45.5273],[125.0684,45.3955],[125.6836,45.5273],[125.7715,45.3076],[126.0352,45.1758],[126.5625,45.2637],[126.9141,45.1318],[127.0898,45],[127.002,44.7803],[127.0898,44.6045],[127.5293,44.6045],[127.7051,44.1211],[128.0566,44.1211],[128.0566,44.3408],[128.4082,44.4727],[128.4961,44.165],[128.8477,43.5498],[129.1992,43.5938],[129.2871,43.8135],[129.8145,43.9014],[129.9023,44.0332],[129.9902,43.8574],[130.3418,43.9893],[130.5176,43.6377],[130.8691,43.418],[131.3086,43.4619],[131.3086,43.3301],[131.1328,42.9346],[130.4297,42.7148],[130.6055,42.6709],[130.6055,42.4512],[130.2539,42.7588],[130.2539,42.8906],[130.166,42.9785],[129.9023,43.0225],[129.7266,42.4951],[129.375,42.4512],[128.9355,42.0117],[128.0566,42.0117],[128.3203,41.5723],[128.1445,41.3525],[127.0898,41.5283],[127.1777,41.5723],[126.9141,41.792],[126.6504,41.6602],[126.4746,41.3965],[126.123,40.957],[125.6836,40.8691],[125.5957,40.9131],[125.7715,41.2207],[125.332,41.6602],[125.332,41.9678],[125.4199,42.0996],[125.332,42.1436],[124.8926,42.8027],[124.8926,43.0664],[124.7168,43.0664],[124.4531,42.8467],[124.2773,43.2422],[123.8379,43.4619],[123.6621,43.374],[123.3105,43.5059],[123.4863,43.7256],[123.1348,44.4727],[122.3438,44.2529],[122.0801,44.8682],[122.2559,45.2637],[121.9043,45.7031],[121.7285,45.7471],[121.8164,46.0107],[122.2559,45.791],[122.4316,45.8789],[122.6953,45.7031],[122.7832,46.0107],[123.2227,46.2305]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"13\",\"name\":\"河北\",\"cp\":[115.4004,37.9688],\"childNum\":11},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[114.5215,39.5068],[114.3457,39.8584],[113.9941,39.9902],[114.5215,40.3418],[114.3457,40.3857],[114.2578,40.6055],[114.082,40.7373],[113.9063,41.1328],[113.9941,41.2207],[113.9063,41.4404],[114.2578,41.5723],[114.1699,41.792],[114.5215,42.1436],[114.873,42.0996],[114.9609,41.6162],[115.2246,41.5723],[115.9277,41.9238],[116.0156,41.792],[116.2793,42.0117],[116.8066,42.0117],[116.8945,42.4072],[117.334,42.4512],[117.5098,42.583],[117.7734,42.627],[118.0371,42.4072],[117.9492,42.2314],[118.125,42.0557],[118.3008,42.0996],[118.3008,41.792],[118.125,41.748],[118.3887,41.3086],[119.2676,41.3086],[118.8281,40.8252],[119.2676,40.5176],[119.5313,40.5615],[119.707,40.1221],[119.8828,39.9463],[119.5313,39.6826],[119.4434,39.4189],[118.916,39.0674],[118.4766,38.9355],[118.125,39.0234],[118.0371,39.1992],[118.0371,39.2432],[117.8613,39.4189],[117.9492,39.5947],[117.6855,39.5947],[117.5098,39.7705],[117.5098,39.9902],[117.6855,39.9902],[117.6855,40.0781],[117.4219,40.21],[117.2461,40.5176],[117.4219,40.6494],[116.9824,40.6934],[116.6309,41.0449],[116.3672,40.9131],[116.4551,40.7813],[116.1914,40.7813],[116.1035,40.6055],[115.752,40.5615],[115.9277,40.2539],[115.4004,39.9463],[115.4883,39.6387],[115.752,39.5068],[116.1914,39.5947],[116.3672,39.4629],[116.543,39.5947],[116.8066,39.5947],[116.8945,39.1113],[116.7188,38.9355],[116.7188,38.8037],[117.2461,38.54],[117.5977,38.6279],[117.9492,38.3203],[117.4219,37.8369],[116.8066,37.8369],[116.4551,37.4854],[116.2793,37.5732],[116.2793,37.3535],[116.0156,37.3535],[115.752,36.9141],[115.3125,36.5186],[115.4883,36.167],[115.3125,36.0791],[115.1367,36.2109],[114.9609,36.0791],[114.873,36.123],[113.7305,36.3428],[113.4668,36.6504],[113.7305,36.8701],[113.7305,37.1338],[114.1699,37.6611],[113.9941,37.7051],[113.8184,38.1445],[113.5547,38.2764],[113.5547,38.54],[113.8184,38.8037],[113.8184,38.9355],[113.9063,39.0234],[114.3457,39.0674],[114.5215,39.5068]]],[[[117.2461,40.0781],[117.1582,39.8145],[117.1582,39.6387],[116.8945,39.6826],[116.8945,39.8145],[116.8066,39.9902],[117.2461,40.0781]]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"42\",\"name\":\"湖北\",\"cp\":[112.2363,31.1572],\"childNum\":17},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[110.2148,31.1572],[110.127,31.377],[109.6875,31.5527],[109.7754,31.6846],[109.5996,31.7285],[109.5117,32.4316],[109.6875,32.6074],[110.127,32.6074],[110.127,32.7393],[109.7754,32.915],[109.7754,33.0469],[109.4238,33.1348],[109.5996,33.2666],[110.3027,33.1787],[110.5664,33.2666],[110.7422,33.1348],[111.0059,33.2666],[111.5332,32.6074],[112.3242,32.3438],[113.2031,32.4316],[113.4668,32.2998],[113.7305,32.4316],[113.8184,31.8604],[113.9941,31.7725],[114.1699,31.8604],[114.5215,31.7725],[114.6094,31.5527],[114.7852,31.4648],[115.1367,31.5967],[115.2246,31.4209],[115.4004,31.4209],[115.5762,31.2012],[116.0156,31.0254],[115.752,30.6738],[116.1035,30.1904],[116.1035,29.8389],[115.9277,29.707],[115.4883,29.7949],[114.873,29.3994],[114.2578,29.3555],[113.9063,29.0479],[113.7305,29.0918],[113.6426,29.3115],[113.7305,29.5752],[113.5547,29.707],[113.5547,29.8389],[113.0273,29.4434],[112.9395,29.4873],[113.0273,29.751],[112.9395,29.7949],[112.6758,29.5752],[112.5,29.6191],[112.2363,29.5313],[111.7969,29.9268],[110.8301,30.1465],[110.4785,30.0146],[110.6543,29.751],[110.4785,29.6631],[109.7754,29.751],[109.6875,29.6191],[109.5117,29.6191],[109.248,29.1357],[109.0723,29.3555],[108.9844,29.3115],[108.6328,29.8389],[108.457,29.7949],[108.5449,30.2344],[108.457,30.4102],[108.6328,30.5859],[108.8086,30.498],[109.0723,30.6299],[109.1602,30.542],[109.248,30.6299],[109.4238,30.542],[109.8633,30.8936],[110.0391,30.8057],[110.2148,31.1572]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"52\",\"name\":\"贵州\",\"cp\":[106.6113,26.9385],\"childNum\":9},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[104.1504,27.2461],[104.4141,27.4658],[104.5898,27.334],[105.2051,27.3779],[105.293,27.7295],[105.5566,27.7734],[105.6445,27.6416],[106.3477,27.8174],[106.1719,28.125],[105.9082,28.125],[105.6445,28.4326],[105.9961,28.7402],[106.3477,28.5205],[106.5234,28.5645],[106.4355,28.7842],[106.5234,28.7842],[106.6113,28.6523],[106.6113,28.5205],[106.6992,28.4766],[106.875,28.7842],[107.4023,28.8721],[107.4023,29.1797],[107.5781,29.2236],[107.8418,29.1357],[107.8418,29.0039],[108.2813,29.0918],[108.3691,28.6523],[108.5449,28.6523],[108.5449,28.3887],[108.7207,28.4766],[108.7207,28.2129],[109.0723,28.2129],[109.248,28.4766],[109.3359,28.2568],[109.3359,27.9053],[109.4238,27.5977],[108.8086,27.1143],[108.8965,27.0264],[109.3359,27.1582],[109.5117,27.0264],[109.5117,26.8066],[109.3359,26.7188],[109.4238,26.5869],[109.248,26.3232],[109.4238,26.2793],[109.5117,26.0156],[109.3359,25.708],[108.9844,25.752],[109.0723,25.5322],[108.6328,25.5762],[108.6328,25.3125],[108.3691,25.5322],[108.1934,25.4443],[108.1055,25.2246],[107.8418,25.1367],[107.7539,25.2246],[107.4902,25.2246],[107.2266,25.6201],[106.9629,25.4883],[107.0508,25.2686],[106.875,25.1807],[106.1719,24.9609],[106.1719,24.7852],[105.9961,24.6533],[105.2051,24.9609],[104.6777,24.6094],[104.502,24.7412],[104.6777,24.9609],[104.5898,25.0488],[104.8535,25.2246],[104.3262,25.708],[104.6777,26.4111],[104.4141,26.6748],[103.8867,26.543],[103.7109,26.7627],[103.7109,26.9824],[103.623,27.0264],[103.8867,27.4219],[104.1504,27.2461]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"37\",\"name\":\"山东\",\"cp\":[118.7402,36.4307],\"childNum\":17},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[115.4883,36.167],[115.3125,36.5186],[115.752,36.9141],[116.0156,37.3535],[116.2793,37.3535],[116.2793,37.5732],[116.4551,37.4854],[116.8066,37.8369],[117.4219,37.8369],[117.9492,38.3203],[118.125,38.1445],[118.916,38.1445],[119.3555,37.6611],[119.0039,37.5293],[119.0039,37.3535],[119.3555,37.1338],[119.707,37.1338],[119.8828,37.3975],[120.498,37.8369],[120.5859,38.1445],[120.9375,38.4521],[121.0254,37.8369],[121.2012,37.6611],[121.9043,37.4854],[122.168,37.6172],[122.2559,37.4854],[122.6074,37.4854],[122.6953,37.3535],[122.6074,36.9141],[122.4316,36.7822],[121.8164,36.8701],[121.7285,36.6943],[121.1133,36.6064],[121.1133,36.4307],[121.377,36.2549],[120.7617,36.167],[120.9375,35.8594],[120.6738,36.0352],[119.707,35.4639],[119.9707,34.9805],[119.3555,35.0244],[119.2676,35.1123],[118.916,35.0244],[118.7402,34.7168],[118.4766,34.6729],[118.3887,34.4092],[118.2129,34.4092],[118.125,34.6289],[117.9492,34.6729],[117.5977,34.4531],[117.334,34.585],[117.2461,34.4531],[116.8066,34.9365],[116.4551,34.8926],[116.3672,34.6289],[116.1914,34.585],[115.5762,34.585],[115.4004,34.8486],[114.7852,35.0684],[115.0488,35.376],[115.2246,35.4199],[115.4883,35.7275],[116.1035,36.0791],[115.3125,35.8154],[115.4883,36.167]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"36\",\"name\":\"江西\",\"cp\":[116.0156,27.29],\"childNum\":11},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[114.2578,28.3447],[114.082,28.5645],[114.1699,28.8281],[113.9063,29.0479],[114.2578,29.3555],[114.873,29.3994],[115.4883,29.7949],[115.9277,29.707],[116.1035,29.8389],[116.2793,29.7949],[116.7188,30.0586],[116.8945,29.9268],[116.7188,29.751],[116.7188,29.6191],[117.1582,29.707],[117.0703,29.8389],[117.1582,29.9268],[117.5098,29.6191],[118.0371,29.5752],[118.2129,29.3994],[118.0371,29.1797],[118.0371,29.0479],[118.3887,28.7842],[118.4766,28.3447],[118.4766,28.3008],[118.3008,28.0811],[117.7734,27.8174],[117.5098,27.9932],[116.9824,27.6416],[117.1582,27.29],[117.0703,27.1143],[116.543,26.8066],[116.6309,26.4551],[116.3672,26.2354],[116.4551,26.1035],[116.1914,25.8838],[116.0156,25.2686],[115.8398,25.2246],[115.9277,24.917],[115.752,24.7852],[115.8398,24.5654],[115.4004,24.7852],[114.4336,24.5215],[114.1699,24.6973],[114.4336,24.9609],[114.6973,25.1367],[114.7852,25.2686],[114.6094,25.4004],[113.9941,25.2686],[113.9063,25.4443],[113.9941,26.0596],[114.2578,26.1475],[113.9941,26.1914],[114.082,26.5869],[113.9063,26.6309],[113.9063,26.9385],[113.7305,27.1143],[113.8184,27.29],[113.6426,27.3779],[113.6426,27.5977],[113.7305,27.9492],[114.2578,28.3447]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"41\",\"name\":\"河南\",\"cp\":[113.4668,33.8818],\"childNum\":17},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[110.3906,34.585],[110.8301,34.6289],[111.1816,34.8047],[111.5332,34.8486],[111.7969,35.0684],[112.0605,35.0684],[112.0605,35.2881],[112.7637,35.2002],[113.1152,35.332],[113.6426,35.6836],[113.7305,36.3428],[114.873,36.123],[114.9609,36.0791],[115.1367,36.2109],[115.3125,36.0791],[115.4883,36.167],[115.3125,35.8154],[116.1035,36.0791],[115.4883,35.7275],[115.2246,35.4199],[115.0488,35.376],[114.7852,35.0684],[115.4004,34.8486],[115.5762,34.585],[116.1914,34.585],[116.1914,34.4092],[116.543,34.2773],[116.6309,33.9258],[116.1914,33.7061],[116.0156,33.9697],[115.6641,34.0576],[115.5762,33.9258],[115.5762,33.6621],[115.4004,33.5303],[115.3125,33.1787],[114.873,33.1348],[114.873,33.0029],[115.1367,32.8711],[115.2246,32.6074],[115.5762,32.4316],[115.8398,32.5195],[115.9277,31.7725],[115.4883,31.6846],[115.4004,31.4209],[115.2246,31.4209],[115.1367,31.5967],[114.7852,31.4648],[114.6094,31.5527],[114.5215,31.7725],[114.1699,31.8604],[113.9941,31.7725],[113.8184,31.8604],[113.7305,32.4316],[113.4668,32.2998],[113.2031,32.4316],[112.3242,32.3438],[111.5332,32.6074],[111.0059,33.2666],[111.0059,33.5303],[110.6543,33.8379],[110.6543,34.1455],[110.4785,34.2334],[110.3906,34.585]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"21\",\"name\":\"辽宁\",\"cp\":[122.3438,41.0889],\"childNum\":14},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[119.2676,41.3086],[119.4434,41.6162],[119.2676,41.7041],[119.3555,42.2754],[119.5313,42.3633],[119.8828,42.1875],[120.1465,41.7041],[120.498,42.0996],[121.4648,42.4951],[121.7285,42.4512],[121.9922,42.7148],[122.3438,42.6709],[122.3438,42.8467],[122.7832,42.7148],[123.1348,42.8027],[123.3105,42.9785],[123.5742,43.0225],[123.6621,43.374],[123.8379,43.4619],[124.2773,43.2422],[124.4531,42.8467],[124.7168,43.0664],[124.8926,43.0664],[124.8926,42.8027],[125.332,42.1436],[125.4199,42.0996],[125.332,41.9678],[125.332,41.6602],[125.7715,41.2207],[125.5957,40.9131],[125.6836,40.8691],[124.541,40.21],[124.1016,39.6826],[123.3984,39.6826],[123.1348,39.4189],[123.1348,39.0234],[122.0801,39.0234],[121.5527,38.7158],[121.1133,38.6719],[120.9375,38.9795],[121.377,39.1992],[121.2012,39.5508],[122.0801,40.3857],[121.9922,40.6934],[121.7285,40.8252],[121.2012,40.8252],[120.5859,40.21],[119.8828,39.9463],[119.707,40.1221],[119.5313,40.5615],[119.2676,40.5176],[118.8281,40.8252],[119.2676,41.3086]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"14\",\"name\":\"山西\",\"cp\":[112.4121,37.6611],\"childNum\":11},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[110.918,38.7158],[111.1816,39.2432],[111.0938,39.375],[111.3574,39.4189],[111.4453,39.6387],[111.9727,39.5947],[112.3242,40.2539],[112.7637,40.166],[113.2031,40.3857],[113.5547,40.3418],[113.8184,40.5176],[114.082,40.5176],[114.082,40.7373],[114.2578,40.6055],[114.3457,40.3857],[114.5215,40.3418],[113.9941,39.9902],[114.3457,39.8584],[114.5215,39.5068],[114.3457,39.0674],[113.9063,39.0234],[113.8184,38.9355],[113.8184,38.8037],[113.5547,38.54],[113.5547,38.2764],[113.8184,38.1445],[113.9941,37.7051],[114.1699,37.6611],[113.7305,37.1338],[113.7305,36.8701],[113.4668,36.6504],[113.7305,36.3428],[113.6426,35.6836],[113.1152,35.332],[112.7637,35.2002],[112.0605,35.2881],[112.0605,35.0684],[111.7969,35.0684],[111.5332,34.8486],[111.1816,34.8047],[110.8301,34.6289],[110.3906,34.585],[110.2148,34.6729],[110.2148,34.8926],[110.5664,35.6396],[110.4785,36.123],[110.3906,37.002],[110.8301,37.6611],[110.4785,37.9688],[110.4785,38.1885],[110.8301,38.4961],[110.918,38.7158]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"34\",\"name\":\"安徽\",\"cp\":[117.2461,32.0361],\"childNum\":17},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[116.6309,33.9258],[116.543,34.2773],[116.1914,34.4092],[116.1914,34.585],[116.3672,34.6289],[116.8945,34.4092],[117.1582,34.0576],[117.5977,34.0137],[117.7734,33.7061],[118.125,33.75],[117.9492,33.2227],[118.0371,33.1348],[118.2129,33.2227],[118.3008,32.7832],[118.7402,32.7393],[118.916,32.959],[119.1797,32.8271],[119.1797,32.4756],[118.5645,32.5635],[118.6523,32.2119],[118.4766,32.168],[118.3887,31.9482],[118.916,31.5527],[118.7402,31.377],[118.8281,31.2451],[119.3555,31.2891],[119.4434,31.1572],[119.6191,31.1133],[119.6191,31.0693],[119.4434,30.6738],[119.2676,30.6299],[119.3555,30.4102],[118.916,30.3223],[118.916,29.9707],[118.7402,29.707],[118.2129,29.3994],[118.0371,29.5752],[117.5098,29.6191],[117.1582,29.9268],[117.0703,29.8389],[117.1582,29.707],[116.7188,29.6191],[116.7188,29.751],[116.8945,29.9268],[116.7188,30.0586],[116.2793,29.7949],[116.1035,29.8389],[116.1035,30.1904],[115.752,30.6738],[116.0156,31.0254],[115.5762,31.2012],[115.4004,31.4209],[115.4883,31.6846],[115.9277,31.7725],[115.8398,32.5195],[115.5762,32.4316],[115.2246,32.6074],[115.1367,32.8711],[114.873,33.0029],[114.873,33.1348],[115.3125,33.1787],[115.4004,33.5303],[115.5762,33.6621],[115.5762,33.9258],[115.6641,34.0576],[116.0156,33.9697],[116.1914,33.7061],[116.6309,33.9258]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"35\",\"name\":\"福建\",\"cp\":[118.3008,25.9277],\"childNum\":9},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[118.4766,28.3008],[118.8281,28.2568],[118.7402,28.0371],[118.916,27.4658],[119.2676,27.4219],[119.6191,27.6855],[119.7949,27.29],[120.2344,27.4219],[120.4102,27.1582],[120.7617,27.0264],[120.6738,26.8945],[120.2344,26.8506],[120.2344,26.7188],[120.4102,26.6748],[120.498,26.3672],[120.2344,26.2793],[120.4102,26.1475],[120.0586,26.1914],[119.9707,25.9277],[119.7949,25.9277],[119.9707,25.4004],[119.7949,25.2686],[119.5313,25.1367],[119.4434,25.0049],[119.2676,25.0928],[118.916,24.8291],[118.6523,24.5215],[118.4766,24.5215],[118.4766,24.4336],[118.2129,24.3457],[118.2129,24.1699],[117.8613,23.9941],[117.7734,23.7744],[117.5098,23.5986],[117.1582,23.5547],[116.9824,23.9063],[116.9824,24.1699],[116.7188,24.6533],[116.543,24.6094],[116.3672,24.873],[116.2793,24.7852],[115.9277,24.917],[115.8398,25.2246],[116.0156,25.2686],[116.1914,25.8838],[116.4551,26.1035],[116.3672,26.2354],[116.6309,26.4551],[116.543,26.8066],[117.0703,27.1143],[117.1582,27.29],[116.9824,27.6416],[117.5098,27.9932],[117.7734,27.8174],[118.3008,28.0811],[118.4766,28.3008]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"33\",\"name\":\"浙江\",\"cp\":[120.498,29.0918],\"childNum\":11},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[118.2129,29.3994],[118.7402,29.707],[118.916,29.9707],[118.916,30.3223],[119.3555,30.4102],[119.2676,30.6299],[119.4434,30.6738],[119.6191,31.0693],[119.6191,31.1133],[119.9707,31.1572],[120.498,30.8057],[120.9375,31.0254],[121.2891,30.6738],[121.9922,30.8057],[122.6953,30.8936],[122.8711,30.7178],[122.959,30.1465],[122.6074,30.1025],[122.6074,29.9268],[122.168,29.5313],[122.3438,28.8721],[121.9922,28.8721],[121.9922,28.4326],[121.7285,28.3447],[121.7285,28.2129],[121.4648,28.2129],[121.5527,28.0371],[121.2891,27.9492],[121.1133,27.4219],[120.6738,27.334],[120.6738,27.1582],[120.9375,27.0264],[120.7617,27.0264],[120.4102,27.1582],[120.2344,27.4219],[119.7949,27.29],[119.6191,27.6855],[119.2676,27.4219],[118.916,27.4658],[118.7402,28.0371],[118.8281,28.2568],[118.4766,28.3008],[118.4766,28.3447],[118.3887,28.7842],[118.0371,29.0479],[118.0371,29.1797],[118.2129,29.3994]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"32\",\"name\":\"江苏\",\"cp\":[120.0586,32.915],\"childNum\":13},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[116.3672,34.6289],[116.4551,34.8926],[116.8066,34.9365],[117.2461,34.4531],[117.334,34.585],[117.5977,34.4531],[117.9492,34.6729],[118.125,34.6289],[118.2129,34.4092],[118.3887,34.4092],[118.4766,34.6729],[118.7402,34.7168],[118.916,35.0244],[119.2676,35.1123],[119.3555,35.0244],[119.3555,34.8486],[119.707,34.585],[120.3223,34.3652],[120.9375,33.0469],[121.0254,32.6514],[121.377,32.4756],[121.4648,32.168],[121.9043,31.9922],[121.9922,31.6846],[121.9922,31.5967],[121.2012,31.8604],[121.1133,31.7285],[121.377,31.5088],[121.2012,31.4648],[120.9375,31.0254],[120.498,30.8057],[119.9707,31.1572],[119.6191,31.1133],[119.4434,31.1572],[119.3555,31.2891],[118.8281,31.2451],[118.7402,31.377],[118.916,31.5527],[118.3887,31.9482],[118.4766,32.168],[118.6523,32.2119],[118.5645,32.5635],[119.1797,32.4756],[119.1797,32.8271],[118.916,32.959],[118.7402,32.7393],[118.3008,32.7832],[118.2129,33.2227],[118.0371,33.1348],[117.9492,33.2227],[118.125,33.75],[117.7734,33.7061],[117.5977,34.0137],[117.1582,34.0576],[116.8945,34.4092],[116.3672,34.6289]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"50\",\"name\":\"重庆\",\"cp\":[107.7539,30.1904],\"childNum\":40},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[108.5449,31.6846],[108.2813,31.9043],[108.3691,32.168],[108.5449,32.2119],[109.0723,31.9482],[109.248,31.7285],[109.5996,31.7285],[109.7754,31.6846],[109.6875,31.5527],[110.127,31.377],[110.2148,31.1572],[110.0391,30.8057],[109.8633,30.8936],[109.4238,30.542],[109.248,30.6299],[109.1602,30.542],[109.0723,30.6299],[108.8086,30.498],[108.6328,30.5859],[108.457,30.4102],[108.5449,30.2344],[108.457,29.7949],[108.6328,29.8389],[108.9844,29.3115],[109.0723,29.3555],[109.248,29.1357],[109.248,28.4766],[109.0723,28.2129],[108.7207,28.2129],[108.7207,28.4766],[108.5449,28.3887],[108.5449,28.6523],[108.3691,28.6523],[108.2813,29.0918],[107.8418,29.0039],[107.8418,29.1357],[107.5781,29.2236],[107.4023,29.1797],[107.4023,28.8721],[106.875,28.7842],[106.6992,28.4766],[106.6113,28.5205],[106.6113,28.6523],[106.5234,28.7842],[106.4355,28.7842],[106.5234,28.5645],[106.3477,28.5205],[106.2598,28.8721],[105.8203,28.96],[105.7324,29.2676],[105.4688,29.3115],[105.293,29.5313],[105.7324,29.8828],[105.5566,30.1025],[105.6445,30.2783],[105.8203,30.4541],[106.2598,30.1904],[106.6113,30.3223],[106.7871,30.0146],[107.0508,30.0146],[107.4902,30.6299],[107.4023,30.7617],[107.4902,30.8496],[107.9297,30.8496],[108.1934,31.5088],[108.5449,31.6846]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"64\",\"name\":\"宁夏\",\"cp\":[105.9961,37.3096],\"childNum\":5},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[104.3262,37.4414],[105.8203,37.793],[105.9082,38.7158],[106.3477,39.2871],[106.7871,39.375],[106.9629,38.9795],[106.5234,38.3203],[106.7871,38.1885],[107.3145,38.1006],[107.666,37.8809],[107.3145,37.6172],[107.3145,37.0898],[106.6113,37.0898],[106.6113,36.7822],[106.4355,36.5625],[106.5234,36.4746],[106.5234,36.2549],[106.875,36.123],[106.9629,35.8154],[106.6992,35.6836],[106.4355,35.6836],[106.5234,35.332],[106.3477,35.2441],[106.2598,35.4199],[106.084,35.376],[105.9961,35.4199],[106.084,35.4639],[105.9961,35.4639],[105.8203,35.5518],[105.7324,35.7275],[105.3809,35.7715],[105.293,35.9912],[105.4688,36.123],[105.2051,36.6943],[105.293,36.8262],[104.8535,37.2217],[104.5898,37.2217],[104.5898,37.4414],[104.3262,37.4414]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"46\",\"name\":\"海南\",\"cp\":[109.9512,19.2041],\"childNum\":18},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[108.6328,19.3799],[109.0723,19.6436],[109.248,19.9512],[109.5996,20.0391],[110.0391,20.127],[110.3906,20.127],[110.5664,20.2588],[110.6543,20.2588],[111.0938,19.9512],[111.2695,19.9951],[110.6543,19.1602],[110.5664,18.6768],[110.2148,18.5889],[110.0391,18.3691],[109.8633,18.3691],[109.6875,18.1055],[108.9844,18.2813],[108.6328,18.457],[108.6328,19.3799]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"71\",\"name\":\"台湾\",\"cp\":[121.0254,23.5986],\"childNum\":1},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[121.9043,25.0488],[121.9922,25.0049],[121.8164,24.7412],[121.9043,24.5654],[121.6406,24.0381],[121.377,23.1152],[121.0254,22.6758],[120.8496,22.0605],[120.7617,21.9287],[120.6738,22.3242],[120.2344,22.5879],[120.0586,23.0713],[120.1465,23.6865],[121.0254,25.0488],[121.5527,25.3125],[121.9043,25.0488]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"11\",\"name\":\"北京\",\"cp\":[116.4551,40.2539],\"childNum\":19},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[117.4219,40.21],[117.334,40.1221],[117.2461,40.0781],[116.8066,39.9902],[116.8945,39.8145],[116.8945,39.6826],[116.8066,39.5947],[116.543,39.5947],[116.3672,39.4629],[116.1914,39.5947],[115.752,39.5068],[115.4883,39.6387],[115.4004,39.9463],[115.9277,40.2539],[115.752,40.5615],[116.1035,40.6055],[116.1914,40.7813],[116.4551,40.7813],[116.3672,40.9131],[116.6309,41.0449],[116.9824,40.6934],[117.4219,40.6494],[117.2461,40.5176],[117.4219,40.21]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"12\",\"name\":\"天津\",\"cp\":[117.4219,39.4189],\"childNum\":18},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[116.8066,39.5947],[116.8945,39.6826],[117.1582,39.6387],[117.1582,39.8145],[117.2461,40.0781],[117.334,40.1221],[117.4219,40.21],[117.6855,40.0781],[117.6855,39.9902],[117.5098,39.9902],[117.5098,39.7705],[117.6855,39.5947],[117.9492,39.5947],[117.8613,39.4189],[118.0371,39.2432],[118.0371,39.1992],[117.8613,39.1113],[117.5977,38.6279],[117.2461,38.54],[116.7188,38.8037],[116.7188,38.9355],[116.8945,39.1113],[116.8066,39.5947]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"31\",\"name\":\"上海\",\"cp\":[121.4648,31.2891],\"childNum\":19},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[120.9375,31.0254],[121.2012,31.4648],[121.377,31.5088],[121.1133,31.7285],[121.2012,31.8604],[121.9922,31.5967],[121.9043,31.1572],[121.9922,30.8057],[121.2891,30.6738],[120.9375,31.0254]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"81\",\"name\":\"香港\",\"cp\":[114.2578,22.3242],\"childNum\":1},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[114.6094,22.4121],[114.5215,22.1484],[114.3457,22.1484],[113.9063,22.1484],[113.8184,22.1924],[113.9063,22.4121],[114.1699,22.5439],[114.3457,22.5439],[114.4336,22.5439],[114.4336,22.4121],[114.6094,22.4121]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"82\",\"name\":\"澳门\",\"cp\":[113.5547,22.1484],\"childNum\":1},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[113.5986,22.1649],[113.6096,22.1265],[113.5547,22.11],[113.5437,22.2034],[113.5767,22.2034],[113.5986,22.1649]]]}}]});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/18.993907b8.chunk.js","import React, { Component } from 'react';\r\nimport { Breadcrumb, Card, Tabs, Button } from 'antd';\r\nimport QianXi from '../../../common/components/Bmap/QianXi'\r\n\r\nconst TabPane = Tabs.TabPane;\r\n\r\nclass BMap extends Component {\r\n    state = {\r\n        datas: [],\r\n        datas2: [],\r\n    }\r\n    getDatas = () => {\r\n        const to = '武汉';\r\n        const datas = [\r\n            { from: '湖北', count: 354552, to: to },\r\n            { from: '河北', count: 354551, to: to },\r\n            { from: '天津', count: 97323, to: to },\r\n            { from: '山东', count: 28664, to: to },\r\n            { from: '山西', count: 16650, to: to },\r\n            { from: '辽宁', count: 14379, to: to },\r\n            { from: '河南', count: 10980, to: to },\r\n            { from: '内蒙古自治区', count: 9603, to: to },\r\n            { from: '江苏', count: 4536, to: to },\r\n            { from: '上海', count: 3556, to: to },\r\n            { from: '广东', count: 2600, to: to },\r\n        ]\r\n        this.setState({datas})\r\n    }\r\n    getDatas2 = () => {\r\n        const from = '武汉';\r\n        const datas2 = [\r\n            { from: from, count: 354551, to: '湖北' },\r\n            { from: from, count: 85451, to: '河北' },\r\n            { from: from, count: 97323, to: '天津' },\r\n            { from: from, count: 28664, to: '山东' },\r\n            { from: from, count: 16650, to: '山西' },\r\n            { from: from, count: 14379, to: '辽宁' },\r\n            { from: from, count: 10980, to: '河南' },\r\n            { from: from, count: 9603, to: '内蒙古自治区' },\r\n            { from: from, count: 4536, to: '江苏' },\r\n            { from: from, count: 3556, to: '上海' },\r\n            { from: from, count: 2600, to: '广东' },\r\n        ]\r\n        this.setState({datas2})\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Breadcrumb  className=\"breadcrumb\">\r\n                    <Breadcrumb.Item>地图</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>BMap</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <div className=\"common-content\">\r\n                    <Card>\r\n                        <Tabs defaultActiveKey=\"1\">\r\n                            <TabPane tab=\"生源分布\" key=\"1\">\r\n                                <div style={{marginBottom:20}}>\r\n                                    <Button onClick={this.getDatas}>获取数据</Button>\r\n                                </div>\r\n                                <QianXi datas={this.state.datas || []}/>\r\n                            </TabPane>\r\n                            <TabPane tab=\"毕业去向\" key=\"2\">\r\n                                <div style={{marginBottom:20}}>\r\n                                    <Button onClick={this.getDatas2}>获取数据</Button>\r\n                                </div>\r\n                                <QianXi datas={this.state.datas2 || []}/>\r\n                            </TabPane>\r\n                        </Tabs>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BMap;\n\n\n// WEBPACK FOOTER //\n// ./src/pages/Map/BMap/index.js","import React, { Component } from 'react';\r\nimport { DataSet, baiduMapLayer, utilCityCenter,utilCurve, geojson } from 'mapv'\r\nimport chinajson from './china'\r\nimport { isObjectValueEqual } from '../../../utils'\r\n\r\nconst styleJson = [{\r\n    \"featureType\": \"water\",\r\n    \"elementType\": \"all\",\r\n    \"stylers\": {\r\n        \"color\": \"#031628\"\r\n    }\r\n}, {\r\n    \"featureType\": \"land\",\r\n    \"elementType\": \"geometry\",\r\n    \"stylers\": {\r\n        \"color\": \"#000102\"\r\n    }\r\n}, {\r\n    \"featureType\": \"highway\",\r\n    \"elementType\": \"geometry.fill\",\r\n    \"stylers\": {\r\n        \"color\": \"#000000\"\r\n    }\r\n}, {\r\n    \"featureType\": \"highway\",\r\n    \"elementType\": \"geometry.stroke\",\r\n    \"stylers\": {\r\n        \"color\": \"#147a92\"\r\n    }\r\n}, {\r\n    \"featureType\": \"arterial\",\r\n    \"elementType\": \"geometry.fill\",\r\n    \"stylers\": {\r\n        \"color\": \"#000000\"\r\n    }\r\n}, {\r\n    \"featureType\": \"arterial\",\r\n    \"elementType\": \"geometry.stroke\",\r\n    \"stylers\": {\r\n        \"color\": \"#0b3d51\"\r\n    }\r\n}, {\r\n    \"featureType\": \"local\",\r\n    \"elementType\": \"geometry\",\r\n    \"stylers\": {\r\n        \"color\": \"#000000\"\r\n    }\r\n}, {\r\n    \"featureType\": \"railway\",\r\n    \"elementType\": \"geometry.fill\",\r\n    \"stylers\": {\r\n        \"color\": \"#000000\"\r\n    }\r\n}, {\r\n    \"featureType\": \"railway\",\r\n    \"elementType\": \"geometry.stroke\",\r\n    \"stylers\": {\r\n        \"color\": \"#08304b\"\r\n    }\r\n}, {\r\n    \"featureType\": \"subway\",\r\n    \"elementType\": \"geometry\",\r\n    \"stylers\": {\r\n        \"lightness\": -70\r\n    }\r\n}, {\r\n    \"featureType\": \"building\",\r\n    \"elementType\": \"geometry.fill\",\r\n    \"stylers\": {\r\n        \"color\": \"#000000\"\r\n    }\r\n}, {\r\n    \"featureType\": \"all\",\r\n    \"elementType\": \"labels.text.fill\",\r\n    \"stylers\": {\r\n        \"color\": \"#857f7f\"\r\n    }\r\n}, {\r\n    \"featureType\": \"all\",\r\n    \"elementType\": \"labels.text.stroke\",\r\n    \"stylers\": {\r\n        \"color\": \"#000000\"\r\n    }\r\n}, {\r\n    \"featureType\": \"building\",\r\n    \"elementType\": \"geometry\",\r\n    \"stylers\": {\r\n        \"color\": \"#022338\"\r\n    }\r\n}, {\r\n    \"featureType\": \"green\",\r\n    \"elementType\": \"geometry\",\r\n    \"stylers\": {\r\n        \"color\": \"#062032\"\r\n    }\r\n}, {\r\n    \"featureType\": \"boundary\",\r\n    \"elementType\": \"all\",\r\n    \"stylers\": {\r\n        \"color\": \"#465b6c\"\r\n    }\r\n}, {\r\n    \"featureType\": \"manmade\",\r\n    \"elementType\": \"all\",\r\n    \"stylers\": {\r\n        \"color\": \"#022338\"\r\n    }\r\n}, {\r\n    \"featureType\": \"label\",\r\n    \"elementType\": \"all\",\r\n    \"stylers\": {\r\n        \"color\": \"#022338\",\r\n        \"visibility\": \"off\"\r\n    }\r\n}];\r\n\r\nconst BMap = window.BMap;\r\n\r\n/**\r\n * datas 地图数据，数据格式 [{ from: '河北', count: 354551, to: to }, { from: '天津', count: 97323, to: to }]\r\n * styleJson  地图样式设置\r\n * height: 地图高度， 非必传  默认500\r\n * \r\n */\r\nclass QianXi extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const mapId = 'map' + new Date().getTime();\r\n        this.state = ({\r\n            mapId\r\n        });\r\n    }\r\n    makeMap = (data) => {\r\n        // 百度地图API功能\r\n        var map = new BMap.Map(this.state.mapId, {\r\n            enableMapClick: false\r\n        });    // 创建Map实例\r\n        map.centerAndZoom(new BMap.Point(105.403119, 38.028658), 5);  // 初始化地图,设置中心点坐标和地图级别\r\n        \r\n        map.setMapStyle({\r\n            styleJson: this.props.styleJson || styleJson\r\n        });\r\n        \r\n        var geojsonOptions = {\r\n            gradient: {\r\n                0: 'rgba(55, 50, 250, 0.4)',\r\n                1: 'rgba(55, 50, 250, 1)'\r\n            },\r\n            max: 354551,\r\n            draw: 'intensity'\r\n        }\r\n\r\n        var geojsonDataSet = geojson.getDataSet(chinajson);\r\n\r\n        // var to = '北京';\r\n        const datas = data || [];\r\n\r\n        var qianxi = new DataSet(datas);\r\n        var qianxiData = qianxi.get();\r\n        var lineData = [];\r\n        var pointData = [];\r\n        var textData = [];\r\n        var timeData = [];\r\n        var citys = {}\r\n\r\n        for (var i = 0; i < qianxiData.length; i++) {\r\n            var fromCenter = utilCityCenter.getCenterByCityName(qianxiData[i].from);\r\n            var toCenter = utilCityCenter.getCenterByCityName(qianxiData[i].to);\r\n            if (!fromCenter || !toCenter) {\r\n                continue;\r\n            }\r\n            citys[qianxiData[i].from] = qianxiData[i].count;\r\n            citys[qianxiData[i].to] = qianxiData[i].count;\r\n            pointData.push({\r\n                geometry: {\r\n                    type: 'Point',\r\n                    coordinates: [fromCenter.lng, fromCenter.lat]\r\n                }\r\n            });\r\n            pointData.push({\r\n                geometry: {\r\n                    type: 'Point',\r\n                    coordinates: [toCenter.lng, toCenter.lat]\r\n                }\r\n            });\r\n            textData.push({\r\n                geometry: {\r\n                    type: 'Point',\r\n                    coordinates: [fromCenter.lng, fromCenter.lat]\r\n                },\r\n                text: qianxiData[i].from\r\n            });\r\n            textData.push({\r\n                geometry: {\r\n                    type: 'Point',\r\n                    coordinates: [toCenter.lng, toCenter.lat]\r\n                },\r\n                text: qianxiData[i].to\r\n            });\r\n\r\n            var curve = utilCurve.getPoints([fromCenter, toCenter]);\r\n\r\n            for (let j = 0; j < curve.length; j++) {\r\n                timeData.push({\r\n                    geometry: {\r\n                        type: 'Point',\r\n                        coordinates: curve[j]\r\n                    },\r\n                    count: 1,\r\n                    time: j\r\n                });\r\n            }\r\n\r\n            lineData.push({\r\n                geometry: {\r\n                    type: 'LineString',\r\n                    coordinates: curve\r\n                    //coordinates: [[fromCenter.lng, fromCenter.lat], [toCenter.lng, toCenter.lat]]\r\n                },\r\n                count: 30 * Math.random()\r\n            });\r\n\r\n        }\r\n\r\n        var ds = geojsonDataSet.get({\r\n            filter: function (item) {\r\n\r\n                if (!citys[item.name]) {\r\n                    return false;\r\n                }\r\n\r\n                item.count = citys[item.name];\r\n                return true;\r\n            }\r\n        });\r\n        geojsonDataSet = new DataSet(ds);\r\n\r\n        new baiduMapLayer(map, geojsonDataSet, geojsonOptions);\r\n\r\n        var textDataSet = new DataSet(textData);\r\n        \r\n        var textOptions = {\r\n            draw: 'text',\r\n            font: '14px Arial',\r\n            fillStyle: 'white',\r\n            shadowColor: 'yellow',\r\n            shadowBlue: 10,\r\n            zIndex: 11,\r\n            shadowBlur: 10\r\n        }\r\n\r\n        new baiduMapLayer(map, textDataSet, textOptions);\r\n\r\n        var lineDataSet = new DataSet(lineData);\r\n\r\n        var lineOptions = {\r\n            strokeStyle: 'rgba(255, 250, 50, 0.8)',\r\n            shadowColor: 'rgba(255, 250, 50, 1)',\r\n            shadowBlur: 20,\r\n            lineWidth: 2,\r\n            zIndex: 100,\r\n            draw: 'simple'\r\n        }\r\n\r\n        new baiduMapLayer(map, lineDataSet, lineOptions);\r\n\r\n        var pointOptions = {\r\n            fillStyle: 'rgba(254,175,3,0.7)',\r\n            shadowColor: 'rgba(55, 50, 250, 0.5)',\r\n            shadowBlur: 10,\r\n            size: 5,\r\n            zIndex: 10,\r\n            draw: 'simple'\r\n        }\r\n\r\n        \r\n        var pointDataSet = new DataSet(pointData);\r\n\r\n        new baiduMapLayer(map, pointDataSet, pointOptions);\r\n\r\n\r\n        var timeDataSet = new DataSet(timeData);\r\n\r\n        var timeOptions = {\r\n            fillStyle: 'rgba(255, 250, 250, 0.5)',\r\n            zIndex: 200,\r\n            size: 2.5,\r\n            animation: {\r\n                type: 'time',\r\n                stepsRange: {\r\n                    start: 0,\r\n                    end: 50\r\n                },\r\n                trails: 10,\r\n                duration: 2,\r\n            },\r\n            draw: 'simple'\r\n        }\r\n\r\n        new baiduMapLayer(map, timeDataSet, timeOptions);\r\n    }\r\n    componentDidMount() {\r\n        this.makeMap(this.props.datas);\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.datas && !isObjectValueEqual(nextProps.datas,this.props.datas)) {\r\n            setTimeout(() => {\r\n                // 根据停留点，计算移动点，最终生成所有点的百度坐标， 开始路书配置...\r\n                this.makeMap(nextProps.datas)\r\n            },50)\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <div id={this.state.mapId} style={this.props.style || {height: this.props.height || 500 }}></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default QianXi;\n\n\n// WEBPACK FOOTER //\n// ./src/common/components/Bmap/QianXi.js","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.mapv = global.mapv || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"2.0.20\";\n\n/**\n * @author kyle / http://nikai.us/\n */\n\nvar clear = function (context) {\n    context && context.clearRect && context.clearRect(0, 0, context.canvas.width, context.canvas.height);\n    //context.canvas.width = context.canvas.width;\n    //context.canvas.height = context.canvas.height;\n};\n\n/**\n * @author kyle / http://nikai.us/\n */\n\nvar resolutionScale$1 = function (context) {\n    var devicePixelRatio = window.devicePixelRatio || 1;\n    context.canvas.width = context.canvas.width * devicePixelRatio;\n    context.canvas.height = context.canvas.height * devicePixelRatio;\n    context.canvas.style.width = context.canvas.width / devicePixelRatio + 'px';\n    context.canvas.style.height = context.canvas.height / devicePixelRatio + 'px';\n    context.scale(devicePixelRatio, devicePixelRatio);\n};\n\nfunction Event() {\n  this._subscribers = {}; // event subscribers\n}\n\n/**\n * Subscribe to an event, add an event listener\n * @param {String} event        Event name. Available events: 'put', 'update',\n *                              'remove'\n * @param {function} callback   Callback method. Called with three parameters:\n *                                  {String} event\n *                                  {Object | null} params\n *                                  {String | Number} senderId\n */\nEvent.prototype.on = function (event, callback) {\n  var subscribers = this._subscribers[event];\n  if (!subscribers) {\n    subscribers = [];\n    this._subscribers[event] = subscribers;\n  }\n\n  subscribers.push({\n    callback: callback\n  });\n};\n\n/**\n * Unsubscribe from an event, remove an event listener\n * @param {String} event\n * @param {function} callback\n */\nEvent.prototype.off = function (event, callback) {\n  var subscribers = this._subscribers[event];\n  if (subscribers) {\n    //this._subscribers[event] = subscribers.filter(listener => listener.callback != callback);\n    for (var i = 0; i < subscribers.length; i++) {\n      if (subscribers[i].callback == callback) {\n        subscribers.splice(i, 1);\n        i--;\n      }\n    }\n  }\n};\n\n/**\n * Trigger an event\n * @param {String} event\n * @param {Object | null} params\n * @param {String} [senderId]       Optional id of the sender.\n * @private\n */\nEvent.prototype._trigger = function (event, params, senderId) {\n  if (event == '*') {\n    throw new Error('Cannot trigger event *');\n  }\n\n  var subscribers = [];\n  if (event in this._subscribers) {\n    subscribers = subscribers.concat(this._subscribers[event]);\n  }\n  if ('*' in this._subscribers) {\n    subscribers = subscribers.concat(this._subscribers['*']);\n  }\n\n  for (var i = 0, len = subscribers.length; i < len; i++) {\n    var subscriber = subscribers[i];\n    if (subscriber.callback) {\n      subscriber.callback(event, params, senderId || null);\n    }\n  }\n};\n\n/**\n * get the center by the city name\n * @author kyle / http://nikai.us/\n */\n\nvar citycenter = { municipalities: [{ n: \"北京\", g: \"116.395645,39.929986|12\" }, { n: \"上海\", g: \"121.487899,31.249162|12\" }, { n: \"天津\", g: \"117.210813,39.14393|12\" }, { n: \"重庆\", g: \"106.530635,29.544606|12\" }], provinces: [{ n: \"安徽\", g: \"117.216005,31.859252|8\", cities: [{ n: \"合肥\", g: \"117.282699,31.866942|12\" }, { n: \"安庆\", g: \"117.058739,30.537898|13\" }, { n: \"蚌埠\", g: \"117.35708,32.929499|13\" }, { n: \"亳州\", g: \"115.787928,33.871211|13\" }, { n: \"巢湖\", g: \"117.88049,31.608733|13\" }, { n: \"池州\", g: \"117.494477,30.660019|14\" }, { n: \"滁州\", g: \"118.32457,32.317351|13\" }, { n: \"阜阳\", g: \"115.820932,32.901211|13\" }, { n: \"淮北\", g: \"116.791447,33.960023|13\" }, { n: \"淮南\", g: \"117.018639,32.642812|13\" }, { n: \"黄山\", g: \"118.29357,29.734435|13\" }, { n: \"六安\", g: \"116.505253,31.755558|13\" }, { n: \"马鞍山\", g: \"118.515882,31.688528|13\" }, { n: \"宿州\", g: \"116.988692,33.636772|13\" }, { n: \"铜陵\", g: \"117.819429,30.94093|14\" }, { n: \"芜湖\", g: \"118.384108,31.36602|12\" }, { n: \"宣城\", g: \"118.752096,30.951642|13\" }] }, { n: \"福建\", g: \"117.984943,26.050118|8\", cities: [{ n: \"福州\", g: \"119.330221,26.047125|12\" }, { n: \"龙岩\", g: \"117.017997,25.078685|13\" }, { n: \"南平\", g: \"118.181883,26.643626|13\" }, { n: \"宁德\", g: \"119.542082,26.656527|14\" }, { n: \"莆田\", g: \"119.077731,25.44845|13\" }, { n: \"泉州\", g: \"118.600362,24.901652|12\" }, { n: \"三明\", g: \"117.642194,26.270835|14\" }, { n: \"厦门\", g: \"118.103886,24.489231|12\" }, { n: \"漳州\", g: \"117.676205,24.517065|12\" }] }, { n: \"甘肃\", g: \"102.457625,38.103267|6\", cities: [{ n: \"兰州\", g: \"103.823305,36.064226|12\" }, { n: \"白银\", g: \"104.171241,36.546682|13\" }, { n: \"定西\", g: \"104.626638,35.586056|13\" }, { n: \"甘南州\", g: \"102.917442,34.992211|14\" }, { n: \"嘉峪关\", g: \"98.281635,39.802397|13\" }, { n: \"金昌\", g: \"102.208126,38.516072|13\" }, { n: \"酒泉\", g: \"98.508415,39.741474|13\" }, { n: \"临夏州\", g: \"103.215249,35.598514|13\" }, { n: \"陇南\", g: \"104.934573,33.39448|14\" }, { n: \"平凉\", g: \"106.688911,35.55011|13\" }, { n: \"庆阳\", g: \"107.644227,35.726801|13\" }, { n: \"天水\", g: \"105.736932,34.584319|13\" }, { n: \"武威\", g: \"102.640147,37.933172|13\" }, { n: \"张掖\", g: \"100.459892,38.93932|13\" }] }, { n: \"广东\", g: \"113.394818,23.408004|8\", cities: [{ n: \"广州\", g: \"113.30765,23.120049|12\" }, { n: \"潮州\", g: \"116.630076,23.661812|13\" }, { n: \"东莞\", g: \"113.763434,23.043024|12\" }, { n: \"佛山\", g: \"113.134026,23.035095|13\" }, { n: \"河源\", g: \"114.713721,23.757251|12\" }, { n: \"惠州\", g: \"114.410658,23.11354|12\" }, { n: \"江门\", g: \"113.078125,22.575117|13\" }, { n: \"揭阳\", g: \"116.379501,23.547999|13\" }, { n: \"茂名\", g: \"110.931245,21.668226|13\" }, { n: \"梅州\", g: \"116.126403,24.304571|13\" }, { n: \"清远\", g: \"113.040773,23.698469|13\" }, { n: \"汕头\", g: \"116.72865,23.383908|13\" }, { n: \"汕尾\", g: \"115.372924,22.778731|14\" }, { n: \"韶关\", g: \"113.594461,24.80296|13\" }, { n: \"深圳\", g: \"114.025974,22.546054|12\" }, { n: \"阳江\", g: \"111.97701,21.871517|14\" }, { n: \"云浮\", g: \"112.050946,22.937976|13\" }, { n: \"湛江\", g: \"110.365067,21.257463|13\" }, { n: \"肇庆\", g: \"112.479653,23.078663|13\" }, { n: \"中山\", g: \"113.42206,22.545178|12\" }, { n: \"珠海\", g: \"113.562447,22.256915|13\" }] }, { n: \"广西\", g: \"108.924274,23.552255|7\", cities: [{ n: \"南宁\", g: \"108.297234,22.806493|12\" }, { n: \"百色\", g: \"106.631821,23.901512|13\" }, { n: \"北海\", g: \"109.122628,21.472718|13\" }, { n: \"崇左\", g: \"107.357322,22.415455|14\" }, { n: \"防城港\", g: \"108.351791,21.617398|15\" }, { n: \"桂林\", g: \"110.26092,25.262901|12\" }, { n: \"贵港\", g: \"109.613708,23.103373|13\" }, { n: \"河池\", g: \"108.069948,24.699521|14\" }, { n: \"贺州\", g: \"111.552594,24.411054|14\" }, { n: \"来宾\", g: \"109.231817,23.741166|14\" }, { n: \"柳州\", g: \"109.422402,24.329053|12\" }, { n: \"钦州\", g: \"108.638798,21.97335|13\" }, { n: \"梧州\", g: \"111.305472,23.485395|13\" }, { n: \"玉林\", g: \"110.151676,22.643974|14\" }] }, { n: \"贵州\", g: \"106.734996,26.902826|8\", cities: [{ n: \"贵阳\", g: \"106.709177,26.629907|12\" }, { n: \"安顺\", g: \"105.92827,26.228595|13\" }, { n: \"毕节地区\", g: \"105.300492,27.302612|14\" }, { n: \"六盘水\", g: \"104.852087,26.591866|13\" }, { n: \"铜仁地区\", g: \"109.196161,27.726271|14\" }, { n: \"遵义\", g: \"106.93126,27.699961|13\" }, { n: \"黔西南州\", g: \"104.900558,25.095148|11\" }, { n: \"黔东南州\", g: \"107.985353,26.583992|11\" }, { n: \"黔南州\", g: \"107.523205,26.264536|11\" }] }, { n: \"海南\", g: \"109.733755,19.180501|9\", cities: [{ n: \"海口\", g: \"110.330802,20.022071|13\" }, { n: \"白沙\", g: \"109.358586,19.216056|12\" }, { n: \"保亭\", g: \"109.656113,18.597592|12\" }, { n: \"昌江\", g: \"109.0113,19.222483|12\" }, { n: \"儋州\", g: \"109.413973,19.571153|13\" }, { n: \"澄迈\", g: \"109.996736,19.693135|13\" }, { n: \"东方\", g: \"108.85101,18.998161|13\" }, { n: \"定安\", g: \"110.32009,19.490991|13\" }, { n: \"琼海\", g: \"110.414359,19.21483|13\" }, { n: \"琼中\", g: \"109.861849,19.039771|12\" }, { n: \"乐东\", g: \"109.062698,18.658614|12\" }, { n: \"临高\", g: \"109.724101,19.805922|13\" }, { n: \"陵水\", g: \"109.948661,18.575985|12\" }, { n: \"三亚\", g: \"109.522771,18.257776|12\" }, { n: \"屯昌\", g: \"110.063364,19.347749|13\" }, { n: \"万宁\", g: \"110.292505,18.839886|13\" }, { n: \"文昌\", g: \"110.780909,19.750947|13\" }, { n: \"五指山\", g: \"109.51775,18.831306|13\" }] }, { n: \"河北\", g: \"115.661434,38.61384|7\", cities: [{ n: \"石家庄\", g: \"114.522082,38.048958|12\" }, { n: \"保定\", g: \"115.49481,38.886565|13\" }, { n: \"沧州\", g: \"116.863806,38.297615|13\" }, { n: \"承德\", g: \"117.933822,40.992521|14\" }, { n: \"邯郸\", g: \"114.482694,36.609308|13\" }, { n: \"衡水\", g: \"115.686229,37.746929|13\" }, { n: \"廊坊\", g: \"116.703602,39.518611|13\" }, { n: \"秦皇岛\", g: \"119.604368,39.945462|12\" }, { n: \"唐山\", g: \"118.183451,39.650531|13\" }, { n: \"邢台\", g: \"114.520487,37.069531|13\" }, { n: \"张家口\", g: \"114.893782,40.811188|13\" }] }, { n: \"河南\", g: \"113.486804,34.157184|7\", cities: [{ n: \"郑州\", g: \"113.649644,34.75661|12\" }, { n: \"安阳\", g: \"114.351807,36.110267|12\" }, { n: \"鹤壁\", g: \"114.29777,35.755426|13\" }, { n: \"焦作\", g: \"113.211836,35.234608|13\" }, { n: \"开封\", g: \"114.351642,34.801854|13\" }, { n: \"洛阳\", g: \"112.447525,34.657368|12\" }, { n: \"漯河\", g: \"114.046061,33.576279|13\" }, { n: \"南阳\", g: \"112.542842,33.01142|13\" }, { n: \"平顶山\", g: \"113.300849,33.745301|13\" }, { n: \"濮阳\", g: \"115.026627,35.753298|12\" }, { n: \"三门峡\", g: \"111.181262,34.78332|13\" }, { n: \"商丘\", g: \"115.641886,34.438589|13\" }, { n: \"新乡\", g: \"113.91269,35.307258|13\" }, { n: \"信阳\", g: \"114.085491,32.128582|13\" }, { n: \"许昌\", g: \"113.835312,34.02674|13\" }, { n: \"周口\", g: \"114.654102,33.623741|13\" }, { n: \"驻马店\", g: \"114.049154,32.983158|13\" }] }, { n: \"黑龙江\", g: \"128.047414,47.356592|6\", cities: [{ n: \"哈尔滨\", g: \"126.657717,45.773225|12\" }, { n: \"大庆\", g: \"125.02184,46.596709|12\" }, { n: \"大兴安岭地区\", g: \"124.196104,51.991789|10\" }, { n: \"鹤岗\", g: \"130.292472,47.338666|13\" }, { n: \"黑河\", g: \"127.50083,50.25069|14\" }, { n: \"鸡西\", g: \"130.941767,45.32154|13\" }, { n: \"佳木斯\", g: \"130.284735,46.81378|12\" }, { n: \"牡丹江\", g: \"129.608035,44.588521|13\" }, { n: \"七台河\", g: \"131.019048,45.775005|14\" }, { n: \"齐齐哈尔\", g: \"123.987289,47.3477|13\" }, { n: \"双鸭山\", g: \"131.171402,46.655102|13\" }, { n: \"绥化\", g: \"126.989095,46.646064|13\" }, { n: \"伊春\", g: \"128.910766,47.734685|14\" }] }, { n: \"湖北\", g: \"112.410562,31.209316|8\", cities: [{ n: \"武汉\", g: \"114.3162,30.581084|12\" }, { n: \"鄂州\", g: \"114.895594,30.384439|14\" }, { n: \"恩施\", g: \"109.517433,30.308978|14\" }, { n: \"黄冈\", g: \"114.906618,30.446109|14\" }, { n: \"黄石\", g: \"115.050683,30.216127|13\" }, { n: \"荆门\", g: \"112.21733,31.042611|13\" }, { n: \"荆州\", g: \"112.241866,30.332591|12\" }, { n: \"潜江\", g: \"112.768768,30.343116|13\" }, { n: \"神农架林区\", g: \"110.487231,31.595768|13\" }, { n: \"十堰\", g: \"110.801229,32.636994|13\" }, { n: \"随州\", g: \"113.379358,31.717858|13\" }, { n: \"天门\", g: \"113.12623,30.649047|13\" }, { n: \"仙桃\", g: \"113.387448,30.293966|13\" }, { n: \"咸宁\", g: \"114.300061,29.880657|13\" }, { n: \"襄阳\", g: \"112.176326,32.094934|12\" }, { n: \"孝感\", g: \"113.935734,30.927955|13\" }, { n: \"宜昌\", g: \"111.310981,30.732758|13\" }] }, { n: \"湖南\", g: \"111.720664,27.695864|7\", cities: [{ n: \"长沙\", g: \"112.979353,28.213478|12\" }, { n: \"常德\", g: \"111.653718,29.012149|12\" }, { n: \"郴州\", g: \"113.037704,25.782264|13\" }, { n: \"衡阳\", g: \"112.583819,26.898164|13\" }, { n: \"怀化\", g: \"109.986959,27.557483|13\" }, { n: \"娄底\", g: \"111.996396,27.741073|13\" }, { n: \"邵阳\", g: \"111.461525,27.236811|13\" }, { n: \"湘潭\", g: \"112.935556,27.835095|13\" }, { n: \"湘西州\", g: \"109.745746,28.317951|14\" }, { n: \"益阳\", g: \"112.366547,28.588088|13\" }, { n: \"永州\", g: \"111.614648,26.435972|13\" }, { n: \"岳阳\", g: \"113.146196,29.378007|13\" }, { n: \"张家界\", g: \"110.48162,29.124889|13\" }, { n: \"株洲\", g: \"113.131695,27.827433|13\" }] }, { n: \"江苏\", g: \"119.368489,33.013797|8\", cities: [{ n: \"南京\", g: \"118.778074,32.057236|12\" }, { n: \"常州\", g: \"119.981861,31.771397|12\" }, { n: \"淮安\", g: \"119.030186,33.606513|12\" }, { n: \"连云港\", g: \"119.173872,34.601549|12\" }, { n: \"南通\", g: \"120.873801,32.014665|12\" }, { n: \"苏州\", g: \"120.619907,31.317987|12\" }, { n: \"宿迁\", g: \"118.296893,33.95205|13\" }, { n: \"泰州\", g: \"119.919606,32.476053|13\" }, { n: \"无锡\", g: \"120.305456,31.570037|12\" }, { n: \"徐州\", g: \"117.188107,34.271553|12\" }, { n: \"盐城\", g: \"120.148872,33.379862|12\" }, { n: \"扬州\", g: \"119.427778,32.408505|13\" }, { n: \"镇江\", g: \"119.455835,32.204409|13\" }] }, { n: \"江西\", g: \"115.676082,27.757258|7\", cities: [{ n: \"南昌\", g: \"115.893528,28.689578|12\" }, { n: \"抚州\", g: \"116.360919,27.954545|13\" }, { n: \"赣州\", g: \"114.935909,25.845296|13\" }, { n: \"吉安\", g: \"114.992039,27.113848|13\" }, { n: \"景德镇\", g: \"117.186523,29.303563|12\" }, { n: \"九江\", g: \"115.999848,29.71964|13\" }, { n: \"萍乡\", g: \"113.859917,27.639544|13\" }, { n: \"上饶\", g: \"117.955464,28.457623|13\" }, { n: \"新余\", g: \"114.947117,27.822322|13\" }, { n: \"宜春\", g: \"114.400039,27.81113|13\" }, { n: \"鹰潭\", g: \"117.03545,28.24131|13\" }] }, { n: \"吉林\", g: \"126.262876,43.678846|7\", cities: [{ n: \"长春\", g: \"125.313642,43.898338|12\" }, { n: \"白城\", g: \"122.840777,45.621086|13\" }, { n: \"白山\", g: \"126.435798,41.945859|13\" }, { n: \"吉林\", g: \"126.564544,43.871988|12\" }, { n: \"辽源\", g: \"125.133686,42.923303|13\" }, { n: \"四平\", g: \"124.391382,43.175525|12\" }, { n: \"松原\", g: \"124.832995,45.136049|13\" }, { n: \"通化\", g: \"125.94265,41.736397|13\" }, { n: \"延边\", g: \"129.485902,42.896414|13\" }] }, { n: \"辽宁\", g: \"122.753592,41.6216|8\", cities: [{ n: \"沈阳\", g: \"123.432791,41.808645|12\" }, { n: \"鞍山\", g: \"123.007763,41.118744|13\" }, { n: \"本溪\", g: \"123.778062,41.325838|12\" }, { n: \"朝阳\", g: \"120.446163,41.571828|13\" }, { n: \"大连\", g: \"121.593478,38.94871|12\" }, { n: \"丹东\", g: \"124.338543,40.129023|12\" }, { n: \"抚顺\", g: \"123.92982,41.877304|12\" }, { n: \"阜新\", g: \"121.660822,42.01925|14\" }, { n: \"葫芦岛\", g: \"120.860758,40.74303|13\" }, { n: \"锦州\", g: \"121.147749,41.130879|13\" }, { n: \"辽阳\", g: \"123.172451,41.273339|14\" }, { n: \"盘锦\", g: \"122.073228,41.141248|13\" }, { n: \"铁岭\", g: \"123.85485,42.299757|13\" }, { n: \"营口\", g: \"122.233391,40.668651|13\" }] }, { n: \"内蒙古\", g: \"114.415868,43.468238|5\", cities: [{ n: \"呼和浩特\", g: \"111.660351,40.828319|12\" }, { n: \"阿拉善盟\", g: \"105.695683,38.843075|14\" }, { n: \"包头\", g: \"109.846239,40.647119|12\" }, { n: \"巴彦淖尔\", g: \"107.423807,40.76918|12\" }, { n: \"赤峰\", g: \"118.930761,42.297112|12\" }, { n: \"鄂尔多斯\", g: \"109.993706,39.81649|12\" }, { n: \"呼伦贝尔\", g: \"119.760822,49.201636|12\" }, { n: \"通辽\", g: \"122.260363,43.633756|12\" }, { n: \"乌海\", g: \"106.831999,39.683177|13\" }, { n: \"乌兰察布\", g: \"113.112846,41.022363|12\" }, { n: \"锡林郭勒盟\", g: \"116.02734,43.939705|11\" }, { n: \"兴安盟\", g: \"122.048167,46.083757|11\" }] }, { n: \"宁夏\", g: \"106.155481,37.321323|8\", cities: [{ n: \"银川\", g: \"106.206479,38.502621|12\" }, { n: \"固原\", g: \"106.285268,36.021523|13\" }, { n: \"石嘴山\", g: \"106.379337,39.020223|13\" }, { n: \"吴忠\", g: \"106.208254,37.993561|14\" }, { n: \"中卫\", g: \"105.196754,37.521124|14\" }] }, { n: \"青海\", g: \"96.202544,35.499761|7\", cities: [{ n: \"西宁\", g: \"101.767921,36.640739|12\" }, { n: \"果洛州\", g: \"100.223723,34.480485|11\" }, { n: \"海东地区\", g: \"102.085207,36.51761|11\" }, { n: \"海北州\", g: \"100.879802,36.960654|11\" }, { n: \"海南州\", g: \"100.624066,36.284364|11\" }, { n: \"海西州\", g: \"97.342625,37.373799|11\" }, { n: \"黄南州\", g: \"102.0076,35.522852|11\" }, { n: \"玉树州\", g: \"97.013316,33.00624|14\" }] }, { n: \"山东\", g: \"118.527663,36.09929|8\", cities: [{ n: \"济南\", g: \"117.024967,36.682785|12\" }, { n: \"滨州\", g: \"117.968292,37.405314|12\" }, { n: \"东营\", g: \"118.583926,37.487121|12\" }, { n: \"德州\", g: \"116.328161,37.460826|12\" }, { n: \"菏泽\", g: \"115.46336,35.26244|13\" }, { n: \"济宁\", g: \"116.600798,35.402122|13\" }, { n: \"莱芜\", g: \"117.684667,36.233654|13\" }, { n: \"聊城\", g: \"115.986869,36.455829|12\" }, { n: \"临沂\", g: \"118.340768,35.072409|12\" }, { n: \"青岛\", g: \"120.384428,36.105215|12\" }, { n: \"日照\", g: \"119.50718,35.420225|12\" }, { n: \"泰安\", g: \"117.089415,36.188078|13\" }, { n: \"威海\", g: \"122.093958,37.528787|13\" }, { n: \"潍坊\", g: \"119.142634,36.716115|12\" }, { n: \"烟台\", g: \"121.309555,37.536562|12\" }, { n: \"枣庄\", g: \"117.279305,34.807883|13\" }, { n: \"淄博\", g: \"118.059134,36.804685|12\" }] }, { n: \"山西\", g: \"112.515496,37.866566|7\", cities: [{ n: \"太原\", g: \"112.550864,37.890277|12\" }, { n: \"长治\", g: \"113.120292,36.201664|12\" }, { n: \"大同\", g: \"113.290509,40.113744|12\" }, { n: \"晋城\", g: \"112.867333,35.499834|13\" }, { n: \"晋中\", g: \"112.738514,37.693362|13\" }, { n: \"临汾\", g: \"111.538788,36.099745|13\" }, { n: \"吕梁\", g: \"111.143157,37.527316|14\" }, { n: \"朔州\", g: \"112.479928,39.337672|13\" }, { n: \"忻州\", g: \"112.727939,38.461031|12\" }, { n: \"阳泉\", g: \"113.569238,37.869529|13\" }, { n: \"运城\", g: \"111.006854,35.038859|13\" }] }, { n: \"陕西\", g: \"109.503789,35.860026|7\", cities: [{ n: \"西安\", g: \"108.953098,34.2778|12\" }, { n: \"安康\", g: \"109.038045,32.70437|13\" }, { n: \"宝鸡\", g: \"107.170645,34.364081|12\" }, { n: \"汉中\", g: \"107.045478,33.081569|13\" }, { n: \"商洛\", g: \"109.934208,33.873907|13\" }, { n: \"铜川\", g: \"108.968067,34.908368|13\" }, { n: \"渭南\", g: \"109.483933,34.502358|13\" }, { n: \"咸阳\", g: \"108.707509,34.345373|13\" }, { n: \"延安\", g: \"109.50051,36.60332|13\" }, { n: \"榆林\", g: \"109.745926,38.279439|12\" }] }, { n: \"四川\", g: \"102.89916,30.367481|7\", cities: [{ n: \"成都\", g: \"104.067923,30.679943|12\" }, { n: \"阿坝州\", g: \"102.228565,31.905763|15\" }, { n: \"巴中\", g: \"106.757916,31.869189|14\" }, { n: \"达州\", g: \"107.494973,31.214199|14\" }, { n: \"德阳\", g: \"104.402398,31.13114|13\" }, { n: \"甘孜州\", g: \"101.969232,30.055144|15\" }, { n: \"广安\", g: \"106.63572,30.463984|13\" }, { n: \"广元\", g: \"105.819687,32.44104|13\" }, { n: \"乐山\", g: \"103.760824,29.600958|13\" }, { n: \"凉山州\", g: \"102.259591,27.892393|14\" }, { n: \"泸州\", g: \"105.44397,28.89593|14\" }, { n: \"南充\", g: \"106.105554,30.800965|13\" }, { n: \"眉山\", g: \"103.84143,30.061115|13\" }, { n: \"绵阳\", g: \"104.705519,31.504701|12\" }, { n: \"内江\", g: \"105.073056,29.599462|13\" }, { n: \"攀枝花\", g: \"101.722423,26.587571|14\" }, { n: \"遂宁\", g: \"105.564888,30.557491|12\" }, { n: \"雅安\", g: \"103.009356,29.999716|13\" }, { n: \"宜宾\", g: \"104.633019,28.769675|13\" }, { n: \"资阳\", g: \"104.63593,30.132191|13\" }, { n: \"自贡\", g: \"104.776071,29.359157|13\" }] }, { n: \"西藏\", g: \"89.137982,31.367315|6\", cities: [{ n: \"拉萨\", g: \"91.111891,29.662557|13\" }, { n: \"阿里地区\", g: \"81.107669,30.404557|11\" }, { n: \"昌都地区\", g: \"97.185582,31.140576|15\" }, { n: \"林芝地区\", g: \"94.349985,29.666941|11\" }, { n: \"那曲地区\", g: \"92.067018,31.48068|14\" }, { n: \"日喀则地区\", g: \"88.891486,29.269023|14\" }, { n: \"山南地区\", g: \"91.750644,29.229027|11\" }] }, { n: \"新疆\", g: \"85.614899,42.127001|6\", cities: [{ n: \"乌鲁木齐\", g: \"87.564988,43.84038|12\" }, { n: \"阿拉尔\", g: \"81.291737,40.61568|13\" }, { n: \"阿克苏地区\", g: \"80.269846,41.171731|12\" }, { n: \"阿勒泰地区\", g: \"88.137915,47.839744|13\" }, { n: \"巴音郭楞\", g: \"86.121688,41.771362|12\" }, { n: \"博尔塔拉州\", g: \"82.052436,44.913651|11\" }, { n: \"昌吉州\", g: \"87.296038,44.007058|13\" }, { n: \"哈密地区\", g: \"93.528355,42.858596|13\" }, { n: \"和田地区\", g: \"79.930239,37.116774|13\" }, { n: \"喀什地区\", g: \"75.992973,39.470627|12\" }, { n: \"克拉玛依\", g: \"84.88118,45.594331|13\" }, { n: \"克孜勒苏州\", g: \"76.137564,39.750346|11\" }, { n: \"石河子\", g: \"86.041865,44.308259|13\" }, { n: \"塔城地区\", g: \"82.974881,46.758684|12\" }, { n: \"图木舒克\", g: \"79.198155,39.889223|13\" }, { n: \"吐鲁番地区\", g: \"89.181595,42.96047|13\" }, { n: \"五家渠\", g: \"87.565449,44.368899|13\" }, { n: \"伊犁州\", g: \"81.297854,43.922248|11\" }] }, { n: \"云南\", g: \"101.592952,24.864213|7\", cities: [{ n: \"昆明\", g: \"102.714601,25.049153|12\" }, { n: \"保山\", g: \"99.177996,25.120489|13\" }, { n: \"楚雄州\", g: \"101.529382,25.066356|13\" }, { n: \"大理州\", g: \"100.223675,25.5969|14\" }, { n: \"德宏州\", g: \"98.589434,24.44124|14\" }, { n: \"迪庆州\", g: \"99.713682,27.831029|14\" }, { n: \"红河州\", g: \"103.384065,23.367718|11\" }, { n: \"丽江\", g: \"100.229628,26.875351|13\" }, { n: \"临沧\", g: \"100.092613,23.887806|14\" }, { n: \"怒江州\", g: \"98.859932,25.860677|14\" }, { n: \"普洱\", g: \"100.980058,22.788778|14\" }, { n: \"曲靖\", g: \"103.782539,25.520758|12\" }, { n: \"昭通\", g: \"103.725021,27.340633|13\" }, { n: \"文山\", g: \"104.089112,23.401781|14\" }, { n: \"西双版纳\", g: \"100.803038,22.009433|13\" }, { n: \"玉溪\", g: \"102.545068,24.370447|13\" }] }, { n: \"浙江\", g: \"119.957202,29.159494|8\", cities: [{ n: \"杭州\", g: \"120.219375,30.259244|12\" }, { n: \"湖州\", g: \"120.137243,30.877925|12\" }, { n: \"嘉兴\", g: \"120.760428,30.773992|13\" }, { n: \"金华\", g: \"119.652576,29.102899|12\" }, { n: \"丽水\", g: \"119.929576,28.4563|13\" }, { n: \"宁波\", g: \"121.579006,29.885259|12\" }, { n: \"衢州\", g: \"118.875842,28.95691|12\" }, { n: \"绍兴\", g: \"120.592467,30.002365|13\" }, { n: \"台州\", g: \"121.440613,28.668283|13\" }, { n: \"温州\", g: \"120.690635,28.002838|12\" }, { n: \"舟山\", g: \"122.169872,30.03601|13\" }] }], other: [{ n: \"香港\", g: \"114.186124,22.293586|11\" }, { n: \"澳门\", g: \"113.557519,22.204118|13\" }, { n: \"台湾\", g: \"120.961454,23.80406|8\" }] };\n\nfunction getCenter(g) {\n    var item = g.split(\"|\");\n    item[0] = item[0].split(\",\");\n    return {\n        lng: parseFloat(item[0][0]),\n        lat: parseFloat(item[0][1])\n    };\n}\n\nvar cityCenter = {\n    getProvinceNameByCityName: function getProvinceNameByCityName(name) {\n        var provinces = citycenter.provinces;\n        for (var i = 0; i < provinces.length; i++) {\n            var provinceName = provinces[i].n;\n            var cities = provinces[i].cities;\n            for (var j = 0; j < cities.length; j++) {\n                if (cities[j].n == name) {\n                    return provinceName;\n                }\n            }\n        }\n        return null;\n    },\n    getCenterByCityName: function getCenterByCityName(name) {\n        name = name.replace('市', '');\n        for (var i = 0; i < citycenter.municipalities.length; i++) {\n            if (citycenter.municipalities[i].n == name) {\n                return getCenter(citycenter.municipalities[i].g);\n            }\n        }\n\n        for (var i = 0; i < citycenter.other.length; i++) {\n            if (citycenter.other[i].n == name) {\n                return getCenter(citycenter.other[i].g);\n            }\n        }\n\n        var provinces = citycenter.provinces;\n        for (var i = 0; i < provinces.length; i++) {\n            if (provinces[i].n == name) {\n                return getCenter(provinces[i].g);\n            }\n            var cities = provinces[i].cities;\n            for (var j = 0; j < cities.length; j++) {\n                if (cities[j].n == name) {\n                    return getCenter(cities[j].g);\n                }\n            }\n        }\n        return null;\n    }\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\nvar get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @author kyle / http://nikai.us/\n */\n\n/**\n * DataSet\n *\n * A data set can:\n * - add/remove/update data\n * - gives triggers upon changes in the data\n * - can  import/export data in various data formats\n * @param {Array} [data]    Optional array with initial data\n * the field geometry is like geojson, it can be:\n * {\n *     \"type\": \"Point\",\n *     \"coordinates\": [125.6, 10.1]\n * }\n * {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [\n *         [102.0, 0.0], [103.0, 1.0], [104.0, 0.0], [105.0, 1.0]\n *     ]\n * }\n * {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [\n *         [ [100.0, 0.0], [101.0, 0.0], [101.0, 1.0],\n *           [100.0, 1.0], [100.0, 0.0] ]\n *     ]\n * }\n * @param {Object} [options]   Available options:\n * \n */\nfunction DataSet(data, options) {\n    Event.bind(this)();\n\n    this._options = options || {};\n    this._data = []; // map with data indexed by id\n\n    // add initial data when provided\n    if (data) {\n        this.add(data);\n    }\n}\n\nDataSet.prototype = Event.prototype;\n\n/**\n * Add data.\n */\nDataSet.prototype.add = function (data, senderId) {\n    if (Array.isArray(data)) {\n        // Array\n        for (var i = 0, len = data.length; i < len; i++) {\n            if (data[i].time && data[i].time.length == 14 && data[i].time.substr(0, 2) == '20') {\n                var time = data[i].time;\n                data[i].time = new Date(time.substr(0, 4) + '-' + time.substr(4, 2) + '-' + time.substr(6, 2) + ' ' + time.substr(8, 2) + ':' + time.substr(10, 2) + ':' + time.substr(12, 2)).getTime();\n            }\n            this._data.push(data[i]);\n        }\n    } else if (data instanceof Object) {\n        // Single item\n        this._data.push(data);\n    } else {\n        throw new Error('Unknown dataType');\n    }\n\n    this._dataCache = JSON.parse(JSON.stringify(this._data));\n};\n\nDataSet.prototype.reset = function () {\n    this._data = JSON.parse(JSON.stringify(this._dataCache));\n};\n\n/**\n * get data.\n */\nDataSet.prototype.get = function (args) {\n    args = args || {};\n\n    //console.time('copy data time')\n    var start = new Date();\n    // TODO: 不修改原始数据，在数据上挂载新的名称，每次修改数据直接修改新名称下的数据，可以省去deepCopy\n    // var data = deepCopy(this._data);\n    var data = this._data;\n\n    var start = new Date();\n\n    if (args.filter) {\n        var newData = [];\n        for (var i = 0; i < data.length; i++) {\n            if (args.filter(data[i])) {\n                newData.push(data[i]);\n            }\n        }\n        data = newData;\n    }\n\n    if (args.transferCoordinate) {\n        data = this.transferCoordinate(data, args.transferCoordinate, args.fromColumn, args.toColumn);\n    }\n\n    // console.timeEnd('transferCoordinate time')\n\n    return data;\n};\n\n/**\n * set data.\n */\nDataSet.prototype.set = function (data) {\n    this._set(data);\n    this._trigger('change');\n};\n\n/**\n * set data.\n */\nDataSet.prototype._set = function (data) {\n    this.clear();\n    this.add(data);\n};\n\n/**\n * clear data.\n */\nDataSet.prototype.clear = function (args) {\n    this._data = []; // map with data indexed by id\n};\n\n/**\n * remove data.\n */\nDataSet.prototype.remove = function (args) {};\n\n/**\n * update data.\n */\nDataSet.prototype.update = function (cbk, condition) {\n\n    var data = this._data;\n\n    var item = null;\n    for (var i = 0; i < data.length; i++) {\n        if (condition) {\n            var flag = true;\n            for (var key in condition) {\n                if (data[i][key] != condition[key]) {\n                    flag = false;\n                }\n            }\n            if (flag) {\n                cbk && cbk(data[i]);\n            }\n        } else {\n            cbk && cbk(data[i]);\n        }\n    }\n\n    this._dataCache = JSON.parse(JSON.stringify(this._data));\n\n    this._trigger('change');\n};\n\n/**\n * transfer coordinate.\n */\nDataSet.prototype.transferCoordinate = function (data, transferFn, fromColumn, toColumnName) {\n\n    toColumnName = toColumnName || '_coordinates';\n    fromColumn = fromColumn || 'coordinates';\n\n    for (var i = 0; i < data.length; i++) {\n\n        var geometry = data[i].geometry;\n        var coordinates = geometry[fromColumn];\n        switch (geometry.type) {\n            case 'Point':\n                geometry[toColumnName] = transferFn(coordinates);\n                break;\n            case 'LineString':\n                var newCoordinates = [];\n                for (var j = 0; j < coordinates.length; j++) {\n                    newCoordinates.push(transferFn(coordinates[j]));\n                }\n                geometry[toColumnName] = newCoordinates;\n                break;\n            case 'Polygon':\n                var newCoordinates = getPolygon(coordinates);\n                geometry[toColumnName] = newCoordinates;\n                break;\n            case 'MultiPolygon':\n                var newCoordinates = [];\n                for (var c = 0; c < coordinates.length; c++) {\n                    var polygon = coordinates[c];\n                    var polygon = getPolygon(polygon);\n                    newCoordinates.push(polygon);\n                }\n\n                geometry[toColumnName] = newCoordinates;\n                break;\n        }\n    }\n\n    function getPolygon(coordinates) {\n        var newCoordinates = [];\n        for (var c = 0; c < coordinates.length; c++) {\n            var coordinate = coordinates[c];\n            var newcoordinate = [];\n            for (var j = 0; j < coordinate.length; j++) {\n                newcoordinate.push(transferFn(coordinate[j]));\n            }\n            newCoordinates.push(newcoordinate);\n        }\n        return newCoordinates;\n    }\n\n    return data;\n};\n\nDataSet.prototype.initGeometry = function (transferFn) {\n\n    if (transferFn) {\n\n        this._data.forEach(function (item) {\n            item.geometry = transferFn(item);\n        });\n    } else {\n\n        this._data.forEach(function (item) {\n            if (!item.geometry) {\n                if (item.lng && item.lat) {\n                    item.geometry = {\n                        type: 'Point',\n                        coordinates: [item.lng, item.lat]\n                    };\n                } else if (item.city) {\n                    var center = cityCenter.getCenterByCityName(item.city);\n                    if (center) {\n                        item.geometry = {\n                            type: 'Point',\n                            coordinates: [center.lng, center.lat]\n                        };\n                    }\n                }\n            }\n        });\n    }\n};\n\n/**\n * 获取当前列的最大值\n */\nDataSet.prototype.getMax = function (columnName) {\n    var data = this._data;\n\n    if (!data || data.length <= 0) {\n        return;\n    }\n\n    var max = parseFloat(data[0][columnName]);\n\n    for (var i = 1; i < data.length; i++) {\n        var value = parseFloat(data[i][columnName]);\n        if (value > max) {\n            max = value;\n        }\n    }\n\n    return max;\n};\n\n/**\n * 获取当前列的总和\n */\nDataSet.prototype.getSum = function (columnName) {\n    var data = this._data;\n\n    if (!data || data.length <= 0) {\n        return;\n    }\n\n    var sum = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        if (data[i][columnName]) {\n            sum += parseFloat(data[i][columnName]);\n        }\n    }\n\n    return sum;\n};\n\n/**\n * 获取当前列的最小值\n */\nDataSet.prototype.getMin = function (columnName) {\n    var data = this._data;\n\n    if (!data || data.length <= 0) {\n        return;\n    }\n\n    var min = parseFloat(data[0][columnName]);\n\n    for (var i = 1; i < data.length; i++) {\n        var value = parseFloat(data[i][columnName]);\n        if (value < min) {\n            min = value;\n        }\n    }\n\n    return min;\n};\n\n/**\n * 获取去重的数据\n */\nDataSet.prototype.getUnique = function (columnName) {\n    var data = this._data;\n\n    if (!data || data.length <= 0) {\n        return;\n    }\n\n    var maps = {};\n\n    for (var i = 1; i < data.length; i++) {\n        maps[data[i][columnName]] = true;\n    }\n\n    var data = [];\n    for (var key in maps) {\n        data.push(key);\n    }\n\n    return data;\n};\n\nfunction hex_corner(center, size, i) {\n    var angle_deg = 60 * i + 30;\n    var angle_rad = Math.PI / 180 * angle_deg;\n    return [center.x + size * Math.cos(angle_rad), center.y + size * Math.sin(angle_rad)];\n}\n\nfunction draw(context, x, y, size) {\n\n    for (var j = 0; j < 6; j++) {\n\n        var result = hex_corner({\n            x: x,\n            y: y\n        }, size, j);\n\n        context.lineTo(result[0], result[1]);\n    }\n}\n\n/**\n * @author kyle / http://nikai.us/\n */\n\nvar pathSimple = {\n    drawDataSet: function drawDataSet(context, dataSet, options) {\n\n        var data = dataSet instanceof DataSet ? dataSet.get() : dataSet;\n\n        for (var i = 0, len = data.length; i < len; i++) {\n            var item = data[i];\n            this.draw(context, item, options);\n        }\n    },\n    draw: function draw$$1(context, data, options) {\n        var type = data.geometry.type;\n        var coordinates = data.geometry._coordinates || data.geometry.coordinates;\n        var symbol = options.symbol || 'circle';\n        switch (type) {\n            case 'Point':\n                var size = data._size || data.size || options._size || options.size || 5;\n                if (symbol === 'circle') {\n                    if (options.bigData === 'Point') {\n                        context.moveTo(coordinates[0], coordinates[1]);\n                    }\n                    context.arc(coordinates[0], coordinates[1], size, 0, Math.PI * 2);\n                } else if (symbol === 'rect') {\n                    context.rect(coordinates[0] - size / 2, coordinates[1] - size / 2, size, size);\n                } else if (symbol === 'honeycomb') {\n                    draw(context, coordinates[0], coordinates[1], size);\n                }\n                break;\n            case 'LineString':\n                for (var j = 0; j < coordinates.length; j++) {\n                    var x = coordinates[j][0];\n                    var y = coordinates[j][1];\n                    if (j == 0) {\n                        context.moveTo(x, y);\n                    } else {\n                        context.lineTo(x, y);\n                    }\n                }\n                break;\n            case 'Polygon':\n                this.drawPolygon(context, coordinates);\n                break;\n            case 'MultiPolygon':\n                for (var i = 0; i < coordinates.length; i++) {\n                    var polygon = coordinates[i];\n                    this.drawPolygon(context, polygon);\n                }\n                context.closePath();\n                break;\n            default:\n                console.log('type' + type + 'is not support now!');\n                break;\n        }\n    },\n\n    drawPolygon: function drawPolygon(context, coordinates) {\n\n        for (var i = 0; i < coordinates.length; i++) {\n\n            var coordinate = coordinates[i];\n\n            context.moveTo(coordinate[0][0], coordinate[0][1]);\n            for (var j = 1; j < coordinate.length; j++) {\n                context.lineTo(coordinate[j][0], coordinate[j][1]);\n            }\n            context.lineTo(coordinate[0][0], coordinate[0][1]);\n        }\n    }\n\n};\n\n/**\n * @author kyle / http://nikai.us/\n */\n\nvar drawSimple = {\n    draw: function draw(context, dataSet, options) {\n\n        var data = dataSet instanceof DataSet ? dataSet.get() : dataSet;\n\n        // console.log('xxxx',options)\n        context.save();\n\n        for (var key in options) {\n            context[key] = options[key];\n        }\n\n        // console.log(data);\n        if (options.bigData) {\n            context.save();\n            context.beginPath();\n\n            for (var i = 0, len = data.length; i < len; i++) {\n\n                var item = data[i];\n\n                pathSimple.draw(context, item, options);\n            }\n\n            var type = options.bigData;\n\n            if (type == 'Point' || type == 'Polygon' || type == 'MultiPolygon') {\n\n                context.fill();\n\n                if ((item.strokeStyle || options.strokeStyle) && options.lineWidth) {\n                    context.stroke();\n                }\n            } else if (type == 'LineString') {\n                context.stroke();\n            }\n\n            context.restore();\n        } else {\n\n            for (var i = 0, len = data.length; i < len; i++) {\n\n                var item = data[i];\n\n                context.save();\n\n                if (item.fillStyle || item._fillStyle) {\n                    context.fillStyle = item.fillStyle || item._fillStyle;\n                }\n\n                if (item.strokeStyle || item._strokeStyle) {\n                    context.strokeStyle = item.strokeStyle || item._strokeStyle;\n                }\n\n                var type = item.geometry.type;\n\n                context.beginPath();\n\n                pathSimple.draw(context, item, options);\n\n                if (type == 'Point' || type == 'Polygon' || type == 'MultiPolygon') {\n\n                    context.fill();\n\n                    if ((item.strokeStyle || options.strokeStyle) && options.lineWidth) {\n                        context.stroke();\n                    }\n                } else if (type == 'LineString') {\n                    if (item.lineWidth || item._lineWidth) {\n                        context.lineWidth = item.lineWidth || item._lineWidth;\n                    }\n                    context.stroke();\n                }\n\n                context.restore();\n            }\n        }\n\n        context.restore();\n    }\n};\n\nfunction Canvas(width, height) {\n\n    var canvas;\n\n    if (typeof document === 'undefined') {\n\n        // var Canvas = require('canvas');\n        // canvas = new Canvas(width, height);\n\n    } else {\n\n        var canvas = document.createElement('canvas');\n\n        if (width) {\n            canvas.width = width;\n        }\n\n        if (height) {\n            canvas.height = height;\n        }\n    }\n\n    return canvas;\n}\n\n/**\n * @author kyle / http://nikai.us/\n */\n\n/**\n * Category\n * @param {Object} [options]   Available options:\n *                             {Object} gradient: { 0.25: \"rgb(0,0,255)\", 0.55: \"rgb(0,255,0)\", 0.85: \"yellow\", 1.0: \"rgb(255,0,0)\"}\n */\nfunction Intensity(options) {\n\n    options = options || {};\n    this.gradient = options.gradient || {\n        0.25: \"rgba(0, 0, 255, 1)\",\n        0.55: \"rgba(0, 255, 0, 1)\",\n        0.85: \"rgba(255, 255, 0, 1)\",\n        1.0: \"rgba(255, 0, 0, 1)\"\n    };\n    this.maxSize = options.maxSize || 35;\n    this.minSize = options.minSize || 0;\n    this.max = options.max || 100;\n    this.min = options.min || 0;\n    this.initPalette();\n}\n\nIntensity.prototype.setMax = function (value) {\n    this.max = value || 100;\n};\n\nIntensity.prototype.setMin = function (value) {\n    this.min = value || 0;\n};\n\nIntensity.prototype.setMaxSize = function (maxSize) {\n    this.maxSize = maxSize || 35;\n};\n\nIntensity.prototype.setMinSize = function (minSize) {\n    this.minSize = minSize || 0;\n};\n\nIntensity.prototype.initPalette = function () {\n\n    var gradient = this.gradient;\n\n    var canvas = new Canvas(256, 1);\n\n    var paletteCtx = this.paletteCtx = canvas.getContext('2d');\n\n    var lineGradient = paletteCtx.createLinearGradient(0, 0, 256, 1);\n\n    for (var key in gradient) {\n        lineGradient.addColorStop(parseFloat(key), gradient[key]);\n    }\n\n    paletteCtx.fillStyle = lineGradient;\n    paletteCtx.fillRect(0, 0, 256, 1);\n};\n\nIntensity.prototype.getColor = function (value) {\n\n    var imageData = this.getImageData(value);\n\n    return \"rgba(\" + imageData[0] + \", \" + imageData[1] + \", \" + imageData[2] + \", \" + imageData[3] / 256 + \")\";\n};\n\nIntensity.prototype.getImageData = function (value) {\n\n    var imageData = this.paletteCtx.getImageData(0, 0, 256, 1).data;\n\n    if (value === undefined) {\n        return imageData;\n    }\n\n    var max = this.max;\n    var min = this.min;\n\n    if (value > max) {\n        value = max;\n    }\n\n    if (value < min) {\n        value = min;\n    }\n\n    var index = Math.floor((value - min) / (max - min) * (256 - 1)) * 4;\n\n    return [imageData[index], imageData[index + 1], imageData[index + 2], imageData[index + 3]];\n};\n\n/**\n * @param Number value \n * @param Number max of value\n * @param Number max of size\n * @param Object other options\n */\nIntensity.prototype.getSize = function (value) {\n\n    var size = 0;\n    var max = this.max;\n    var min = this.min;\n    var maxSize = this.maxSize;\n    var minSize = this.minSize;\n\n    if (value > max) {\n        value = max;\n    }\n\n    if (value < min) {\n        value = min;\n    }\n\n    size = minSize + (value - min) / (max - min) * (maxSize - minSize);\n\n    return size;\n};\n\nIntensity.prototype.getLegend = function (options) {\n    var gradient = this.gradient;\n\n    var width = options.width || 20;\n    var height = options.height || 180;\n\n    var canvas = new Canvas(width, height);\n\n    var paletteCtx = canvas.getContext('2d');\n\n    var lineGradient = paletteCtx.createLinearGradient(0, height, 0, 0);\n\n    for (var key in gradient) {\n        lineGradient.addColorStop(parseFloat(key), gradient[key]);\n    }\n\n    paletteCtx.fillStyle = lineGradient;\n    paletteCtx.fillRect(0, 0, width, height);\n\n    return canvas;\n};\n\nvar global$1 = typeof window === 'undefined' ? {} : window;\n\nvar devicePixelRatio = global$1.devicePixelRatio || 1;\n\n/**\n * @author kyle / http://nikai.us/\n */\n\nfunction createCircle(size) {\n\n    var shadowBlur = size / 2;\n    var r2 = size + shadowBlur;\n    var offsetDistance = 10000;\n\n    var circle = new Canvas(r2 * 2, r2 * 2);\n    var context = circle.getContext('2d');\n\n    context.shadowBlur = shadowBlur;\n    context.shadowColor = 'black';\n    context.shadowOffsetX = context.shadowOffsetY = offsetDistance;\n\n    context.beginPath();\n    context.arc(r2 - offsetDistance, r2 - offsetDistance, size, 0, Math.PI * 2, true);\n    context.closePath();\n    context.fill();\n    return circle;\n}\n\nfunction colorize(pixels, gradient, options) {\n\n    var maxOpacity = options.maxOpacity || 0.8;\n    for (var i = 3, len = pixels.length, j; i < len; i += 4) {\n        j = pixels[i] * 4; // get gradient color from opacity value\n\n        if (pixels[i] / 256 > maxOpacity) {\n            pixels[i] = 256 * maxOpacity;\n        }\n\n        pixels[i - 3] = gradient[j];\n        pixels[i - 2] = gradient[j + 1];\n        pixels[i - 1] = gradient[j + 2];\n    }\n}\n\nfunction drawGray(context, dataSet, options) {\n\n    var max = options.max || 100;\n    var min = options.min || 0;\n    // console.log(max)\n    var size = options._size;\n    if (size == undefined) {\n        size = options.size;\n        if (size == undefined) {\n            size = 13;\n        }\n    }\n\n    var intensity = new Intensity({\n        gradient: options.gradient,\n        max: max,\n        min: min\n    });\n\n    var circle = createCircle(size);\n    var circleHalfWidth = circle.width / 2;\n    var circleHalfHeight = circle.height / 2;\n\n    var data = dataSet;\n\n    var dataOrderByAlpha = {};\n\n    data.forEach(function (item, index) {\n        var count = item.count === undefined ? 1 : item.count;\n        var alpha = Math.min(1, count / max).toFixed(2);\n        dataOrderByAlpha[alpha] = dataOrderByAlpha[alpha] || [];\n        dataOrderByAlpha[alpha].push(item);\n    });\n\n    for (var i in dataOrderByAlpha) {\n        if (isNaN(i)) continue;\n        var _data = dataOrderByAlpha[i];\n        context.beginPath();\n        if (!options.withoutAlpha) {\n            context.globalAlpha = i;\n        }\n        context.strokeStyle = intensity.getColor(i * max);\n        _data.forEach(function (item, index) {\n            if (!item.geometry) {\n                return;\n            }\n\n            var coordinates = item.geometry._coordinates || item.geometry.coordinates;\n            var type = item.geometry.type;\n            if (type === 'Point') {\n                var count = item.count === undefined ? 1 : item.count;\n                context.globalAlpha = count / max;\n                context.drawImage(circle, coordinates[0] - circleHalfWidth, coordinates[1] - circleHalfHeight);\n            } else if (type === 'LineString') {\n                var count = item.count === undefined ? 1 : item.count;\n                context.globalAlpha = count / max;\n                context.beginPath();\n                pathSimple.draw(context, item, options);\n                context.stroke();\n            } else if (type === 'Polygon') {}\n        });\n    }\n}\n\nfunction draw$1(context, dataSet, options) {\n    if (context.canvas.width <= 0 || context.canvas.height <= 0) {\n        return;\n    }\n\n    var strength = options.strength || 0.3;\n    context.strokeStyle = 'rgba(0,0,0,' + strength + ')';\n\n    var shadowCanvas = new Canvas(context.canvas.width, context.canvas.height);\n    var shadowContext = shadowCanvas.getContext('2d');\n    shadowContext.scale(devicePixelRatio, devicePixelRatio);\n\n    options = options || {};\n\n    var data = dataSet instanceof DataSet ? dataSet.get() : dataSet;\n\n    context.save();\n\n    var intensity = new Intensity({\n        gradient: options.gradient\n    });\n\n    //console.time('drawGray')\n    drawGray(shadowContext, data, options);\n\n    //console.timeEnd('drawGray');\n    // return false;\n    if (!options.absolute) {\n        //console.time('changeColor');\n        var colored = shadowContext.getImageData(0, 0, context.canvas.width, context.canvas.height);\n        colorize(colored.data, intensity.getImageData(), options);\n        //console.timeEnd('changeColor');\n        context.putImageData(colored, 0, 0);\n\n        context.restore();\n    }\n\n    intensity = null;\n    shadowCanvas = null;\n}\n\nvar drawHeatmap = {\n    draw: draw$1\n};\n\n/**\n * @author kyle / http://nikai.us/\n */\n\nvar drawGrid = {\n    draw: function draw(context, dataSet, options) {\n\n        context.save();\n\n        var data = dataSet instanceof DataSet ? dataSet.get() : dataSet;\n\n        var grids = {};\n\n        var size = options._size || options.size || 50;\n\n        var offset = options.offset || {\n            x: 0,\n            y: 0\n        };\n\n        for (var i = 0; i < data.length; i++) {\n            var coordinates = data[i].geometry._coordinates || data[i].geometry.coordinates;\n            var gridKey = Math.floor((coordinates[0] - offset.x) / size) + \",\" + Math.floor((coordinates[1] - offset.y) / size);\n            if (!grids[gridKey]) {\n                grids[gridKey] = 0;\n            }\n            grids[gridKey] += ~~(data[i].count || 1);\n        }\n\n        var intensity = new Intensity({\n            max: options.max || 100,\n            gradient: options.gradient\n        });\n\n        for (var gridKey in grids) {\n            gridKey = gridKey.split(\",\");\n\n            context.beginPath();\n            context.rect(gridKey[0] * size + .5 + offset.x, gridKey[1] * size + .5 + offset.y, size, size);\n            context.fillStyle = intensity.getColor(grids[gridKey]);\n            context.fill();\n            if (options.strokeStyle && options.lineWidth) {\n                context.stroke();\n            }\n        }\n\n        if (options.label && options.label.show !== false) {\n\n            context.fillStyle = options.label.fillStyle || 'white';\n\n            if (options.label.font) {\n                context.font = options.label.font;\n            }\n\n            if (options.label.shadowColor) {\n                context.shadowColor = options.label.shadowColor;\n            }\n\n            if (options.label.shadowBlur) {\n                context.shadowBlur = options.label.shadowBlur;\n            }\n\n            for (var gridKey in grids) {\n                gridKey = gridKey.split(\",\");\n                var text = grids[gridKey];\n                var textWidth = context.measureText(text).width;\n                context.fillText(text, gridKey[0] * size + .5 + offset.x + size / 2 - textWidth / 2, gridKey[1] * size + .5 + offset.y + size / 2 + 5);\n            }\n        }\n\n        context.restore();\n    }\n};\n\n/**\n * @author kyle / http://nikai.us/\n */\n\nfunction hex_corner$1(center, size, i) {\n    var angle_deg = 60 * i + 30;\n    var angle_rad = Math.PI / 180 * angle_deg;\n    return [center.x + size * Math.cos(angle_rad), center.y + size * Math.sin(angle_rad)];\n}\n\nvar drawHoneycomb = {\n    draw: function draw(context, dataSet, options) {\n\n        context.save();\n\n        var data = dataSet instanceof DataSet ? dataSet.get() : dataSet;\n\n        for (var key in options) {\n            context[key] = options[key];\n        }\n\n        var grids = {};\n\n        var offset = options.offset || {\n            x: 10,\n            y: 10\n        };\n\n        var r = options._size || options.size || 40;\n        r = r / 2 / Math.sin(Math.PI / 3);\n        var dx = r * 2 * Math.sin(Math.PI / 3);\n        var dy = r * 1.5;\n\n        var binsById = {};\n\n        for (var i = 0; i < data.length; i++) {\n            var coordinates = data[i].geometry._coordinates || data[i].geometry.coordinates;\n            var py = (coordinates[1] - offset.y) / dy,\n                pj = Math.round(py),\n                px = (coordinates[0] - offset.x) / dx - (pj & 1 ? .5 : 0),\n                pi = Math.round(px),\n                py1 = py - pj;\n\n            if (Math.abs(py1) * 3 > 1) {\n                var px1 = px - pi,\n                    pi2 = pi + (px < pi ? -1 : 1) / 2,\n                    pj2 = pj + (py < pj ? -1 : 1),\n                    px2 = px - pi2,\n                    py2 = py - pj2;\n                if (px1 * px1 + py1 * py1 > px2 * px2 + py2 * py2) pi = pi2 + (pj & 1 ? 1 : -1) / 2, pj = pj2;\n            }\n\n            var id = pi + \"-\" + pj,\n                bin = binsById[id];\n            if (bin) {\n                bin.push(data[i]);\n            } else {\n                bin = binsById[id] = [data[i]];\n                bin.i = pi;\n                bin.j = pj;\n                bin.x = (pi + (pj & 1 ? 1 / 2 : 0)) * dx;\n                bin.y = pj * dy;\n            }\n        }\n\n        var intensity = new Intensity({\n            max: options.max || 100,\n            maxSize: r,\n            gradient: options.gradient\n        });\n\n        for (var key in binsById) {\n\n            var item = binsById[key];\n\n            context.beginPath();\n\n            for (var j = 0; j < 6; j++) {\n\n                var result = hex_corner$1({\n                    x: item.x + offset.x,\n                    y: item.y + offset.y\n                }, r, j);\n\n                context.lineTo(result[0], result[1]);\n            }\n\n            context.closePath();\n\n            var count = 0;\n            for (var i = 0; i < item.length; i++) {\n                count += item[i].count || 1;\n            }\n            item.count = count;\n\n            context.fillStyle = intensity.getColor(count);\n            context.fill();\n            if (options.strokeStyle && options.lineWidth) {\n                context.stroke();\n            }\n        }\n\n        if (options.label && options.label.show !== false) {\n\n            context.fillStyle = options.label.fillStyle || 'white';\n\n            if (options.label.font) {\n                context.font = options.label.font;\n            }\n\n            if (options.label.shadowColor) {\n                context.shadowColor = options.label.shadowColor;\n            }\n\n            if (options.label.shadowBlur) {\n                context.shadowBlur = options.label.shadowBlur;\n            }\n\n            for (var key in binsById) {\n                var item = binsById[key];\n                var text = item.count;\n                if (text < 0) {\n                    text = text.toFixed(2);\n                } else {\n                    text = ~~text;\n                }\n                var textWidth = context.measureText(text).width;\n                context.fillText(text, item.x + offset.x - textWidth / 2, item.y + offset.y + 5);\n            }\n        }\n\n        context.restore();\n    }\n};\n\nfunction createShader(gl, src, type) {\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, src);\n    gl.compileShader(shader);\n    return shader;\n}\n\nfunction initShaders(gl, vs_source, fs_source) {\n\n    var vertexShader = createShader(gl, vs_source, gl.VERTEX_SHADER);\n    var fragmentShader = createShader(gl, fs_source, gl.FRAGMENT_SHADER);\n\n    var glProgram = gl.createProgram();\n\n    gl.attachShader(glProgram, vertexShader);\n    gl.attachShader(glProgram, fragmentShader);\n    gl.linkProgram(glProgram);\n\n    gl.useProgram(glProgram);\n\n    return glProgram;\n}\n\nfunction getColorData(color) {\n    var tmpCanvas = document.createElement('canvas');\n    var tmpCtx = tmpCanvas.getContext('2d');\n    tmpCanvas.width = 1;\n    tmpCanvas.height = 1;\n    tmpCtx.fillStyle = color;\n    tmpCtx.fillRect(0, 0, 1, 1);\n    return tmpCtx.getImageData(0, 0, 1, 1).data;\n}\n\nvar vs_s = ['attribute vec4 a_Position;', 'void main() {', 'gl_Position = a_Position;', 'gl_PointSize = 30.0;', '}'].join('');\n\nvar fs_s = ['precision mediump float;', 'uniform vec4 u_FragColor;', 'void main() {', 'gl_FragColor = u_FragColor;', '}'].join('');\n\nfunction draw$2(gl, data, options) {\n\n    if (!data) {\n        return;\n    }\n\n    var program = initShaders(gl, vs_s, fs_s);\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n\n    //gl.clearColor(0.0, 0.0, 1.0, 1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    var halfCanvasWidth = gl.canvas.width / 2;\n    var halfCanvasHeight = gl.canvas.height / 2;\n\n    // Create a buffer object\n    var vertexBuffer = gl.createBuffer();\n    // Bind the buffer object to target\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n\n    var a_Position = gl.getAttribLocation(program, 'a_Position');\n    // Assign the buffer object to a_Position variable\n    gl.vertexAttribPointer(a_Position, 2, gl.FLOAT, false, 0, 0);\n\n    // Enable the assignment to a_Position variable\n    gl.enableVertexAttribArray(a_Position);\n\n    var uFragColor = gl.getUniformLocation(program, 'u_FragColor');\n\n    var colored = getColorData(options.strokeStyle || 'red');\n\n    gl.uniform4f(uFragColor, colored[0] / 255, colored[1] / 255, colored[2] / 255, colored[3] / 255);\n\n    gl.lineWidth(options.lineWidth || 1);\n\n    for (var i = 0, len = data.length; i < len; i++) {\n        var _geometry = data[i].geometry._coordinates;\n\n        var verticesData = [];\n\n        for (var j = 0; j < _geometry.length; j++) {\n            var item = _geometry[j];\n\n            var x = (item[0] - halfCanvasWidth) / halfCanvasWidth;\n            var y = (halfCanvasHeight - item[1]) / halfCanvasHeight;\n            verticesData.push(x, y);\n        }\n\n        var vertices = new Float32Array(verticesData);\n        // Write date into the buffer object\n        gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n        gl.drawArrays(gl.LINE_STRIP, 0, _geometry.length);\n    }\n}\n\nvar line = {\n    draw: draw$2\n};\n\nvar vs_s$1 = ['attribute vec4 a_Position;', 'attribute float a_PointSize;', 'void main() {', 'gl_Position = a_Position;', 'gl_PointSize = a_PointSize;', '}'].join('');\n\nvar fs_s$1 = ['precision mediump float;', 'uniform vec4 u_FragColor;', 'void main() {', 'gl_FragColor = u_FragColor;', '}'].join('');\n\nfunction draw$3(gl, data, options) {\n\n    if (!data) {\n        return;\n    }\n\n    var program = initShaders(gl, vs_s$1, fs_s$1);\n\n    var a_Position = gl.getAttribLocation(program, 'a_Position');\n\n    var a_PointSize = gl.getAttribLocation(program, 'a_PointSize');\n\n    var uFragColor = gl.getUniformLocation(program, 'u_FragColor');\n\n    //gl.clearColor(0.0, 0.0, 1.0, 1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    var halfCanvasWidth = gl.canvas.width / 2;\n    var halfCanvasHeight = gl.canvas.height / 2;\n\n    var verticesData = [];\n    var count = 0;\n    for (var i = 0; i < data.length; i++) {\n        var item = data[i].geometry._coordinates;\n\n        var x = (item[0] - halfCanvasWidth) / halfCanvasWidth;\n        var y = (halfCanvasHeight - item[1]) / halfCanvasHeight;\n\n        if (x < -1 || x > 1 || y < -1 || y > 1) {\n            continue;\n        }\n        verticesData.push(x, y);\n        count++;\n    }\n\n    var vertices = new Float32Array(verticesData);\n    var n = count; // The number of vertices\n\n    // Create a buffer object\n    var vertexBuffer = gl.createBuffer();\n\n    // Bind the buffer object to target\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    // Write date into the buffer object\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n\n    // Assign the buffer object to a_Position variable\n    gl.vertexAttribPointer(a_Position, 2, gl.FLOAT, false, 0, 0);\n\n    // Enable the assignment to a_Position variable\n    gl.enableVertexAttribArray(a_Position);\n\n    gl.vertexAttrib1f(a_PointSize, options._size);\n\n    var colored = getColorData(options.fillStyle || 'red');\n\n    gl.uniform4f(uFragColor, colored[0] / 255, colored[1] / 255, colored[2] / 255, colored[3] / 255);\n    gl.drawArrays(gl.POINTS, 0, n);\n}\n\nvar point = {\n    draw: draw$3\n};\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, size;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and size are later used to transform coords into integers for z-order calculation\n        size = Math.max(maxX - minX, maxY - minY);\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, size);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === signedArea(data, start, end, dim) > 0) {\n        for (i = start; i < end; i += dim) {\n            last = insertNode(i, data[i], data[i + 1], last);\n        }\n    } else {\n        for (i = end - dim; i >= start; i -= dim) {\n            last = insertNode(i, data[i], data[i + 1], last);\n        }\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) return null;\n            again = true;\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, size, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && size) indexCurve(ear, minX, minY, size);\n\n    var stop = ear,\n        prev,\n        next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (size ? isEarHashed(ear, minX, minY, size) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertice leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, size, 1);\n\n                // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(ear, triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, size, 2);\n\n                // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, size);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, size) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? a.x < c.x ? a.x : c.x : b.x < c.x ? b.x : c.x,\n        minTY = a.y < b.y ? a.y < c.y ? a.y : c.y : b.y < c.y ? b.y : c.y,\n        maxTX = a.x > b.x ? a.x > c.x ? a.x : c.x : b.x > c.x ? b.x : c.x,\n        maxTY = a.y > b.y ? a.y > c.y ? a.y : c.y : b.y > c.y ? b.y : c.y;\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, size),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, size);\n\n    // first look for points inside the triangle in increasing z-order\n    var p = ear.nextZ;\n\n    while (p && p.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.nextZ;\n    }\n\n    // then look for points in decreasing z-order\n    p = ear.prevZ;\n\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return p;\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, size) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, size);\n                earcutLinked(c, triangles, dim, minX, minY, size);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i,\n        len,\n        start,\n        end,\n        list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        var b = splitPolygon(outerNode, hole);\n        filterPoints(b, b.next);\n    }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m.prev; // hole touches outer segment; pick lower endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m.next;\n\n    while (p !== stop) {\n        if (hx >= p.x && p.x >= mx && pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if ((tan < tanMin || tan === tanMin && p.x > m.x) && locallyInside(p, hole)) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    }\n\n    return m;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, size) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, size);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i,\n        p,\n        q,\n        e,\n        tail,\n        numMerges,\n        pSize,\n        qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n\n            qSize = inSize;\n\n            while (pSize > 0 || qSize > 0 && q) {\n\n                if (pSize === 0) {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                } else if (qSize === 0 || !q) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else if (p.z <= q.z) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and size of the data bounding box\nfunction zOrder(x, y, minX, minY, size) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) / size;\n    y = 32767 * (y - minY) / size;\n\n    x = (x | x << 8) & 0x00FF00FF;\n    x = (x | x << 4) & 0x0F0F0F0F;\n    x = (x | x << 2) & 0x33333333;\n    x = (x | x << 1) & 0x55555555;\n\n    y = (y | y << 8) & 0x00FF00FF;\n    y = (y | y << 4) & 0x0F0F0F0F;\n    y = (y | y << 2) & 0x33333333;\n    y = (y | y << 1) & 0x55555555;\n\n    return x | y << 1;\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b);\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    if (equals(p1, q1) && equals(p2, q2) || equals(p1, q2) && equals(p2, q1)) return true;\n    return area(p1, q1, p2) > 0 !== area(p1, q1, q2) > 0 && area(p2, q2, p1) > 0 !== area(p2, q2, q1) > 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i && intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (p.y > py !== p.next.y > py && px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x) inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertice index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertice nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs((data[a] - data[c]) * (data[b + 1] - data[a + 1]) - (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 : Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = { vertices: [], holes: [], dimensions: dim },\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) {\n                result.vertices.push(data[i][j][d]);\n            }\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n\nvar vs_s$2 = ['attribute vec4 a_Position;', 'void main() {', 'gl_Position = a_Position;', 'gl_PointSize = 30.0;', '}'].join('');\n\nvar fs_s$2 = ['precision mediump float;', 'uniform vec4 u_FragColor;', 'void main() {', 'gl_FragColor = u_FragColor;', '}'].join('');\n\nfunction draw$4(gl, data, options) {\n\n    if (!data) {\n        return;\n    }\n\n    // gl.clearColor(0.0, 0.0, 0.0, 1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n\n    var program = initShaders(gl, vs_s$2, fs_s$2);\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n\n    var halfCanvasWidth = gl.canvas.width / 2;\n    var halfCanvasHeight = gl.canvas.height / 2;\n\n    // Bind the buffer object to target\n    gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gl.createBuffer());\n\n    var a_Position = gl.getAttribLocation(program, 'a_Position');\n    // Assign the buffer object to a_Position variable\n    gl.vertexAttribPointer(a_Position, 2, gl.FLOAT, false, 0, 0);\n\n    // Enable the assignment to a_Position variable\n    gl.enableVertexAttribArray(a_Position);\n\n    var uFragColor = gl.getUniformLocation(program, 'u_FragColor');\n\n    var colored = getColorData(options.fillStyle || 'red');\n\n    gl.uniform4f(uFragColor, colored[0] / 255, colored[1] / 255, colored[2] / 255, colored[3] / 255);\n\n    gl.lineWidth(options.lineWidth || 1);\n\n    var verticesArr = [];\n    var trianglesArr = [];\n\n    var maxSize = 65536;\n    var indexOffset = 0;\n\n    for (var i = 0, len = data.length; i < len; i++) {\n\n        var flatten = earcut.flatten(data[i].geometry._coordinates || data[i].geometry.coordinates);\n        var vertices = flatten.vertices;\n        indexOffset = verticesArr.length / 2;\n        for (var j = 0; j < vertices.length; j += 2) {\n            vertices[j] = (vertices[j] - halfCanvasWidth) / halfCanvasWidth;\n            vertices[j + 1] = (halfCanvasHeight - vertices[j + 1]) / halfCanvasHeight;\n        }\n\n        if ((verticesArr.length + vertices.length) / 2 > maxSize) {\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verticesArr), gl.STATIC_DRAW);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(trianglesArr), gl.STATIC_DRAW);\n            gl.drawElements(gl.TRIANGLES, trianglesArr.length, gl.UNSIGNED_SHORT, 0);\n            verticesArr.length = 0;\n            trianglesArr.length = 0;\n            indexOffset = 0;\n        }\n\n        for (var j = 0; j < vertices.length; j++) {\n            verticesArr.push(vertices[j]);\n        }\n\n        var triangles = earcut(vertices, flatten.holes, flatten.dimensions);\n        for (var j = 0; j < triangles.length; j++) {\n            trianglesArr.push(triangles[j] + indexOffset);\n        }\n    }\n\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verticesArr), gl.STATIC_DRAW);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(trianglesArr), gl.STATIC_DRAW);\n    gl.drawElements(gl.TRIANGLES, trianglesArr.length, gl.UNSIGNED_SHORT, 0);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n}\n\nvar polygon = {\n    draw: draw$4\n};\n\n/**\n * @author kyle / http://nikai.us/\n */\nvar webglDrawSimple = {\n    draw: function draw(gl, dataSet, options) {\n        var data = dataSet instanceof DataSet ? dataSet.get() : dataSet;\n        if (data.length > 0) {\n            if (data[0].geometry.type == \"LineString\") {\n                line.draw(gl, data, options);\n            } else if (data[0].geometry.type == \"Polygon\" || data[0].geometry.type == \"MultiPolygon\") {\n                polygon.draw(gl, data, options);\n            } else {\n                point.draw(gl, data, options);\n            }\n        }\n    }\n};\n\n/**\n  * 根据弧线的坐标节点数组\n  */\nfunction getCurvePoints(points, options) {\n  options = options || {};\n  var curvePoints = [];\n  for (var i = 0; i < points.length - 1; i++) {\n    var p = getCurveByTwoPoints(points[i], points[i + 1], options.count);\n    if (p && p.length > 0) {\n      curvePoints = curvePoints.concat(p);\n    }\n  }\n  return curvePoints;\n}\n\n/**\n * 根据两点获取曲线坐标点数组\n * @param Point 起点\n * @param Point 终点\n */\nfunction getCurveByTwoPoints(obj1, obj2, count) {\n  if (!obj1 || !obj2) {\n    return null;\n  }\n\n  var B1 = function B1(x) {\n    return 1 - 2 * x + x * x;\n  };\n  var B2 = function B2(x) {\n    return 2 * x - 2 * x * x;\n  };\n  var B3 = function B3(x) {\n    return x * x;\n  };\n\n  var curveCoordinates = [];\n\n  var count = count || 40; // 曲线是由一些小的线段组成的，这个表示这个曲线所有到的折线的个数\n  var isFuture = false;\n  var t, h, h2, lat3, lng3, j, t2;\n  var LnArray = [];\n  var i = 0;\n  var inc = 0;\n\n  if (typeof obj2 == \"undefined\") {\n    if (typeof curveCoordinates != \"undefined\") {\n      curveCoordinates = [];\n    }\n    return;\n  }\n\n  var lat1 = parseFloat(obj1.lat);\n  var lat2 = parseFloat(obj2.lat);\n  var lng1 = parseFloat(obj1.lng);\n  var lng2 = parseFloat(obj2.lng);\n\n  // 计算曲线角度的方法\n  if (lng2 > lng1) {\n    if (parseFloat(lng2 - lng1) > 180) {\n      if (lng1 < 0) {\n        lng1 = parseFloat(180 + 180 + lng1);\n      }\n    }\n  }\n\n  if (lng1 > lng2) {\n    if (parseFloat(lng1 - lng2) > 180) {\n      if (lng2 < 0) {\n        lng2 = parseFloat(180 + 180 + lng2);\n      }\n    }\n  }\n  j = 0;\n  t2 = 0;\n  if (lat2 == lat1) {\n    t = 0;\n    h = lng1 - lng2;\n  } else if (lng2 == lng1) {\n    t = Math.PI / 2;\n    h = lat1 - lat2;\n  } else {\n    t = Math.atan((lat2 - lat1) / (lng2 - lng1));\n    h = (lat2 - lat1) / Math.sin(t);\n  }\n  if (t2 == 0) {\n    t2 = t + Math.PI / 5;\n  }\n  h2 = h / 2;\n  lng3 = h2 * Math.cos(t2) + lng1;\n  lat3 = h2 * Math.sin(t2) + lat1;\n\n  for (i = 0; i < count + 1; i++) {\n    curveCoordinates.push([lng1 * B1(inc) + lng3 * B2(inc) + lng2 * B3(inc), lat1 * B1(inc) + lat3 * B2(inc) + lat2 * B3(inc)]);\n    inc = inc + 1 / count;\n  }\n  return curveCoordinates;\n}\n\nvar curve = {\n  getPoints: getCurvePoints\n};\n\n/* \nFDEB algorithm implementation [www.win.tue.nl/~dholten/papers/forcebundles_eurovis.pdf].\n\nAuthor:  (github.com/upphiminn)\n2013\n\n*/\n\nvar ForceEdgeBundling = function ForceEdgeBundling() {\n    var data_nodes = {},\n        // {'nodeid':{'x':,'y':},..}\n    data_edges = [],\n        // [{'source':'nodeid1', 'target':'nodeid2'},..]\n    compatibility_list_for_edge = [],\n        subdivision_points_for_edge = [],\n        K = 0.1,\n        // global bundling constant controling edge stiffness\n    S_initial = 0.1,\n        // init. distance to move points\n    P_initial = 1,\n        // init. subdivision number\n    P_rate = 2,\n        // subdivision rate increase\n    C = 6,\n        // number of cycles to perform\n    I_initial = 70,\n        // init. number of iterations for cycle\n    I_rate = 0.6666667,\n        // rate at which iteration number decreases i.e. 2/3\n    compatibility_threshold = 0.6,\n        invers_quadratic_mode = false,\n        eps = 1e-8;\n\n    /*** Geometry Helper Methods ***/\n    function vector_dot_product(p, q) {\n        return p.x * q.x + p.y * q.y;\n    }\n\n    function edge_as_vector(P) {\n        return { 'x': data_nodes[P.target].x - data_nodes[P.source].x,\n            'y': data_nodes[P.target].y - data_nodes[P.source].y };\n    }\n\n    function edge_length(e) {\n        return Math.sqrt(Math.pow(data_nodes[e.source].x - data_nodes[e.target].x, 2) + Math.pow(data_nodes[e.source].y - data_nodes[e.target].y, 2));\n    }\n\n    function custom_edge_length(e) {\n        return Math.sqrt(Math.pow(e.source.x - e.target.x, 2) + Math.pow(e.source.y - e.target.y, 2));\n    }\n\n    function edge_midpoint(e) {\n        var middle_x = (data_nodes[e.source].x + data_nodes[e.target].x) / 2.0;\n        var middle_y = (data_nodes[e.source].y + data_nodes[e.target].y) / 2.0;\n        return { 'x': middle_x, 'y': middle_y };\n    }\n\n    function compute_divided_edge_length(e_idx) {\n        var length = 0;\n        for (var i = 1; i < subdivision_points_for_edge[e_idx].length; i++) {\n            var segment_length = euclidean_distance(subdivision_points_for_edge[e_idx][i], subdivision_points_for_edge[e_idx][i - 1]);\n            length += segment_length;\n        }\n        return length;\n    }\n\n    function euclidean_distance(p, q) {\n        return Math.sqrt(Math.pow(p.x - q.x, 2) + Math.pow(p.y - q.y, 2));\n    }\n\n    function project_point_on_line(p, Q) {\n        var L = Math.sqrt((Q.target.x - Q.source.x) * (Q.target.x - Q.source.x) + (Q.target.y - Q.source.y) * (Q.target.y - Q.source.y));\n        var r = ((Q.source.y - p.y) * (Q.source.y - Q.target.y) - (Q.source.x - p.x) * (Q.target.x - Q.source.x)) / (L * L);\n\n        return { 'x': Q.source.x + r * (Q.target.x - Q.source.x), 'y': Q.source.y + r * (Q.target.y - Q.source.y) };\n    }\n\n    /*** ********************** ***/\n\n    /*** Initialization Methods ***/\n    function initialize_edge_subdivisions() {\n        for (var i = 0; i < data_edges.length; i++) {\n            if (P_initial == 1) subdivision_points_for_edge[i] = []; //0 subdivisions\n            else {\n                    subdivision_points_for_edge[i] = [];\n                    subdivision_points_for_edge[i].push(data_nodes[data_edges[i].source]);\n                    subdivision_points_for_edge[i].push(data_nodes[data_edges[i].target]);\n                }\n        }\n    }\n\n    function initialize_compatibility_lists() {\n        for (var i = 0; i < data_edges.length; i++) {\n            compatibility_list_for_edge[i] = [];\n        } //0 compatible edges.\n    }\n\n    function filter_self_loops(edgelist) {\n        var filtered_edge_list = [];\n        for (var e = 0; e < edgelist.length; e++) {\n            if (data_nodes[edgelist[e].source].x != data_nodes[edgelist[e].target].x && data_nodes[edgelist[e].source].y != data_nodes[edgelist[e].target].y) {\n                //or smaller than eps\n                filtered_edge_list.push(edgelist[e]);\n            }\n        }\n\n        return filtered_edge_list;\n    }\n    /*** ********************** ***/\n\n    /*** Force Calculation Methods ***/\n    function apply_spring_force(e_idx, i, kP) {\n\n        var prev = subdivision_points_for_edge[e_idx][i - 1];\n        var next = subdivision_points_for_edge[e_idx][i + 1];\n        var crnt = subdivision_points_for_edge[e_idx][i];\n\n        var x = prev.x - crnt.x + next.x - crnt.x;\n        var y = prev.y - crnt.y + next.y - crnt.y;\n\n        x *= kP;\n        y *= kP;\n\n        return { 'x': x, 'y': y };\n    }\n\n    function apply_electrostatic_force(e_idx, i, S) {\n        var sum_of_forces = { 'x': 0, 'y': 0 };\n        var compatible_edges_list = compatibility_list_for_edge[e_idx];\n\n        for (var oe = 0; oe < compatible_edges_list.length; oe++) {\n            var force = { 'x': subdivision_points_for_edge[compatible_edges_list[oe]][i].x - subdivision_points_for_edge[e_idx][i].x,\n                'y': subdivision_points_for_edge[compatible_edges_list[oe]][i].y - subdivision_points_for_edge[e_idx][i].y };\n\n            if (Math.abs(force.x) > eps || Math.abs(force.y) > eps) {\n\n                var diff = 1 / Math.pow(custom_edge_length({ 'source': subdivision_points_for_edge[compatible_edges_list[oe]][i],\n                    'target': subdivision_points_for_edge[e_idx][i] }), 1);\n\n                sum_of_forces.x += force.x * diff;\n                sum_of_forces.y += force.y * diff;\n            }\n        }\n        return sum_of_forces;\n    }\n\n    function apply_resulting_forces_on_subdivision_points(e_idx, P, S) {\n        var kP = K / (edge_length(data_edges[e_idx]) * (P + 1)); // kP=K/|P|(number of segments), where |P| is the initial length of edge P.\n        // (length * (num of sub division pts - 1))\n        var resulting_forces_for_subdivision_points = [{ 'x': 0, 'y': 0 }];\n        for (var i = 1; i < P + 1; i++) {\n            // exclude initial end points of the edge 0 and P+1\n            var resulting_force = { 'x': 0, 'y': 0 };\n\n            var spring_force = apply_spring_force(e_idx, i, kP);\n            var electrostatic_force = apply_electrostatic_force(e_idx, i, S);\n\n            resulting_force.x = S * (spring_force.x + electrostatic_force.x);\n            resulting_force.y = S * (spring_force.y + electrostatic_force.y);\n\n            resulting_forces_for_subdivision_points.push(resulting_force);\n        }\n        resulting_forces_for_subdivision_points.push({ 'x': 0, 'y': 0 });\n        return resulting_forces_for_subdivision_points;\n    }\n    /*** ********************** ***/\n\n    /*** Edge Division Calculation Methods ***/\n    function update_edge_divisions(P) {\n        for (var e_idx = 0; e_idx < data_edges.length; e_idx++) {\n\n            if (P == 1) {\n                subdivision_points_for_edge[e_idx].push(data_nodes[data_edges[e_idx].source]); // source\n                subdivision_points_for_edge[e_idx].push(edge_midpoint(data_edges[e_idx])); // mid point\n                subdivision_points_for_edge[e_idx].push(data_nodes[data_edges[e_idx].target]); // target\n            } else {\n\n                var divided_edge_length = compute_divided_edge_length(e_idx);\n                var segment_length = divided_edge_length / (P + 1);\n                var current_segment_length = segment_length;\n                var new_subdivision_points = [];\n                new_subdivision_points.push(data_nodes[data_edges[e_idx].source]); //source\n\n                for (var i = 1; i < subdivision_points_for_edge[e_idx].length; i++) {\n                    var old_segment_length = euclidean_distance(subdivision_points_for_edge[e_idx][i], subdivision_points_for_edge[e_idx][i - 1]);\n\n                    while (old_segment_length > current_segment_length) {\n                        var percent_position = current_segment_length / old_segment_length;\n                        var new_subdivision_point_x = subdivision_points_for_edge[e_idx][i - 1].x;\n                        var new_subdivision_point_y = subdivision_points_for_edge[e_idx][i - 1].y;\n\n                        new_subdivision_point_x += percent_position * (subdivision_points_for_edge[e_idx][i].x - subdivision_points_for_edge[e_idx][i - 1].x);\n                        new_subdivision_point_y += percent_position * (subdivision_points_for_edge[e_idx][i].y - subdivision_points_for_edge[e_idx][i - 1].y);\n                        new_subdivision_points.push({ 'x': new_subdivision_point_x,\n                            'y': new_subdivision_point_y });\n\n                        old_segment_length -= current_segment_length;\n                        current_segment_length = segment_length;\n                    }\n                    current_segment_length -= old_segment_length;\n                }\n                new_subdivision_points.push(data_nodes[data_edges[e_idx].target]); //target\n                subdivision_points_for_edge[e_idx] = new_subdivision_points;\n            }\n        }\n    }\n    /*** ********************** ***/\n\n    /*** Edge compatibility measures ***/\n    function angle_compatibility(P, Q) {\n        var result = Math.abs(vector_dot_product(edge_as_vector(P), edge_as_vector(Q)) / (edge_length(P) * edge_length(Q)));\n        return result;\n    }\n\n    function scale_compatibility(P, Q) {\n        var lavg = (edge_length(P) + edge_length(Q)) / 2.0;\n        var result = 2.0 / (lavg / Math.min(edge_length(P), edge_length(Q)) + Math.max(edge_length(P), edge_length(Q)) / lavg);\n        return result;\n    }\n\n    function position_compatibility(P, Q) {\n        var lavg = (edge_length(P) + edge_length(Q)) / 2.0;\n        var midP = { 'x': (data_nodes[P.source].x + data_nodes[P.target].x) / 2.0,\n            'y': (data_nodes[P.source].y + data_nodes[P.target].y) / 2.0 };\n        var midQ = { 'x': (data_nodes[Q.source].x + data_nodes[Q.target].x) / 2.0,\n            'y': (data_nodes[Q.source].y + data_nodes[Q.target].y) / 2.0 };\n        var result = lavg / (lavg + euclidean_distance(midP, midQ));\n        return result;\n    }\n\n    function edge_visibility(P, Q) {\n        var I0 = project_point_on_line(data_nodes[Q.source], { 'source': data_nodes[P.source],\n            'target': data_nodes[P.target] });\n        var I1 = project_point_on_line(data_nodes[Q.target], { 'source': data_nodes[P.source],\n            'target': data_nodes[P.target] }); //send acutal edge points positions\n        var midI = { 'x': (I0.x + I1.x) / 2.0,\n            'y': (I0.y + I1.y) / 2.0 };\n        var midP = { 'x': (data_nodes[P.source].x + data_nodes[P.target].x) / 2.0,\n            'y': (data_nodes[P.source].y + data_nodes[P.target].y) / 2.0 };\n        var result = Math.max(0, 1 - 2 * euclidean_distance(midP, midI) / euclidean_distance(I0, I1));\n        return result;\n    }\n\n    function visibility_compatibility(P, Q) {\n        return Math.min(edge_visibility(P, Q), edge_visibility(Q, P));\n    }\n\n    function compatibility_score(P, Q) {\n        var result = angle_compatibility(P, Q) * scale_compatibility(P, Q) * position_compatibility(P, Q) * visibility_compatibility(P, Q);\n\n        return result;\n    }\n\n    function are_compatible(P, Q) {\n        // console.log('compatibility ' + P.source +' - '+ P.target + ' and ' + Q.source +' '+ Q.target);\n        return compatibility_score(P, Q) >= compatibility_threshold;\n    }\n\n    function compute_compatibility_lists() {\n        for (var e = 0; e < data_edges.length - 1; e++) {\n            for (var oe = e + 1; oe < data_edges.length; oe++) {\n                // don't want any duplicates\n                if (e == oe) continue;else {\n                    if (are_compatible(data_edges[e], data_edges[oe])) {\n                        compatibility_list_for_edge[e].push(oe);\n                        compatibility_list_for_edge[oe].push(e);\n                    }\n                }\n            }\n        }\n    }\n\n    /*** ************************ ***/\n\n    /*** Main Bundling Loop Methods ***/\n    var forcebundle = function forcebundle() {\n        var S = S_initial;\n        var I = I_initial;\n        var P = P_initial;\n\n        initialize_edge_subdivisions();\n        initialize_compatibility_lists();\n        update_edge_divisions(P);\n        compute_compatibility_lists();\n        for (var cycle = 0; cycle < C; cycle++) {\n            for (var iteration = 0; iteration < I; iteration++) {\n                var forces = [];\n                for (var edge = 0; edge < data_edges.length; edge++) {\n                    forces[edge] = apply_resulting_forces_on_subdivision_points(edge, P, S);\n                }\n                for (var e = 0; e < data_edges.length; e++) {\n                    for (var i = 0; i < P + 1; i++) {\n                        subdivision_points_for_edge[e][i].x += forces[e][i].x;\n                        subdivision_points_for_edge[e][i].y += forces[e][i].y;\n                    }\n                }\n            }\n            //prepare for next cycle\n            S = S / 2;\n            P = P * 2;\n            I = I_rate * I;\n\n            update_edge_divisions(P);\n            // console.log('C' + cycle);\n            // console.log('P' + P);\n            // console.log('S' + S);\n        }\n        return subdivision_points_for_edge;\n    };\n    /*** ************************ ***/\n\n    /*** Getters/Setters Methods ***/\n    forcebundle.nodes = function (nl) {\n        if (arguments.length == 0) {\n            return data_nodes;\n        } else {\n            data_nodes = nl;\n        }\n        return forcebundle;\n    };\n\n    forcebundle.edges = function (ll) {\n        if (arguments.length == 0) {\n            return data_edges;\n        } else {\n            data_edges = filter_self_loops(ll); //remove edges to from to the same point\n        }\n        return forcebundle;\n    };\n\n    forcebundle.bundling_stiffness = function (k) {\n        if (arguments.length == 0) {\n            return K;\n        } else {\n            K = k;\n        }\n        return forcebundle;\n    };\n\n    forcebundle.step_size = function (step) {\n        if (arguments.length == 0) {\n            return S_initial;\n        } else {\n            S_initial = step;\n        }\n        return forcebundle;\n    };\n\n    forcebundle.cycles = function (c) {\n        if (arguments.length == 0) {\n            return C;\n        } else {\n            C = c;\n        }\n        return forcebundle;\n    };\n\n    forcebundle.iterations = function (i) {\n        if (arguments.length == 0) {\n            return I_initial;\n        } else {\n            I_initial = i;\n        }\n        return forcebundle;\n    };\n\n    forcebundle.iterations_rate = function (i) {\n        if (arguments.length == 0) {\n            return I_rate;\n        } else {\n            I_rate = i;\n        }\n        return forcebundle;\n    };\n\n    forcebundle.subdivision_points_seed = function (p) {\n        if (arguments.length == 0) {\n            return P;\n        } else {\n            P = p;\n        }\n        return forcebundle;\n    };\n\n    forcebundle.subdivision_rate = function (r) {\n        if (arguments.length == 0) {\n            return P_rate;\n        } else {\n            P_rate = r;\n        }\n        return forcebundle;\n    };\n\n    forcebundle.compatbility_threshold = function (t) {\n        if (arguments.length == 0) {\n            return compatbility_threshold;\n        } else {\n            compatibility_threshold = t;\n        }\n        return forcebundle;\n    };\n\n    /*** ************************ ***/\n\n    return forcebundle;\n};\n\n/**\n * @author kyle / http://nikai.us/\n */\n\n/**\n * Category\n * @param {Object} splitList:\n *   { \n *       other: 1,\n *       1: 2,\n *       2: 3,\n *       3: 4,\n *       4: 5,\n *       5: 6,\n *       6: 7\n *   }\n */\nfunction Category(splitList) {\n    this.splitList = splitList || {\n        other: 1\n    };\n}\n\nCategory.prototype.get = function (count) {\n\n    var splitList = this.splitList;\n\n    var value = splitList['other'];\n\n    for (var i in splitList) {\n        if (count == i) {\n            value = splitList[i];\n            break;\n        }\n    }\n\n    return value;\n};\n\n/**\n * 根据DataSet自动生成对应的splitList\n */\nCategory.prototype.generateByDataSet = function (dataSet, color) {\n    var colors = color || ['rgba(255, 255, 0, 0.8)', 'rgba(253, 98, 104, 0.8)', 'rgba(255, 146, 149, 0.8)', 'rgba(255, 241, 193, 0.8)', 'rgba(110, 176, 253, 0.8)', 'rgba(52, 139, 251, 0.8)', 'rgba(17, 102, 252, 0.8)'];\n    var data = dataSet.get();\n    this.splitList = {};\n    var count = 0;\n    for (var i = 0; i < data.length; i++) {\n        if (this.splitList[data[i].count] === undefined) {\n            this.splitList[data[i].count] = colors[count];\n            count++;\n        }\n        if (count >= colors.length - 1) {\n            break;\n        }\n    }\n\n    this.splitList['other'] = colors[colors.length - 1];\n};\n\nCategory.prototype.getLegend = function (options) {\n    var splitList = this.splitList;\n    var container = document.createElement('div');\n    container.style.cssText = \"background:#fff; padding: 5px; border: 1px solid #ccc;\";\n    var html = '';\n    for (var key in splitList) {\n        html += '<div style=\"line-height: 19px;\" value=\"' + key + '\"><span style=\"vertical-align: -2px; display: inline-block; width: 30px;height: 19px;background:' + splitList[key] + ';\"></span><span style=\"margin-left: 3px;\">' + key + '<span></div>';\n    }\n    container.innerHTML = html;\n    return container;\n};\n\n/**\n * @author kyle / http://nikai.us/\n */\n\n/**\n * Choropleth\n * @param {Object} splitList:\n *       [\n *           {\n *               start: 0,\n *               end: 2,\n *               value: randomColor()\n *           },{\n *               start: 2,\n *               end: 4,\n *               value: randomColor()\n *           },{\n *               start: 4,\n *               value: randomColor()\n *           }\n *       ];\n *\n */\nfunction Choropleth(splitList) {\n    this.splitList = splitList || [{\n        start: 0,\n        value: 'red'\n    }];\n}\n\nChoropleth.prototype.get = function (count) {\n    var splitList = this.splitList;\n\n    var value = false;\n\n    for (var i = 0; i < splitList.length; i++) {\n        if ((splitList[i].start === undefined || splitList[i].start !== undefined && count >= splitList[i].start) && (splitList[i].end === undefined || splitList[i].end !== undefined && count < splitList[i].end)) {\n            value = splitList[i].value;\n            break;\n        }\n    }\n\n    return value;\n};\n\n/**\n * 根据DataSet自动生成对应的splitList\n */\nChoropleth.prototype.generateByDataSet = function (dataSet) {\n\n    var min = dataSet.getMin('count');\n    var max = dataSet.getMax('count');\n\n    this.generateByMinMax(min, max);\n};\n\n/**\n * 根据DataSet自动生成对应的splitList\n */\nChoropleth.prototype.generateByMinMax = function (min, max) {\n    var colors = ['rgba(255, 255, 0, 0.8)', 'rgba(253, 98, 104, 0.8)', 'rgba(255, 146, 149, 0.8)', 'rgba(255, 241, 193, 0.8)', 'rgba(110, 176, 253, 0.8)', 'rgba(52, 139, 251, 0.8)', 'rgba(17, 102, 252, 0.8)'];\n    var splitNum = Number((max - min) / 7);\n    // console.log(splitNum)\n    max = Number(max);\n    var index = Number(min);\n    this.splitList = [];\n    var count = 0;\n\n    while (index < max) {\n        this.splitList.push({\n            start: index,\n            end: index + splitNum,\n            value: colors[count]\n        });\n        count++;\n        index += splitNum;\n        // console.log(index, max)\n    }\n    // console.log('splitNum')\n};\n\nChoropleth.prototype.getLegend = function (options) {\n    var splitList = this.splitList;\n};\n\n/**\n * @author Mofei<http://www.zhuwenlong.com>\n */\n\nvar MapHelper = function () {\n    function MapHelper(id, type, opt) {\n        classCallCheck(this, MapHelper);\n\n        if (!id || !type) {\n            console.warn('id 和 type 为必填项');\n            return false;\n        }\n\n        if (type == 'baidu') {\n            if (!BMap) {\n                console.warn('请先引入百度地图JS API');\n                return false;\n            }\n        } else {\n            console.warn('暂不支持你的地图类型');\n        }\n        this.type = type;\n        var center = opt && opt.center ? opt.center : [106.962497, 38.208726];\n        var zoom = opt && opt.zoom ? opt.zoom : 5;\n        var map = this.map = new BMap.Map(id, {\n            enableMapClick: false\n        });\n        map.centerAndZoom(new BMap.Point(center[0], center[1]), zoom);\n        map.enableScrollWheelZoom(true);\n\n        map.setMapStyle({\n            style: 'light'\n        });\n    }\n\n    createClass(MapHelper, [{\n        key: 'addLayer',\n        value: function addLayer(datas, options) {\n            if (this.type == 'baidu') {\n                return new mapv.baiduMapLayer(this.map, dataSet, options);\n            }\n        }\n    }, {\n        key: 'getMap',\n        value: function getMap() {\n            return this.map;\n        }\n    }]);\n    return MapHelper;\n}();\n\n/**\n * 一直覆盖在当前地图视野的Canvas对象\n *\n * @author nikai (@胖嘟嘟的骨头, nikai@baidu.com)\n *\n * @param \n * {\n *     map 地图实例对象\n * }\n */\n\nfunction CanvasLayer(options) {\n    this.options = options || {};\n    this.paneName = this.options.paneName || 'mapPane';\n    this.context = this.options.context || '2d';\n    this.zIndex = this.options.zIndex || 0;\n    this.mixBlendMode = this.options.mixBlendMode || null;\n    this.enableMassClear = this.options.enableMassClear;\n    this._map = options.map;\n    this._lastDrawTime = null;\n    this.show();\n}\n\nvar global$3 = typeof window === 'undefined' ? {} : window;\n\nif (global$3.BMap) {\n\n    CanvasLayer.prototype = new BMap.Overlay();\n\n    CanvasLayer.prototype.initialize = function (map) {\n        this._map = map;\n        var canvas = this.canvas = document.createElement(\"canvas\");\n        canvas.style.cssText = \"position:absolute;\" + \"left:0;\" + \"top:0;\" + \"z-index:\" + this.zIndex + \";user-select:none;\";\n        canvas.style.mixBlendMode = this.mixBlendMode;\n        this.adjustSize();\n        map.getPanes()[this.paneName].appendChild(canvas);\n        var that = this;\n        map.addEventListener('resize', function () {\n            that.adjustSize();\n            that._draw();\n        });\n        return this.canvas;\n    };\n\n    CanvasLayer.prototype.adjustSize = function () {\n        var size = this._map.getSize();\n        var canvas = this.canvas;\n\n        var devicePixelRatio = this.devicePixelRatio = global$3.devicePixelRatio || 1;\n\n        canvas.width = size.width * devicePixelRatio;\n        canvas.height = size.height * devicePixelRatio;\n        if (this.context == '2d') {\n            canvas.getContext(this.context).scale(devicePixelRatio, devicePixelRatio);\n        }\n\n        canvas.style.width = size.width + \"px\";\n        canvas.style.height = size.height + \"px\";\n    };\n\n    CanvasLayer.prototype.draw = function () {\n        var self = this;\n        clearTimeout(self.timeoutID);\n        self.timeoutID = setTimeout(function () {\n            self._draw();\n        }, 15);\n    };\n\n    CanvasLayer.prototype._draw = function () {\n        var map = this._map;\n        var size = map.getSize();\n        var center = map.getCenter();\n        if (center) {\n            var pixel = map.pointToOverlayPixel(center);\n            this.canvas.style.left = pixel.x - size.width / 2 + 'px';\n            this.canvas.style.top = pixel.y - size.height / 2 + 'px';\n            this.dispatchEvent('draw');\n            this.options.update && this.options.update.call(this);\n        }\n    };\n\n    CanvasLayer.prototype.getContainer = function () {\n        return this.canvas;\n    };\n\n    CanvasLayer.prototype.show = function () {\n        if (!this.canvas) {\n            this._map.addOverlay(this);\n        }\n        this.canvas.style.display = \"block\";\n    };\n\n    CanvasLayer.prototype.hide = function () {\n        this.canvas.style.display = \"none\";\n        //this._map.removeOverlay(this);\n    };\n\n    CanvasLayer.prototype.setZIndex = function (zIndex) {\n        this.zIndex = zIndex;\n        this.canvas.style.zIndex = this.zIndex;\n    };\n\n    CanvasLayer.prototype.getZIndex = function () {\n        return this.zIndex;\n    };\n}\n\n/**\n * Tween.js - Licensed under the MIT license\n * https://github.com/tweenjs/tween.js\n * ----------------------------------------------\n *\n * See https://github.com/tweenjs/tween.js/graphs/contributors for the full list of contributors.\n * Thank you all, you're awesome!\n */\n\nvar TWEEN = TWEEN || function () {\n\n    var _tweens = [];\n\n    return {\n\n        getAll: function getAll() {\n\n            return _tweens;\n        },\n\n        removeAll: function removeAll() {\n\n            _tweens = [];\n        },\n\n        add: function add(tween) {\n\n            _tweens.push(tween);\n        },\n\n        remove: function remove(tween) {\n\n            var i = _tweens.indexOf(tween);\n\n            if (i !== -1) {\n                _tweens.splice(i, 1);\n            }\n        },\n\n        update: function update(time, preserve) {\n\n            if (_tweens.length === 0) {\n                return false;\n            }\n\n            var i = 0;\n\n            time = time !== undefined ? time : TWEEN.now();\n\n            while (i < _tweens.length) {\n\n                if (_tweens[i].update(time) || preserve) {\n                    i++;\n                } else {\n                    _tweens.splice(i, 1);\n                }\n            }\n\n            return true;\n        }\n    };\n}();\n\n// Include a performance.now polyfill.\n// In node.js, use process.hrtime.\nif (typeof window === 'undefined' && typeof process !== 'undefined') {\n    TWEEN.now = function () {\n        var time = process.hrtime();\n\n        // Convert [seconds, nanoseconds] to milliseconds.\n        return time[0] * 1000 + time[1] / 1000000;\n    };\n}\n// In a browser, use window.performance.now if it is available.\nelse if (typeof window !== 'undefined' && window.performance !== undefined && window.performance.now !== undefined) {\n        // This must be bound, because directly assigning this function\n        // leads to an invocation exception in Chrome.\n        TWEEN.now = window.performance.now.bind(window.performance);\n    }\n    // Use Date.now if it is available.\n    else if (Date.now !== undefined) {\n            TWEEN.now = Date.now;\n        }\n        // Otherwise, use 'new Date().getTime()'.\n        else {\n                TWEEN.now = function () {\n                    return new Date().getTime();\n                };\n            }\n\nTWEEN.Tween = function (object) {\n\n    var _object = object;\n    var _valuesStart = {};\n    var _valuesEnd = {};\n    var _valuesStartRepeat = {};\n    var _duration = 1000;\n    var _repeat = 0;\n    var _repeatDelayTime;\n    var _yoyo = false;\n    var _isPlaying = false;\n    var _reversed = false;\n    var _delayTime = 0;\n    var _startTime = null;\n    var _easingFunction = TWEEN.Easing.Linear.None;\n    var _interpolationFunction = TWEEN.Interpolation.Linear;\n    var _chainedTweens = [];\n    var _onStartCallback = null;\n    var _onStartCallbackFired = false;\n    var _onUpdateCallback = null;\n    var _onCompleteCallback = null;\n    var _onStopCallback = null;\n\n    this.to = function (properties, duration) {\n\n        _valuesEnd = properties;\n\n        if (duration !== undefined) {\n            _duration = duration;\n        }\n\n        return this;\n    };\n\n    this.start = function (time) {\n\n        TWEEN.add(this);\n\n        _isPlaying = true;\n\n        _onStartCallbackFired = false;\n\n        _startTime = time !== undefined ? time : TWEEN.now();\n        _startTime += _delayTime;\n\n        for (var property in _valuesEnd) {\n\n            // Check if an Array was provided as property value\n            if (_valuesEnd[property] instanceof Array) {\n\n                if (_valuesEnd[property].length === 0) {\n                    continue;\n                }\n\n                // Create a local copy of the Array with the start value at the front\n                _valuesEnd[property] = [_object[property]].concat(_valuesEnd[property]);\n            }\n\n            // If `to()` specifies a property that doesn't exist in the source object,\n            // we should not set that property in the object\n            if (_object[property] === undefined) {\n                continue;\n            }\n\n            // Save the starting value.\n            _valuesStart[property] = _object[property];\n\n            if (_valuesStart[property] instanceof Array === false) {\n                _valuesStart[property] *= 1.0; // Ensures we're using numbers, not strings\n            }\n\n            _valuesStartRepeat[property] = _valuesStart[property] || 0;\n        }\n\n        return this;\n    };\n\n    this.stop = function () {\n\n        if (!_isPlaying) {\n            return this;\n        }\n\n        TWEEN.remove(this);\n        _isPlaying = false;\n\n        if (_onStopCallback !== null) {\n            _onStopCallback.call(_object, _object);\n        }\n\n        this.stopChainedTweens();\n        return this;\n    };\n\n    this.end = function () {\n\n        this.update(_startTime + _duration);\n        return this;\n    };\n\n    this.stopChainedTweens = function () {\n\n        for (var i = 0, numChainedTweens = _chainedTweens.length; i < numChainedTweens; i++) {\n            _chainedTweens[i].stop();\n        }\n    };\n\n    this.delay = function (amount) {\n\n        _delayTime = amount;\n        return this;\n    };\n\n    this.repeat = function (times) {\n\n        _repeat = times;\n        return this;\n    };\n\n    this.repeatDelay = function (amount) {\n\n        _repeatDelayTime = amount;\n        return this;\n    };\n\n    this.yoyo = function (yoyo) {\n\n        _yoyo = yoyo;\n        return this;\n    };\n\n    this.easing = function (easing) {\n\n        _easingFunction = easing;\n        return this;\n    };\n\n    this.interpolation = function (interpolation) {\n\n        _interpolationFunction = interpolation;\n        return this;\n    };\n\n    this.chain = function () {\n\n        _chainedTweens = arguments;\n        return this;\n    };\n\n    this.onStart = function (callback) {\n\n        _onStartCallback = callback;\n        return this;\n    };\n\n    this.onUpdate = function (callback) {\n\n        _onUpdateCallback = callback;\n        return this;\n    };\n\n    this.onComplete = function (callback) {\n\n        _onCompleteCallback = callback;\n        return this;\n    };\n\n    this.onStop = function (callback) {\n\n        _onStopCallback = callback;\n        return this;\n    };\n\n    this.update = function (time) {\n\n        var property;\n        var elapsed;\n        var value;\n\n        if (time < _startTime) {\n            return true;\n        }\n\n        if (_onStartCallbackFired === false) {\n\n            if (_onStartCallback !== null) {\n                _onStartCallback.call(_object, _object);\n            }\n\n            _onStartCallbackFired = true;\n        }\n\n        elapsed = (time - _startTime) / _duration;\n        elapsed = elapsed > 1 ? 1 : elapsed;\n\n        value = _easingFunction(elapsed);\n\n        for (property in _valuesEnd) {\n\n            // Don't update properties that do not exist in the source object\n            if (_valuesStart[property] === undefined) {\n                continue;\n            }\n\n            var start = _valuesStart[property] || 0;\n            var end = _valuesEnd[property];\n\n            if (end instanceof Array) {\n\n                _object[property] = _interpolationFunction(end, value);\n            } else {\n\n                // Parses relative end values with start as base (e.g.: +10, -3)\n                if (typeof end === 'string') {\n\n                    if (end.charAt(0) === '+' || end.charAt(0) === '-') {\n                        end = start + parseFloat(end);\n                    } else {\n                        end = parseFloat(end);\n                    }\n                }\n\n                // Protect against non numeric properties.\n                if (typeof end === 'number') {\n                    _object[property] = start + (end - start) * value;\n                }\n            }\n        }\n\n        if (_onUpdateCallback !== null) {\n            _onUpdateCallback.call(_object, value);\n        }\n\n        if (elapsed === 1) {\n\n            if (_repeat > 0) {\n\n                if (isFinite(_repeat)) {\n                    _repeat--;\n                }\n\n                // Reassign starting values, restart by making startTime = now\n                for (property in _valuesStartRepeat) {\n\n                    if (typeof _valuesEnd[property] === 'string') {\n                        _valuesStartRepeat[property] = _valuesStartRepeat[property] + parseFloat(_valuesEnd[property]);\n                    }\n\n                    if (_yoyo) {\n                        var tmp = _valuesStartRepeat[property];\n\n                        _valuesStartRepeat[property] = _valuesEnd[property];\n                        _valuesEnd[property] = tmp;\n                    }\n\n                    _valuesStart[property] = _valuesStartRepeat[property];\n                }\n\n                if (_yoyo) {\n                    _reversed = !_reversed;\n                }\n\n                if (_repeatDelayTime !== undefined) {\n                    _startTime = time + _repeatDelayTime;\n                } else {\n                    _startTime = time + _delayTime;\n                }\n\n                return true;\n            } else {\n\n                if (_onCompleteCallback !== null) {\n\n                    _onCompleteCallback.call(_object, _object);\n                }\n\n                for (var i = 0, numChainedTweens = _chainedTweens.length; i < numChainedTweens; i++) {\n                    // Make the chained tweens start exactly at the time they should,\n                    // even if the `update()` method was called way past the duration of the tween\n                    _chainedTweens[i].start(_startTime + _duration);\n                }\n\n                return false;\n            }\n        }\n\n        return true;\n    };\n};\n\nTWEEN.Easing = {\n\n    Linear: {\n\n        None: function None(k) {\n\n            return k;\n        }\n\n    },\n\n    Quadratic: {\n\n        In: function In(k) {\n\n            return k * k;\n        },\n\n        Out: function Out(k) {\n\n            return k * (2 - k);\n        },\n\n        InOut: function InOut(k) {\n\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n\n            return -0.5 * (--k * (k - 2) - 1);\n        }\n\n    },\n\n    Cubic: {\n\n        In: function In(k) {\n\n            return k * k * k;\n        },\n\n        Out: function Out(k) {\n\n            return --k * k * k + 1;\n        },\n\n        InOut: function InOut(k) {\n\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n\n            return 0.5 * ((k -= 2) * k * k + 2);\n        }\n\n    },\n\n    Quartic: {\n\n        In: function In(k) {\n\n            return k * k * k * k;\n        },\n\n        Out: function Out(k) {\n\n            return 1 - --k * k * k * k;\n        },\n\n        InOut: function InOut(k) {\n\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        }\n\n    },\n\n    Quintic: {\n\n        In: function In(k) {\n\n            return k * k * k * k * k;\n        },\n\n        Out: function Out(k) {\n\n            return --k * k * k * k * k + 1;\n        },\n\n        InOut: function InOut(k) {\n\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        }\n\n    },\n\n    Sinusoidal: {\n\n        In: function In(k) {\n\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n\n        Out: function Out(k) {\n\n            return Math.sin(k * Math.PI / 2);\n        },\n\n        InOut: function InOut(k) {\n\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        }\n\n    },\n\n    Exponential: {\n\n        In: function In(k) {\n\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n\n        Out: function Out(k) {\n\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n\n        InOut: function InOut(k) {\n\n            if (k === 0) {\n                return 0;\n            }\n\n            if (k === 1) {\n                return 1;\n            }\n\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        }\n\n    },\n\n    Circular: {\n\n        In: function In(k) {\n\n            return 1 - Math.sqrt(1 - k * k);\n        },\n\n        Out: function Out(k) {\n\n            return Math.sqrt(1 - --k * k);\n        },\n\n        InOut: function InOut(k) {\n\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        }\n\n    },\n\n    Elastic: {\n\n        In: function In(k) {\n\n            if (k === 0) {\n                return 0;\n            }\n\n            if (k === 1) {\n                return 1;\n            }\n\n            return -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n        },\n\n        Out: function Out(k) {\n\n            if (k === 0) {\n                return 0;\n            }\n\n            if (k === 1) {\n                return 1;\n            }\n\n            return Math.pow(2, -10 * k) * Math.sin((k - 0.1) * 5 * Math.PI) + 1;\n        },\n\n        InOut: function InOut(k) {\n\n            if (k === 0) {\n                return 0;\n            }\n\n            if (k === 1) {\n                return 1;\n            }\n\n            k *= 2;\n\n            if (k < 1) {\n                return -0.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n            }\n\n            return 0.5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\n        }\n\n    },\n\n    Back: {\n\n        In: function In(k) {\n\n            var s = 1.70158;\n\n            return k * k * ((s + 1) * k - s);\n        },\n\n        Out: function Out(k) {\n\n            var s = 1.70158;\n\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n\n        InOut: function InOut(k) {\n\n            var s = 1.70158 * 1.525;\n\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        }\n\n    },\n\n    Bounce: {\n\n        In: function In(k) {\n\n            return 1 - TWEEN.Easing.Bounce.Out(1 - k);\n        },\n\n        Out: function Out(k) {\n\n            if (k < 1 / 2.75) {\n                return 7.5625 * k * k;\n            } else if (k < 2 / 2.75) {\n                return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n            } else if (k < 2.5 / 2.75) {\n                return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n            } else {\n                return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n            }\n        },\n\n        InOut: function InOut(k) {\n\n            if (k < 0.5) {\n                return TWEEN.Easing.Bounce.In(k * 2) * 0.5;\n            }\n\n            return TWEEN.Easing.Bounce.Out(k * 2 - 1) * 0.5 + 0.5;\n        }\n\n    }\n\n};\n\nTWEEN.Interpolation = {\n\n    Linear: function Linear(v, k) {\n\n        var m = v.length - 1;\n        var f = m * k;\n        var i = Math.floor(f);\n        var fn = TWEEN.Interpolation.Utils.Linear;\n\n        if (k < 0) {\n            return fn(v[0], v[1], f);\n        }\n\n        if (k > 1) {\n            return fn(v[m], v[m - 1], m - f);\n        }\n\n        return fn(v[i], v[i + 1 > m ? m : i + 1], f - i);\n    },\n\n    Bezier: function Bezier(v, k) {\n\n        var b = 0;\n        var n = v.length - 1;\n        var pw = Math.pow;\n        var bn = TWEEN.Interpolation.Utils.Bernstein;\n\n        for (var i = 0; i <= n; i++) {\n            b += pw(1 - k, n - i) * pw(k, i) * v[i] * bn(n, i);\n        }\n\n        return b;\n    },\n\n    CatmullRom: function CatmullRom(v, k) {\n\n        var m = v.length - 1;\n        var f = m * k;\n        var i = Math.floor(f);\n        var fn = TWEEN.Interpolation.Utils.CatmullRom;\n\n        if (v[0] === v[m]) {\n\n            if (k < 0) {\n                i = Math.floor(f = m * (1 + k));\n            }\n\n            return fn(v[(i - 1 + m) % m], v[i], v[(i + 1) % m], v[(i + 2) % m], f - i);\n        } else {\n\n            if (k < 0) {\n                return v[0] - (fn(v[0], v[0], v[1], v[1], -f) - v[0]);\n            }\n\n            if (k > 1) {\n                return v[m] - (fn(v[m], v[m], v[m - 1], v[m - 1], f - m) - v[m]);\n            }\n\n            return fn(v[i ? i - 1 : 0], v[i], v[m < i + 1 ? m : i + 1], v[m < i + 2 ? m : i + 2], f - i);\n        }\n    },\n\n    Utils: {\n\n        Linear: function Linear(p0, p1, t) {\n\n            return (p1 - p0) * t + p0;\n        },\n\n        Bernstein: function Bernstein(n, i) {\n\n            var fc = TWEEN.Interpolation.Utils.Factorial;\n\n            return fc(n) / fc(i) / fc(n - i);\n        },\n\n        Factorial: function () {\n\n            var a = [1];\n\n            return function (n) {\n\n                var s = 1;\n\n                if (a[n]) {\n                    return a[n];\n                }\n\n                for (var i = n; i > 1; i--) {\n                    s *= i;\n                }\n\n                a[n] = s;\n                return s;\n            };\n        }(),\n\n        CatmullRom: function CatmullRom(p0, p1, p2, p3, t) {\n\n            var v0 = (p2 - p0) * 0.5;\n            var v1 = (p3 - p1) * 0.5;\n            var t2 = t * t;\n            var t3 = t * t2;\n\n            return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n        }\n\n    }\n\n};\n\n/**\n * @author Mofei Zhu<mapv@zhuwenlong.com>\n * This file is to draw text\n */\n\nvar drawText = {\n    draw: function draw(context, dataSet, options) {\n\n        var data = dataSet instanceof DataSet ? dataSet.get() : dataSet;\n        context.save();\n\n        // set from options\n        for (var key in options) {\n            context[key] = options[key];\n        }\n\n        var offset = options.offset || {\n            x: 0,\n            y: 0\n        };\n\n        var rects = [];\n\n        var size = options._size || options.size;\n        if (size) {\n            context.font = \"bold \" + size + \"px Arial\";\n        } else {\n            size = 12;\n        }\n\n        var textKey = options.textKey || 'text';\n\n        if (!options.textAlign) {\n            context.textAlign = 'center';\n        }\n\n        if (!options.textBaseline) {\n            context.textBaseline = 'middle';\n        }\n\n        if (options.avoid) {\n            // 标注避让\n            for (var i = 0, len = data.length; i < len; i++) {\n                var coordinates = data[i].geometry._coordinates || data[i].geometry.coordinates;\n                var x = coordinates[0] + offset.x;\n                var y = coordinates[1] + offset.y;\n                var text = data[i][textKey];\n                var textWidth = context.measureText(text).width;\n\n                // 根据文本宽度和高度调整x，y位置，使得绘制文本时候坐标点在文本中心点，这个计算出的是左上角坐标\n                var px = x - textWidth / 2;\n                var py = y - size / 2;\n\n                var rect = {\n                    sw: {\n                        x: px,\n                        y: py + size\n                    },\n                    ne: {\n                        x: px + textWidth,\n                        y: py\n                    }\n                };\n\n                if (!hasOverlay(rects, rect)) {\n                    rects.push(rect);\n                    px = px + textWidth / 2;\n                    py = py + size / 2;\n                    context.fillText(text, px, py);\n                }\n            }\n        } else {\n            for (var i = 0, len = data.length; i < len; i++) {\n                var coordinates = data[i].geometry._coordinates || data[i].geometry.coordinates;\n                var x = coordinates[0] + offset.x;\n                var y = coordinates[1] + offset.y;\n                var text = data[i][textKey];\n                context.fillText(text, x, y);\n            }\n        }\n\n        context.restore();\n    }\n\n    /*\n     *  当前文字区域和已有的文字区域是否有重叠部分\n     */\n};function hasOverlay(rects, overlay) {\n    for (var i = 0; i < rects.length; i++) {\n        if (isRectOverlay(rects[i], overlay)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n//判断2个矩形是否有重叠部分\nfunction isRectOverlay(rect1, rect2) {\n    //minx、miny 2个矩形右下角最小的x和y\n    //maxx、maxy 2个矩形左上角最大的x和y\n    var minx = Math.min(rect1.ne.x, rect2.ne.x);\n    var miny = Math.min(rect1.sw.y, rect2.sw.y);\n    var maxx = Math.max(rect1.sw.x, rect2.sw.x);\n    var maxy = Math.max(rect1.ne.y, rect2.ne.y);\n    if (minx > maxx && miny > maxy) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * @author Mofei Zhu<mapv@zhuwenlong.com>\n * This file is to draw text\n */\n\nvar drawIcon = {\n    draw: function draw(context, dataSet, options) {\n        var data = dataSet instanceof DataSet ? dataSet.get() : dataSet;\n\n        context.fillStyle = 'white';\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n\n        var offset = options.offset || {\n            x: 0,\n            y: 0\n        };\n\n        // set from options\n        // for (var key in options) {\n        //     context[key] = options[key];\n        // }\n        // console.log(data)\n        for (var i = 0, len = data.length; i < len; i++) {\n\n            if (data[i].geometry) {\n                var deg = data[i].deg || options.deg;\n                var icon = data[i].icon || options.icon;\n                var coordinates = data[i].geometry._coordinates || data[i].geometry.coordinates;\n                var x = coordinates[0];\n                var y = coordinates[1];\n                if (deg) {\n                    context.save();\n                    context.translate(x, y);\n                    context.rotate(deg * Math.PI / 180);\n                    context.translate(-x, -y);\n                }\n                var width = options._width || options.width || icon.width;\n                var height = options._height || options.height || icon.height;\n                x = x - width / 2 + offset.x;\n                y = y - height / 2 + offset.y;\n                if (options.sx && options.sy && options.swidth && options.sheight && options.width && options.height) {\n                    context.drawImage(icon, options.sx, options.sy, options.swidth, options.sheight, x, y, width, height);\n                } else if (options.width && options.height) {\n                    context.drawImage(icon, x, y, width, height);\n                } else {\n                    context.drawImage(icon, x, y);\n                }\n\n                if (deg) {\n                    context.restore();\n                }\n            }\n        }\n    }\n};\n\n/**\n * @author kyle / http://nikai.us/\n */\n\nif (typeof window !== 'undefined') {\n    requestAnimationFrame(animate);\n}\n\nfunction animate(time) {\n    requestAnimationFrame(animate);\n    TWEEN.update(time);\n}\n\nvar BaseLayer = function () {\n    function BaseLayer(map, dataSet, options) {\n        classCallCheck(this, BaseLayer);\n\n        if (!(dataSet instanceof DataSet)) {\n            dataSet = new DataSet(dataSet);\n        }\n\n        this.dataSet = dataSet;\n        this.map = map;\n    }\n\n    createClass(BaseLayer, [{\n        key: \"getDefaultContextConfig\",\n        value: function getDefaultContextConfig() {\n            return {\n                globalAlpha: 1,\n                globalCompositeOperation: 'source-over',\n                imageSmoothingEnabled: true,\n                strokeStyle: '#000000',\n                fillStyle: '#000000',\n                shadowOffsetX: 0,\n                shadowOffsetY: 0,\n                shadowBlur: 0,\n                shadowColor: 'rgba(0, 0, 0, 0)',\n                lineWidth: 1,\n                lineCap: 'butt',\n                lineJoin: 'miter',\n                miterLimit: 10,\n                lineDashOffset: 0,\n                font: '10px sans-serif',\n                textAlign: 'start',\n                textBaseline: 'alphabetic'\n            };\n        }\n    }, {\n        key: \"initDataRange\",\n        value: function initDataRange(options) {\n            var self = this;\n            self.intensity = new Intensity({\n                maxSize: self.options.maxSize,\n                minSize: self.options.minSize,\n                gradient: self.options.gradient,\n                max: self.options.max || this.dataSet.getMax('count')\n            });\n            self.category = new Category(self.options.splitList);\n            self.choropleth = new Choropleth(self.options.splitList);\n            if (self.options.splitList === undefined) {\n                self.category.generateByDataSet(this.dataSet, self.options.color);\n            }\n            if (self.options.splitList === undefined) {\n                var min = self.options.min || this.dataSet.getMin('count');\n                var max = self.options.max || this.dataSet.getMax('count');\n                self.choropleth.generateByMinMax(min, max);\n            }\n        }\n    }, {\n        key: \"getLegend\",\n        value: function getLegend(options) {\n            var draw = this.options.draw;\n            var legend = null;\n            var self = this;\n            if (self.options.draw == 'intensity' || self.options.draw == 'heatmap') {\n                return this.intensity.getLegend(options);\n            } else if (self.options.draw == 'category') {\n                return this.category.getLegend(options);\n            }\n        }\n    }, {\n        key: \"processData\",\n        value: function processData(data) {\n            var self = this;\n            var draw = self.options.draw;\n            if (draw == 'bubble' || draw == 'intensity' || draw == 'category' || draw == 'choropleth' || draw == 'simple') {\n\n                for (var i = 0; i < data.length; i++) {\n                    var item = data[i];\n\n                    if (self.options.draw == 'bubble') {\n                        data[i]._size = self.intensity.getSize(item.count);\n                    } else {\n                        data[i]._size = undefined;\n                    }\n\n                    var styleType = '_fillStyle';\n\n                    if (data[i].geometry.type === 'LineString' || self.options.styleType === 'stroke') {\n                        styleType = '_strokeStyle';\n                    }\n\n                    if (self.options.draw == 'intensity') {\n                        data[i][styleType] = self.intensity.getColor(item.count);\n                    } else if (self.options.draw == 'category') {\n                        data[i][styleType] = self.category.get(item.count);\n                    } else if (self.options.draw == 'choropleth') {\n                        data[i][styleType] = self.choropleth.get(item.count);\n                    }\n                }\n            }\n        }\n    }, {\n        key: \"isEnabledTime\",\n        value: function isEnabledTime() {\n\n            var animationOptions = this.options.animation;\n\n            var flag = animationOptions && !(animationOptions.enabled === false);\n\n            return flag;\n        }\n    }, {\n        key: \"argCheck\",\n        value: function argCheck(options) {\n            if (options.draw == 'heatmap') {\n                if (options.strokeStyle) {\n                    console.warn('[heatmap] options.strokeStyle is discard, pleause use options.strength [eg: options.strength = 0.1]');\n                }\n            }\n        }\n    }, {\n        key: \"drawContext\",\n        value: function drawContext(context, dataSet, options, nwPixel) {\n            var self = this;\n            switch (self.options.draw) {\n                case 'heatmap':\n                    drawHeatmap.draw(context, dataSet, self.options);\n                    break;\n                case 'grid':\n                case 'honeycomb':\n                    self.options.offset = {\n                        x: nwPixel.x,\n                        y: nwPixel.y\n                    };\n                    if (self.options.draw == 'grid') {\n                        drawGrid.draw(context, dataSet, self.options);\n                    } else {\n                        drawHoneycomb.draw(context, dataSet, self.options);\n                    }\n                    break;\n                case 'text':\n                    drawText.draw(context, dataSet, self.options);\n                    break;\n                case 'icon':\n                    drawIcon.draw(context, dataSet, self.options);\n                    break;\n                case 'clip':\n                    context.save();\n                    context.fillStyle = self.options.fillStyle || 'rgba(0, 0, 0, 0.5)';\n                    context.fillRect(0, 0, context.canvas.width, context.canvas.height);\n                    drawSimple.draw(context, dataSet, self.options);\n                    context.beginPath();\n                    pathSimple.drawDataSet(context, dataSet, self.options);\n                    context.clip();\n                    clear(context);\n                    context.restore();\n                    break;\n                default:\n                    if (self.options.context == \"webgl\") {\n                        webglDrawSimple.draw(self.canvasLayer.canvas.getContext('webgl'), dataSet, self.options);\n                    } else {\n                        drawSimple.draw(context, dataSet, self.options);\n                    }\n            }\n        }\n    }, {\n        key: \"isPointInPath\",\n        value: function isPointInPath(context, pixel) {\n            var context = this.canvasLayer.canvas.getContext(this.context);\n            var data = this.dataSet.get();\n            for (var i = 0; i < data.length; i++) {\n                context.beginPath();\n                pathSimple.draw(context, data[i], this.options);\n                var x = pixel.x * this.canvasLayer.devicePixelRatio;\n                var y = pixel.y * this.canvasLayer.devicePixelRatio;\n                if (context.isPointInPath(x, y) || context.isPointInStroke(x, y)) {\n                    return data[i];\n                }\n            }\n        }\n    }, {\n        key: \"clickEvent\",\n        value: function clickEvent(pixel, e) {\n\n            var dataItem = this.isPointInPath(this.getContext(), pixel);\n\n            if (dataItem) {\n                this.options.methods.click(dataItem, e);\n            } else {\n                this.options.methods.click(null, e);\n            }\n        }\n    }, {\n        key: \"mousemoveEvent\",\n        value: function mousemoveEvent(pixel, e) {\n            var dataItem = this.isPointInPath(this.getContext(), pixel);\n            if (dataItem) {\n                this.options.methods.mousemove(dataItem, e);\n            } else {\n                this.options.methods.mousemove(null, e);\n            }\n        }\n\n        /**\n         * obj.options\n         */\n\n    }, {\n        key: \"update\",\n        value: function update(obj, isDraw) {\n            var self = this;\n            var _options = obj.options;\n            var options = self.options;\n            for (var i in _options) {\n                options[i] = _options[i];\n            }\n            self.init(options);\n            if (isDraw !== false) {\n                self.draw();\n            }\n        }\n    }, {\n        key: \"setOptions\",\n        value: function setOptions(options) {\n            var self = this;\n            self.dataSet.reset();\n            // console.log('xxx1')\n            self.init(options);\n            // console.log('xxx')\n            self.draw();\n        }\n    }, {\n        key: \"set\",\n        value: function set$$1(obj) {\n            var self = this;\n            var ctx = this.getContext();\n            var conf = this.getDefaultContextConfig();\n            for (var i in conf) {\n                ctx[i] = conf[i];\n            }\n            self.init(obj.options);\n            self.draw();\n        }\n    }, {\n        key: \"destroy\",\n        value: function destroy() {\n            this.unbindEvent();\n            this.hide();\n        }\n    }, {\n        key: \"initAnimator\",\n        value: function initAnimator() {\n            var self = this;\n            var animationOptions = self.options.animation;\n\n            if (self.options.draw == 'time' || self.isEnabledTime()) {\n\n                if (!animationOptions.stepsRange) {\n                    animationOptions.stepsRange = {\n                        start: this.dataSet.getMin('time') || 0,\n                        end: this.dataSet.getMax('time') || 0\n                    };\n                }\n\n                this.steps = { step: animationOptions.stepsRange.start };\n                self.animator = new TWEEN.Tween(this.steps).onUpdate(function () {\n                    self._canvasUpdate(this.step);\n                }).repeat(Infinity);\n\n                this.addAnimatorEvent();\n\n                var duration = animationOptions.duration * 1000 || 5000;\n\n                self.animator.to({ step: animationOptions.stepsRange.end }, duration);\n                self.animator.start();\n            } else {\n                self.animator && self.animator.stop();\n            }\n        }\n    }, {\n        key: \"addAnimatorEvent\",\n        value: function addAnimatorEvent() {}\n    }, {\n        key: \"animatorMovestartEvent\",\n        value: function animatorMovestartEvent() {\n            var animationOptions = this.options.animation;\n            if (this.isEnabledTime() && this.animator) {\n                this.steps.step = animationOptions.stepsRange.start;\n                this.animator.stop();\n            }\n        }\n    }, {\n        key: \"animatorMoveendEvent\",\n        value: function animatorMoveendEvent() {\n            if (this.isEnabledTime() && this.animator) {\n                this.animator.start();\n            }\n        }\n    }]);\n    return BaseLayer;\n}();\n\nvar AnimationLayer = function (_BaseLayer) {\n    inherits(AnimationLayer, _BaseLayer);\n\n    function AnimationLayer(map, dataSet, options) {\n        classCallCheck(this, AnimationLayer);\n\n        var _this = possibleConstructorReturn(this, (AnimationLayer.__proto__ || Object.getPrototypeOf(AnimationLayer)).call(this, map, dataSet, options));\n\n        _this.map = map;\n        _this.options = options || {};\n        _this.dataSet = dataSet;\n\n        var canvasLayer = new CanvasLayer({\n            map: map,\n            zIndex: _this.options.zIndex,\n            update: _this._canvasUpdate.bind(_this)\n        });\n\n        _this.init(_this.options);\n\n        _this.canvasLayer = canvasLayer;\n        _this.transferToMercator();\n        var self = _this;\n        dataSet.on('change', function () {\n            self.transferToMercator();\n            canvasLayer.draw();\n        });\n        _this.ctx = canvasLayer.canvas.getContext('2d');\n\n        _this.start();\n        return _this;\n    }\n\n    createClass(AnimationLayer, [{\n        key: \"draw\",\n        value: function draw() {\n            this.canvasLayer.draw();\n        }\n    }, {\n        key: \"init\",\n        value: function init(options) {\n\n            var self = this;\n            self.options = options;\n            this.initDataRange(options);\n            this.context = self.options.context || '2d';\n\n            if (self.options.zIndex) {\n                this.canvasLayer && this.canvasLayer.setZIndex(self.options.zIndex);\n            }\n\n            if (self.options.max) {\n                this.intensity.setMax(self.options.max);\n            }\n\n            if (self.options.min) {\n                this.intensity.setMin(self.options.min);\n            }\n\n            this.initAnimator();\n        }\n\n        // 经纬度左边转换为墨卡托坐标\n\n    }, {\n        key: \"transferToMercator\",\n        value: function transferToMercator() {\n            var projection = this.map.getMapType().getProjection();\n\n            if (this.options.coordType !== 'bd09mc') {\n                var data = this.dataSet.get();\n                data = this.dataSet.transferCoordinate(data, function (coordinates) {\n                    var pixel = projection.lngLatToPoint({\n                        lng: coordinates[0],\n                        lat: coordinates[1]\n                    });\n                    return [pixel.x, pixel.y];\n                }, 'coordinates', 'coordinates_mercator');\n                this.dataSet._set(data);\n            }\n        }\n    }, {\n        key: \"_canvasUpdate\",\n        value: function _canvasUpdate() {\n            var ctx = this.ctx;\n            if (!ctx) {\n                return;\n            }\n            //clear(ctx);\n            var map = this.map;\n            var zoomUnit = Math.pow(2, 18 - map.getZoom());\n            var projection = map.getMapType().getProjection();\n\n            var mcCenter = projection.lngLatToPoint(map.getCenter());\n            var nwMc = new BMap.Pixel(mcCenter.x - map.getSize().width / 2 * zoomUnit, mcCenter.y + map.getSize().height / 2 * zoomUnit); //左上角墨卡托坐标\n\n            clear(ctx);\n\n            var dataGetOptions = {\n                fromColumn: this.options.coordType == 'bd09mc' ? 'coordinates' : 'coordinates_mercator',\n                transferCoordinate: function transferCoordinate(coordinate) {\n                    if (!coordinate) {\n                        return;\n                    }\n                    var x = (coordinate[0] - nwMc.x) / zoomUnit;\n                    var y = (nwMc.y - coordinate[1]) / zoomUnit;\n                    return [x, y];\n                }\n            };\n\n            this.data = this.dataSet.get(dataGetOptions);\n\n            this.processData(this.data);\n\n            this.drawAnimation();\n        }\n    }, {\n        key: \"drawAnimation\",\n        value: function drawAnimation() {\n            var ctx = this.ctx;\n            var data = this.data;\n            if (!data) {\n                return;\n            }\n\n            ctx.save();\n            ctx.globalCompositeOperation = 'destination-out';\n            ctx.fillStyle = 'rgba(0, 0, 0, .1)';\n            ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n            ctx.restore();\n\n            ctx.save();\n            if (this.options.shadowColor) {\n                ctx.shadowColor = this.options.shadowColor;\n            }\n\n            if (this.options.shadowBlur) {\n                ctx.shadowBlur = this.options.shadowBlur;\n            }\n\n            if (this.options.globalAlpha) {\n                ctx.globalAlpha = this.options.globalAlpha;\n            }\n\n            if (this.options.globalCompositeOperation) {\n                ctx.globalCompositeOperation = this.options.globalCompositeOperation;\n            }\n\n            var options = this.options;\n            for (var i = 0; i < data.length; i++) {\n                if (data[i].geometry.type === 'Point') {\n                    ctx.beginPath();\n                    var maxSize = data[i].size || this.options.size;\n                    var minSize = data[i].minSize || this.options.minSize || 0;\n                    if (data[i]._size === undefined) {\n                        data[i]._size = minSize;\n                    }\n                    ctx.arc(data[i].geometry._coordinates[0], data[i].geometry._coordinates[1], data[i]._size, 0, Math.PI * 2, true);\n                    ctx.closePath();\n\n                    data[i]._size++;\n\n                    if (data[i]._size > maxSize) {\n                        data[i]._size = minSize;\n                    }\n                    ctx.lineWidth = 1;\n                    ctx.strokeStyle = data[i].strokeStyle || data[i]._strokeStyle || options.strokeStyle || 'yellow';\n                    ctx.stroke();\n                    var fillStyle = data[i].fillStyle || data[i]._fillStyle || options.fillStyle;\n                    if (fillStyle) {\n                        ctx.fillStyle = fillStyle;\n                        ctx.fill();\n                    }\n                } else if (data[i].geometry.type === 'LineString') {\n                    ctx.beginPath();\n                    var size = data[i].size || this.options.size || 5;\n                    var minSize = data[i].minSize || this.options.minSize || 0;\n                    if (data[i]._index === undefined) {\n                        data[i]._index = 0;\n                    }\n                    var index = data[i]._index;\n                    ctx.arc(data[i].geometry._coordinates[index][0], data[i].geometry._coordinates[index][1], size, 0, Math.PI * 2, true);\n                    ctx.closePath();\n\n                    data[i]._index++;\n\n                    if (data[i]._index >= data[i].geometry._coordinates.length) {\n                        data[i]._index = 0;\n                    }\n\n                    var strokeStyle = data[i].strokeStyle || options.strokeStyle;\n                    var fillStyle = data[i].fillStyle || options.fillStyle || 'yellow';\n                    ctx.fillStyle = fillStyle;\n                    ctx.fill();\n                    if (strokeStyle && options.lineWidth) {\n                        ctx.lineWidth = options.lineWidth || 1;\n                        ctx.strokeStyle = strokeStyle;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    }, {\n        key: \"animate\",\n        value: function animate() {\n            this.drawAnimation();\n            var animateTime = this.options.animateTime || 100;\n            this.timeout = setTimeout(this.animate.bind(this), animateTime);\n        }\n    }, {\n        key: \"start\",\n        value: function start() {\n            this.stop();\n            this.animate();\n        }\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            clearTimeout(this.timeout);\n        }\n    }, {\n        key: \"unbindEvent\",\n        value: function unbindEvent() {}\n    }, {\n        key: \"hide\",\n        value: function hide() {\n            this.canvasLayer.hide();\n            this.stop();\n        }\n    }, {\n        key: \"show\",\n        value: function show() {\n            this.start();\n        }\n    }]);\n    return AnimationLayer;\n}(BaseLayer);\n\n/**\n * @author kyle / http://nikai.us/\n */\n\nvar Layer = function (_BaseLayer) {\n    inherits(Layer, _BaseLayer);\n\n    function Layer(map, dataSet, options) {\n        classCallCheck(this, Layer);\n\n        var _this = possibleConstructorReturn(this, (Layer.__proto__ || Object.getPrototypeOf(Layer)).call(this, map, dataSet, options));\n\n        var self = _this;\n        var data = null;\n        options = options || {};\n\n        _this.clickEvent = _this.clickEvent.bind(_this);\n        _this.mousemoveEvent = _this.mousemoveEvent.bind(_this);\n\n        self.init(options);\n        self.argCheck(options);\n        self.transferToMercator();\n\n        var canvasLayer = _this.canvasLayer = new CanvasLayer({\n            map: map,\n            context: _this.context,\n            paneName: options.paneName,\n            mixBlendMode: options.mixBlendMode,\n            enableMassClear: options.enableMassClear,\n            zIndex: options.zIndex,\n            update: function update() {\n                self._canvasUpdate();\n            }\n        });\n\n        dataSet.on('change', function () {\n            self.transferToMercator();\n            canvasLayer.draw();\n        });\n\n        return _this;\n    }\n\n    createClass(Layer, [{\n        key: \"clickEvent\",\n        value: function clickEvent(e) {\n            var pixel = e.pixel;\n            get(Layer.prototype.__proto__ || Object.getPrototypeOf(Layer.prototype), \"clickEvent\", this).call(this, pixel, e);\n        }\n    }, {\n        key: \"mousemoveEvent\",\n        value: function mousemoveEvent(e) {\n            var pixel = e.pixel;\n            get(Layer.prototype.__proto__ || Object.getPrototypeOf(Layer.prototype), \"mousemoveEvent\", this).call(this, pixel, e);\n        }\n    }, {\n        key: \"bindEvent\",\n        value: function bindEvent(e) {\n            this.unbindEvent();\n            var map = this.map;\n\n            if (this.options.methods) {\n                if (this.options.methods.click) {\n                    map.setDefaultCursor(\"default\");\n                    map.addEventListener('click', this.clickEvent);\n                }\n                if (this.options.methods.mousemove) {\n                    map.addEventListener('mousemove', this.mousemoveEvent);\n                }\n            }\n        }\n    }, {\n        key: \"unbindEvent\",\n        value: function unbindEvent(e) {\n            var map = this.map;\n\n            if (this.options.methods) {\n                if (this.options.methods.click) {\n                    map.removeEventListener('click', this.clickEvent);\n                }\n                if (this.options.methods.mousemove) {\n                    map.removeEventListener('mousemove', this.mousemoveEvent);\n                }\n            }\n        }\n\n        // 经纬度左边转换为墨卡托坐标\n\n    }, {\n        key: \"transferToMercator\",\n        value: function transferToMercator() {\n            var projection = this.map.getMapType().getProjection();\n\n            if (this.options.coordType !== 'bd09mc') {\n                var data = this.dataSet.get();\n                data = this.dataSet.transferCoordinate(data, function (coordinates) {\n                    var pixel = projection.lngLatToPoint({\n                        lng: coordinates[0],\n                        lat: coordinates[1]\n                    });\n                    return [pixel.x, pixel.y];\n                }, 'coordinates', 'coordinates_mercator');\n                this.dataSet._set(data);\n            }\n        }\n    }, {\n        key: \"getContext\",\n        value: function getContext() {\n            return this.canvasLayer.canvas.getContext(this.context);\n        }\n    }, {\n        key: \"_canvasUpdate\",\n        value: function _canvasUpdate(time) {\n            if (!this.canvasLayer) {\n                return;\n            }\n\n            var self = this;\n\n            var animationOptions = self.options.animation;\n\n            var map = this.canvasLayer._map;\n\n            var zoomUnit = Math.pow(2, 18 - map.getZoom());\n            var projection = map.getMapType().getProjection();\n\n            var mcCenter = projection.lngLatToPoint(map.getCenter());\n            var nwMc = new BMap.Pixel(mcCenter.x - map.getSize().width / 2 * zoomUnit, mcCenter.y + map.getSize().height / 2 * zoomUnit); //左上角墨卡托坐标\n\n            var context = this.getContext();\n\n            if (self.isEnabledTime()) {\n                if (time === undefined) {\n                    clear(context);\n                    return;\n                }\n                if (this.context == '2d') {\n                    context.save();\n                    context.globalCompositeOperation = 'destination-out';\n                    context.fillStyle = 'rgba(0, 0, 0, .1)';\n                    context.fillRect(0, 0, context.canvas.width, context.canvas.height);\n                    context.restore();\n                }\n            } else {\n                clear(context);\n            }\n\n            if (this.context == '2d') {\n                for (var key in self.options) {\n                    context[key] = self.options[key];\n                }\n            } else {\n                context.clear(context.COLOR_BUFFER_BIT);\n            }\n\n            if (self.options.minZoom && map.getZoom() < self.options.minZoom || self.options.maxZoom && map.getZoom() > self.options.maxZoom) {\n                return;\n            }\n\n            var scale = 1;\n            if (this.context != '2d') {\n                scale = this.canvasLayer.devicePixelRatio;\n            }\n\n            var dataGetOptions = {\n                fromColumn: self.options.coordType == 'bd09mc' ? 'coordinates' : 'coordinates_mercator',\n                transferCoordinate: function transferCoordinate(coordinate) {\n                    var x = (coordinate[0] - nwMc.x) / zoomUnit * scale;\n                    var y = (nwMc.y - coordinate[1]) / zoomUnit * scale;\n                    return [x, y];\n                }\n            };\n\n            if (time !== undefined) {\n                dataGetOptions.filter = function (item) {\n                    var trails = animationOptions.trails || 10;\n                    if (time && item.time > time - trails && item.time < time) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                };\n            }\n\n            // get data from data set\n            var data = self.dataSet.get(dataGetOptions);\n\n            this.processData(data);\n\n            var nwPixel = map.pointToPixel(new BMap.Point(0, 0));\n\n            if (self.options.unit == 'm') {\n                if (self.options.size) {\n                    self.options._size = self.options.size / zoomUnit;\n                }\n                if (self.options.width) {\n                    self.options._width = self.options.width / zoomUnit;\n                }\n                if (self.options.height) {\n                    self.options._height = self.options.height / zoomUnit;\n                }\n            } else {\n                self.options._size = self.options.size;\n                self.options._height = self.options.height;\n                self.options._width = self.options.width;\n            }\n\n            this.drawContext(context, data, self.options, nwPixel);\n\n            //console.timeEnd('draw');\n\n            //console.timeEnd('update')\n            self.options.updateCallback && self.options.updateCallback(time);\n        }\n    }, {\n        key: \"init\",\n        value: function init(options) {\n\n            var self = this;\n            self.options = options;\n            this.initDataRange(options);\n            this.context = self.options.context || '2d';\n\n            if (self.options.zIndex) {\n                this.canvasLayer && this.canvasLayer.setZIndex(self.options.zIndex);\n            }\n\n            if (self.options.max) {\n                this.intensity.setMax(self.options.max);\n            }\n\n            if (self.options.min) {\n                this.intensity.setMin(self.options.min);\n            }\n\n            this.initAnimator();\n            this.bindEvent();\n        }\n    }, {\n        key: \"addAnimatorEvent\",\n        value: function addAnimatorEvent() {\n            this.map.addEventListener('movestart', this.animatorMovestartEvent.bind(this));\n            this.map.addEventListener('moveend', this.animatorMoveendEvent.bind(this));\n        }\n    }, {\n        key: \"show\",\n        value: function show() {\n            this.map.addOverlay(this.canvasLayer);\n        }\n    }, {\n        key: \"hide\",\n        value: function hide() {\n            this.map.removeOverlay(this.canvasLayer);\n        }\n    }, {\n        key: \"draw\",\n        value: function draw() {\n            this.canvasLayer.draw();\n        }\n    }]);\n    return Layer;\n}(BaseLayer);\n\n/**\n * Copyright 2012 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Extends OverlayView to provide a canvas \"Layer\".\n * @author Brendan Kenny\n */\n\n/**\n * A map layer that provides a canvas over the slippy map and a callback\n * system for efficient animation. Requires canvas and CSS 2D transform\n * support.\n * @constructor\n * @extends google.maps.OverlayView\n * @param {CanvasLayerOptions=} opt_options Options to set in this CanvasLayer.\n */\nfunction CanvasLayer$2(opt_options) {\n  /**\n   * If true, canvas is in a map pane and the OverlayView is fully functional.\n   * See google.maps.OverlayView.onAdd for more information.\n   * @type {boolean}\n   * @private\n   */\n  this.isAdded_ = false;\n\n  /**\n   * If true, each update will immediately schedule the next.\n   * @type {boolean}\n   * @private\n   */\n  this.isAnimated_ = false;\n\n  /**\n   * The name of the MapPane in which this layer will be displayed.\n   * @type {string}\n   * @private\n   */\n  this.paneName_ = CanvasLayer$2.DEFAULT_PANE_NAME_;\n\n  /**\n   * A user-supplied function called whenever an update is required. Null or\n   * undefined if a callback is not provided.\n   * @type {?function=}\n   * @private\n   */\n  this.updateHandler_ = null;\n\n  /**\n   * A user-supplied function called whenever an update is required and the\n   * map has been resized since the last update. Null or undefined if a\n   * callback is not provided.\n   * @type {?function}\n   * @private\n   */\n  this.resizeHandler_ = null;\n\n  /**\n   * The LatLng coordinate of the top left of the current view of the map. Will\n   * be null when this.isAdded_ is false.\n   * @type {google.maps.LatLng}\n   * @private\n   */\n  this.topLeft_ = null;\n\n  /**\n   * The map-pan event listener. Will be null when this.isAdded_ is false. Will\n   * be null when this.isAdded_ is false.\n   * @type {?function}\n   * @private\n   */\n  this.centerListener_ = null;\n\n  /**\n   * The map-resize event listener. Will be null when this.isAdded_ is false.\n   * @type {?function}\n   * @private\n   */\n  this.resizeListener_ = null;\n\n  /**\n   * If true, the map size has changed and this.resizeHandler_ must be called\n   * on the next update.\n   * @type {boolean}\n   * @private\n   */\n  this.needsResize_ = true;\n\n  /**\n   * A browser-defined id for the currently requested callback. Null when no\n   * callback is queued.\n   * @type {?number}\n   * @private\n   */\n  this.requestAnimationFrameId_ = null;\n\n  var canvas = document.createElement('canvas');\n  canvas.style.position = 'absolute';\n  canvas.style.top = 0;\n  canvas.style.left = 0;\n  canvas.style.pointerEvents = 'none';\n\n  /**\n   * The canvas element.\n   * @type {!HTMLCanvasElement}\n   */\n  this.canvas = canvas;\n\n  /**\n   * The CSS width of the canvas, which may be different than the width of the\n   * backing store.\n   * @private {number}\n   */\n  this.canvasCssWidth_ = 300;\n\n  /**\n   * The CSS height of the canvas, which may be different than the height of\n   * the backing store.\n   * @private {number}\n   */\n  this.canvasCssHeight_ = 150;\n\n  /**\n   * A value for scaling the CanvasLayer resolution relative to the CanvasLayer\n   * display size.\n   * @private {number}\n   */\n  this.resolutionScale_ = 1;\n\n  /**\n   * Simple bind for functions with no args for bind-less browsers (Safari).\n   * @param {Object} thisArg The this value used for the target function.\n   * @param {function} func The function to be bound.\n   */\n  function simpleBindShim(thisArg, func) {\n    return function () {\n      func.apply(thisArg);\n    };\n  }\n\n  /**\n   * A reference to this.repositionCanvas_ with this bound as its this value.\n   * @type {function}\n   * @private\n   */\n  this.repositionFunction_ = simpleBindShim(this, this.repositionCanvas_);\n\n  /**\n   * A reference to this.resize_ with this bound as its this value.\n   * @type {function}\n   * @private\n   */\n  this.resizeFunction_ = simpleBindShim(this, this.resize_);\n\n  /**\n   * A reference to this.update_ with this bound as its this value.\n   * @type {function}\n   * @private\n   */\n  this.requestUpdateFunction_ = simpleBindShim(this, this.update_);\n\n  // set provided options, if any\n  if (opt_options) {\n    this.setOptions(opt_options);\n  }\n}\n\nvar global$4 = typeof window === 'undefined' ? {} : window;\n\nif (global$4.google && global$4.google.maps) {\n\n  CanvasLayer$2.prototype = new google.maps.OverlayView();\n\n  /**\n   * The default MapPane to contain the canvas.\n   * @type {string}\n   * @const\n   * @private\n   */\n  CanvasLayer$2.DEFAULT_PANE_NAME_ = 'overlayLayer';\n\n  /**\n   * Transform CSS property name, with vendor prefix if required. If browser\n   * does not support transforms, property will be ignored.\n   * @type {string}\n   * @const\n   * @private\n   */\n  CanvasLayer$2.CSS_TRANSFORM_ = function () {\n    var div = document.createElement('div');\n    var transformProps = ['transform', 'WebkitTransform', 'MozTransform', 'OTransform', 'msTransform'];\n    for (var i = 0; i < transformProps.length; i++) {\n      var prop = transformProps[i];\n      if (div.style[prop] !== undefined) {\n        return prop;\n      }\n    }\n\n    // return unprefixed version by default\n    return transformProps[0];\n  }();\n\n  /**\n   * The requestAnimationFrame function, with vendor-prefixed or setTimeout-based\n   * fallbacks. MUST be called with window as thisArg.\n   * @type {function}\n   * @param {function} callback The function to add to the frame request queue.\n   * @return {number} The browser-defined id for the requested callback.\n   * @private\n   */\n  CanvasLayer$2.prototype.requestAnimFrame_ = global$4.requestAnimationFrame || global$4.webkitRequestAnimationFrame || global$4.mozRequestAnimationFrame || global$4.oRequestAnimationFrame || global$4.msRequestAnimationFrame || function (callback) {\n    return global$4.setTimeout(callback, 1000 / 60);\n  };\n\n  /**\n   * The cancelAnimationFrame function, with vendor-prefixed fallback. Does not\n   * fall back to clearTimeout as some platforms implement requestAnimationFrame\n   * but not cancelAnimationFrame, and the cost is an extra frame on onRemove.\n   * MUST be called with window as thisArg.\n   * @type {function}\n   * @param {number=} requestId The id of the frame request to cancel.\n   * @private\n   */\n  CanvasLayer$2.prototype.cancelAnimFrame_ = global$4.cancelAnimationFrame || global$4.webkitCancelAnimationFrame || global$4.mozCancelAnimationFrame || global$4.oCancelAnimationFrame || global$4.msCancelAnimationFrame || function (requestId) {};\n\n  /**\n   * Sets any options provided. See CanvasLayerOptions for more information.\n   * @param {CanvasLayerOptions} options The options to set.\n   */\n  CanvasLayer$2.prototype.setOptions = function (options) {\n    if (options.animate !== undefined) {\n      this.setAnimate(options.animate);\n    }\n\n    if (options.paneName !== undefined) {\n      this.setPaneName(options.paneName);\n    }\n\n    if (options.updateHandler !== undefined) {\n      this.setUpdateHandler(options.updateHandler);\n    }\n\n    if (options.resizeHandler !== undefined) {\n      this.setResizeHandler(options.resizeHandler);\n    }\n\n    if (options.resolutionScale !== undefined) {\n      this.setResolutionScale(options.resolutionScale);\n    }\n\n    if (options.map !== undefined) {\n      this.setMap(options.map);\n    }\n  };\n\n  /**\n   * Set the animated state of the layer. If true, updateHandler will be called\n   * repeatedly, once per frame. If false, updateHandler will only be called when\n   * a map property changes that could require the canvas content to be redrawn.\n   * @param {boolean} animate Whether the canvas is animated.\n   */\n  CanvasLayer$2.prototype.setAnimate = function (animate) {\n    this.isAnimated_ = !!animate;\n\n    if (this.isAnimated_) {\n      this.scheduleUpdate();\n    }\n  };\n\n  /**\n   * @return {boolean} Whether the canvas is animated.\n   */\n  CanvasLayer$2.prototype.isAnimated = function () {\n    return this.isAnimated_;\n  };\n\n  /**\n   * Set the MapPane in which this layer will be displayed, by name. See\n   * {@code google.maps.MapPanes} for the panes available.\n   * @param {string} paneName The name of the desired MapPane.\n   */\n  CanvasLayer$2.prototype.setPaneName = function (paneName) {\n    this.paneName_ = paneName;\n\n    this.setPane_();\n  };\n\n  /**\n   * @return {string} The name of the current container pane.\n   */\n  CanvasLayer$2.prototype.getPaneName = function () {\n    return this.paneName_;\n  };\n\n  /**\n   * Adds the canvas to the specified container pane. Since this is guaranteed to\n   * execute only after onAdd is called, this is when paneName's existence is\n   * checked (and an error is thrown if it doesn't exist).\n   * @private\n   */\n  CanvasLayer$2.prototype.setPane_ = function () {\n    if (!this.isAdded_) {\n      return;\n    }\n\n    // onAdd has been called, so panes can be used\n    var panes = this.getPanes();\n    if (!panes[this.paneName_]) {\n      throw new Error('\"' + this.paneName_ + '\" is not a valid MapPane name.');\n    }\n\n    panes[this.paneName_].appendChild(this.canvas);\n  };\n\n  /**\n   * Set a function that will be called whenever the parent map and the overlay's\n   * canvas have been resized. If opt_resizeHandler is null or unspecified, any\n   * existing callback is removed.\n   * @param {?function=} opt_resizeHandler The resize callback function.\n   */\n  CanvasLayer$2.prototype.setResizeHandler = function (opt_resizeHandler) {\n    this.resizeHandler_ = opt_resizeHandler;\n  };\n\n  /**\n   * Sets a value for scaling the canvas resolution relative to the canvas\n   * display size. This can be used to save computation by scaling the backing\n   * buffer down, or to support high DPI devices by scaling it up (by e.g.\n   * window.devicePixelRatio).\n   * @param {number} scale\n   */\n  CanvasLayer$2.prototype.setResolutionScale = function (scale) {\n    if (typeof scale === 'number') {\n      this.resolutionScale_ = scale;\n      this.resize_();\n    }\n  };\n\n  /**\n   * Set a function that will be called when a repaint of the canvas is required.\n   * If opt_updateHandler is null or unspecified, any existing callback is\n   * removed.\n   * @param {?function=} opt_updateHandler The update callback function.\n   */\n  CanvasLayer$2.prototype.setUpdateHandler = function (opt_updateHandler) {\n    this.updateHandler_ = opt_updateHandler;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLayer$2.prototype.onAdd = function () {\n    if (this.isAdded_) {\n      return;\n    }\n\n    this.isAdded_ = true;\n    this.setPane_();\n\n    this.resizeListener_ = google.maps.event.addListener(this.getMap(), 'resize', this.resizeFunction_);\n    this.centerListener_ = google.maps.event.addListener(this.getMap(), 'center_changed', this.repositionFunction_);\n\n    this.resize_();\n    this.repositionCanvas_();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLayer$2.prototype.onRemove = function () {\n    if (!this.isAdded_) {\n      return;\n    }\n\n    this.isAdded_ = false;\n    this.topLeft_ = null;\n\n    // remove canvas and listeners for pan and resize from map\n    this.canvas.parentElement.removeChild(this.canvas);\n    if (this.centerListener_) {\n      google.maps.event.removeListener(this.centerListener_);\n      this.centerListener_ = null;\n    }\n    if (this.resizeListener_) {\n      google.maps.event.removeListener(this.resizeListener_);\n      this.resizeListener_ = null;\n    }\n\n    // cease canvas update callbacks\n    if (this.requestAnimationFrameId_) {\n      this.cancelAnimFrame_.call(global$4, this.requestAnimationFrameId_);\n      this.requestAnimationFrameId_ = null;\n    }\n  };\n\n  /**\n   * The internal callback for resize events that resizes the canvas to keep the\n   * map properly covered.\n   * @private\n   */\n  CanvasLayer$2.prototype.resize_ = function () {\n    if (!this.isAdded_) {\n      return;\n    }\n\n    var map = this.getMap();\n    var mapWidth = map.getDiv().offsetWidth;\n    var mapHeight = map.getDiv().offsetHeight;\n\n    var newWidth = mapWidth * this.resolutionScale_;\n    var newHeight = mapHeight * this.resolutionScale_;\n    var oldWidth = this.canvas.width;\n    var oldHeight = this.canvas.height;\n\n    // resizing may allocate a new back buffer, so do so conservatively\n    if (oldWidth !== newWidth || oldHeight !== newHeight) {\n      this.canvas.width = newWidth;\n      this.canvas.height = newHeight;\n\n      this.needsResize_ = true;\n      this.scheduleUpdate();\n    }\n\n    // reset styling if new sizes don't match; resize of data not needed\n    if (this.canvasCssWidth_ !== mapWidth || this.canvasCssHeight_ !== mapHeight) {\n      this.canvasCssWidth_ = mapWidth;\n      this.canvasCssHeight_ = mapHeight;\n      this.canvas.style.width = mapWidth + 'px';\n      this.canvas.style.height = mapHeight + 'px';\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLayer$2.prototype.draw = function () {\n    this.repositionCanvas_();\n  };\n\n  /**\n   * Internal callback for map view changes. Since the Maps API moves the overlay\n   * along with the map, this function calculates the opposite translation to\n   * keep the canvas in place.\n   * @private\n   */\n  CanvasLayer$2.prototype.repositionCanvas_ = function () {\n    // TODO(bckenny): *should* only be executed on RAF, but in current browsers\n    //     this causes noticeable hitches in map and overlay relative\n    //     positioning.\n\n    var map = this.getMap();\n\n    // topLeft can't be calculated from map.getBounds(), because bounds are\n    // clamped to -180 and 180 when completely zoomed out. Instead, calculate\n    // left as an offset from the center, which is an unwrapped LatLng.\n    var top = map.getBounds().getNorthEast().lat();\n    var center = map.getCenter();\n    var scale = Math.pow(2, map.getZoom());\n    var left = center.lng() - this.canvasCssWidth_ * 180 / (256 * scale);\n    this.topLeft_ = new google.maps.LatLng(top, left);\n\n    // Canvas position relative to draggable map's container depends on\n    // overlayView's projection, not the map's. Have to use the center of the\n    // map for this, not the top left, for the same reason as above.\n    var projection = this.getProjection();\n    var divCenter = projection.fromLatLngToDivPixel(center);\n    var offsetX = -Math.round(this.canvasCssWidth_ / 2 - divCenter.x);\n    var offsetY = -Math.round(this.canvasCssHeight_ / 2 - divCenter.y);\n    this.canvas.style[CanvasLayer$2.CSS_TRANSFORM_] = 'translate(' + offsetX + 'px,' + offsetY + 'px)';\n\n    this.scheduleUpdate();\n  };\n\n  /**\n   * Internal callback that serves as main animation scheduler via\n   * requestAnimationFrame. Calls resize and update callbacks if set, and\n   * schedules the next frame if overlay is animated.\n   * @private\n   */\n  CanvasLayer$2.prototype.update_ = function () {\n    this.requestAnimationFrameId_ = null;\n\n    if (!this.isAdded_) {\n      return;\n    }\n\n    if (this.isAnimated_) {\n      this.scheduleUpdate();\n    }\n\n    if (this.needsResize_ && this.resizeHandler_) {\n      this.needsResize_ = false;\n      this.resizeHandler_();\n    }\n\n    if (this.updateHandler_) {\n      this.updateHandler_();\n    }\n  };\n\n  /**\n   * A convenience method to get the current LatLng coordinate of the top left of\n   * the current view of the map.\n   * @return {google.maps.LatLng} The top left coordinate.\n   */\n  CanvasLayer$2.prototype.getTopLeft = function () {\n    return this.topLeft_;\n  };\n\n  /**\n   * Schedule a requestAnimationFrame callback to updateHandler. If one is\n   * already scheduled, there is no effect.\n   */\n  CanvasLayer$2.prototype.scheduleUpdate = function () {\n    if (this.isAdded_ && !this.requestAnimationFrameId_) {\n      this.requestAnimationFrameId_ = this.requestAnimFrame_.call(global$4, this.requestUpdateFunction_);\n    }\n  };\n}\n\n/**\n * @author kyle / http://nikai.us/\n */\n\nvar Layer$2 = function (_BaseLayer) {\n    inherits(Layer, _BaseLayer);\n\n    function Layer(map, dataSet, options) {\n        classCallCheck(this, Layer);\n\n        var _this = possibleConstructorReturn(this, (Layer.__proto__ || Object.getPrototypeOf(Layer)).call(this, map, dataSet, options));\n\n        var self = _this;\n        var data = null;\n        options = options || {};\n\n        self.init(options);\n        self.argCheck(options);\n\n        var canvasLayerOptions = {\n            map: map,\n            animate: false,\n            updateHandler: function updateHandler() {\n                self._canvasUpdate();\n            },\n            resolutionScale: resolutionScale\n        };\n\n        var canvasLayer = _this.canvasLayer = new CanvasLayer$2(canvasLayerOptions);\n\n        _this.clickEvent = _this.clickEvent.bind(_this);\n        _this.mousemoveEvent = _this.mousemoveEvent.bind(_this);\n        _this.bindEvent();\n        return _this;\n    }\n\n    createClass(Layer, [{\n        key: \"clickEvent\",\n        value: function clickEvent(e) {\n            var pixel = e.pixel;\n            get(Layer.prototype.__proto__ || Object.getPrototypeOf(Layer.prototype), \"clickEvent\", this).call(this, pixel, e);\n        }\n    }, {\n        key: \"mousemoveEvent\",\n        value: function mousemoveEvent(e) {\n            var pixel = e.pixel;\n            get(Layer.prototype.__proto__ || Object.getPrototypeOf(Layer.prototype), \"mousemoveEvent\", this).call(this, pixel, e);\n        }\n    }, {\n        key: \"bindEvent\",\n        value: function bindEvent(e) {\n            var map = this.map;\n\n            if (this.options.methods) {\n                if (this.options.methods.click) {\n                    map.setDefaultCursor(\"default\");\n                    map.addListener('click', this.clickEvent);\n                }\n                if (this.options.methods.mousemove) {\n                    map.addListener('mousemove', this.mousemoveEvent);\n                }\n            }\n        }\n    }, {\n        key: \"unbindEvent\",\n        value: function unbindEvent(e) {\n            var map = this.map;\n\n            if (this.options.methods) {\n                if (this.options.methods.click) {\n                    map.removeListener('click', this.clickEvent);\n                }\n                if (this.options.methods.mousemove) {\n                    map.removeListener('mousemove', this.mousemoveEvent);\n                }\n            }\n        }\n    }, {\n        key: \"getContext\",\n        value: function getContext() {\n            return this.canvasLayer.canvas.getContext(this.context);\n        }\n    }, {\n        key: \"_canvasUpdate\",\n        value: function _canvasUpdate(time) {\n            if (!this.canvasLayer) {\n                return;\n            }\n\n            var self = this;\n\n            var animationOptions = self.options.animation;\n\n            var context = this.getContext();\n\n            if (self.isEnabledTime()) {\n                if (time === undefined) {\n                    clear(context);\n                    return;\n                }\n                if (this.context == '2d') {\n                    context.save();\n                    context.globalCompositeOperation = 'destination-out';\n                    context.fillStyle = 'rgba(0, 0, 0, .1)';\n                    context.fillRect(0, 0, context.canvas.width, context.canvas.height);\n                    context.restore();\n                }\n            } else {\n                clear(context);\n            }\n\n            if (this.context == '2d') {\n                for (var key in self.options) {\n                    context[key] = self.options[key];\n                }\n            } else {\n                context.clear(context.COLOR_BUFFER_BIT);\n            }\n\n            if (self.options.minZoom && map.getZoom() < self.options.minZoom || self.options.maxZoom && map.getZoom() > self.options.maxZoom) {\n                return;\n            }\n\n            var scale = 1;\n            if (this.context != '2d') {\n                scale = this.canvasLayer.devicePixelRatio;\n            }\n\n            var map = this.map;\n            var mapProjection = map.getProjection();\n            var scale = Math.pow(2, map.zoom) * resolutionScale;\n            var offset = mapProjection.fromLatLngToPoint(this.canvasLayer.getTopLeft());\n            var dataGetOptions = {\n                //fromColumn: self.options.coordType == 'bd09mc' ? 'coordinates' : 'coordinates_mercator',\n                transferCoordinate: function transferCoordinate(coordinate) {\n                    var latLng = new google.maps.LatLng(coordinate[1], coordinate[0]);\n                    var worldPoint = mapProjection.fromLatLngToPoint(latLng);\n                    var pixel = {\n                        x: (worldPoint.x - offset.x) * scale,\n                        y: (worldPoint.y - offset.y) * scale\n                    };\n                    return [pixel.x, pixel.y];\n                }\n            };\n\n            if (time !== undefined) {\n                dataGetOptions.filter = function (item) {\n                    var trails = animationOptions.trails || 10;\n                    if (time && item.time > time - trails && item.time < time) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                };\n            }\n\n            // get data from data set\n            var data = self.dataSet.get(dataGetOptions);\n\n            this.processData(data);\n\n            var latLng = new google.maps.LatLng(0, 0);\n            var worldPoint = mapProjection.fromLatLngToPoint(latLng);\n            var pixel = {\n                x: (worldPoint.x - offset.x) * scale,\n                y: (worldPoint.y - offset.y) * scale\n            };\n\n            if (self.options.unit == 'm' && self.options.size) {\n                self.options._size = self.options.size / zoomUnit;\n            } else {\n                self.options._size = self.options.size;\n            }\n\n            this.drawContext(context, new DataSet(data), self.options, pixel);\n\n            //console.timeEnd('draw');\n\n            //console.timeEnd('update')\n            self.options.updateCallback && self.options.updateCallback(time);\n        }\n    }, {\n        key: \"init\",\n        value: function init(options) {\n\n            var self = this;\n\n            self.options = options;\n\n            this.initDataRange(options);\n\n            this.context = self.options.context || '2d';\n\n            if (self.options.zIndex) {\n                this.canvasLayer && this.canvasLayer.setZIndex(self.options.zIndex);\n            }\n\n            this.initAnimator();\n        }\n    }, {\n        key: \"addAnimatorEvent\",\n        value: function addAnimatorEvent() {\n            this.map.addListener('movestart', this.animatorMovestartEvent.bind(this));\n            this.map.addListener('moveend', this.animatorMoveendEvent.bind(this));\n        }\n    }, {\n        key: \"show\",\n        value: function show() {\n            this.map.addOverlay(this.canvasLayer);\n        }\n    }, {\n        key: \"hide\",\n        value: function hide() {\n            this.map.removeOverlay(this.canvasLayer);\n        }\n    }, {\n        key: \"draw\",\n        value: function draw() {\n            self.canvasLayer.draw();\n        }\n    }]);\n    return Layer;\n}(BaseLayer);\n\n/**\n * @author kyle / http://nikai.us/\n */\n\nvar geojson = {\n    getDataSet: function getDataSet(geoJson) {\n\n        var data = [];\n        var features = geoJson.features;\n        for (var i = 0; i < features.length; i++) {\n            var feature = features[i];\n            var geometry = feature.geometry;\n            var properties = feature.properties;\n            var item = {};\n            for (var key in properties) {\n                item[key] = properties[key];\n            }\n            item.geometry = geometry;\n            data.push(item);\n        }\n        return new DataSet(data);\n    }\n};\n\n/**\n * @author kyle / http://nikai.us/\n */\n\nvar csv = {\n    CSVToArray: function CSVToArray(strData, strDelimiter) {\n        // Check to see if the delimiter is defined. If not,\n        // then default to comma.\n        strDelimiter = strDelimiter || \",\";\n\n        // Create a regular expression to parse the CSV values.\n        var objPattern = new RegExp(\n        // Delimiters.\n        \"(\\\\\" + strDelimiter + \"|\\\\r?\\\\n|\\\\r|^)\" +\n\n        // Quoted fields.\n        \"(?:\\\"([^\\\"]*(?:\\\"\\\"[^\\\"]*)*)\\\"|\" +\n\n        // Standard fields.\n        \"([^\\\"\\\\\" + strDelimiter + \"\\\\r\\\\n]*))\", \"gi\");\n\n        // Create an array to hold our data. Give the array\n        // a default empty first row.\n        var arrData = [[]];\n\n        // Create an array to hold our individual pattern\n        // matching groups.\n        var arrMatches = null;\n\n        // Keep looping over the regular expression matches\n        // until we can no longer find a match.\n        while (arrMatches = objPattern.exec(strData)) {\n\n            // Get the delimiter that was found.\n            var strMatchedDelimiter = arrMatches[1];\n\n            // Check to see if the given delimiter has a length\n            // (is not the start of string) and if it matches\n            // field delimiter. If id does not, then we know\n            // that this delimiter is a row delimiter.\n            if (strMatchedDelimiter.length && strMatchedDelimiter !== strDelimiter) {\n\n                // Since we have reached a new row of data,\n                // add an empty row to our data array.\n                arrData.push([]);\n            }\n\n            var strMatchedValue;\n\n            // Now that we have our delimiter out of the way,\n            // let's check to see which kind of value we\n            // captured (quoted or unquoted).\n            if (arrMatches[2]) {\n\n                // We found a quoted value. When we capture\n                // this value, unescape any double quotes.\n                strMatchedValue = arrMatches[2].replace(new RegExp(\"\\\"\\\"\", \"g\"), \"\\\"\");\n            } else {\n\n                // We found a non-quoted value.\n                strMatchedValue = arrMatches[3];\n            }\n\n            // Now that we have our value string, let's add\n            // it to the data array.\n            arrData[arrData.length - 1].push(strMatchedValue);\n        }\n\n        // Return the parsed data.\n        return arrData;\n    },\n\n    getDataSet: function getDataSet(csvStr, split) {\n\n        var arr = this.CSVToArray(csvStr, split || ',');\n\n        var data = [];\n\n        var header = arr[0];\n\n        for (var i = 1; i < arr.length - 1; i++) {\n            var line = arr[i];\n            var item = {};\n            for (var j = 0; j < line.length; j++) {\n                var value = line[j];\n                if (header[j] == 'geometry') {\n                    value = JSON.parse(value);\n                }\n                item[header[j]] = value;\n            }\n            data.push(item);\n        }\n\n        return new DataSet(data);\n    }\n};\n\nexports.version = version;\nexports.canvasClear = clear;\nexports.canvasResolutionScale = resolutionScale$1;\nexports.canvasDrawSimple = drawSimple;\nexports.canvasDrawHeatmap = drawHeatmap;\nexports.canvasDrawGrid = drawGrid;\nexports.canvasDrawHoneycomb = drawHoneycomb;\nexports.webglDrawSimple = webglDrawSimple;\nexports.webglDrawPoint = point;\nexports.webglDrawLine = line;\nexports.webglDrawPolygon = polygon;\nexports.utilCityCenter = cityCenter;\nexports.utilCurve = curve;\nexports.utilForceEdgeBundling = ForceEdgeBundling;\nexports.utilDataRangeIntensity = Intensity;\nexports.utilDataRangeCategory = Category;\nexports.utilDataRangeChoropleth = Choropleth;\nexports.Map = MapHelper;\nexports.baiduMapCanvasLayer = CanvasLayer;\nexports.baiduMapAnimationLayer = AnimationLayer;\nexports.baiduMapLayer = Layer;\nexports.googleMapCanvasLayer = CanvasLayer$2;\nexports.googleMapLayer = Layer$2;\nexports.DataSet = DataSet;\nexports.geojson = geojson;\nexports.csv = csv;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_mapv@2.0.20@mapv/build/mapv.js\n// module id = 1142\n// module chunks = 18","export default {\"type\": \"FeatureCollection\",\r\n\"features\":\r\n[\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"65\",\"name\":\"新疆\",\"cp\":[84.9023,41.748],\"childNum\":18},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[96.416,42.7588],[96.416,42.7148],[95.9766,42.4951],[96.0645,42.3193],[96.2402,42.2314],[95.9766,41.9238],[95.2734,41.6162],[95.1855,41.792],[94.5703,41.4844],[94.043,41.0889],[93.8672,40.6934],[93.0762,40.6494],[92.6367,39.6387],[92.373,39.3311],[92.373,39.1113],[92.373,39.0234],[90.1758,38.4961],[90.3516,38.2324],[90.6152,38.3203],[90.5273,37.8369],[91.0547,37.4414],[91.3184,37.0898],[90.7031,36.7822],[90.791,36.6064],[91.0547,36.5186],[91.0547,36.0791],[90.8789,36.0352],[90,36.2549],[89.9121,36.0791],[89.7363,36.0791],[89.209,36.2988],[88.7695,36.3428],[88.5938,36.4746],[87.3633,36.4307],[86.2207,36.167],[86.1328,35.8594],[85.6055,35.6836],[85.0781,35.7275],[84.1992,35.376],[83.1445,35.4199],[82.8809,35.6836],[82.4414,35.7275],[82.002,35.332],[81.6504,35.2441],[80.4199,35.4199],[80.2441,35.2881],[80.332,35.1563],[80.2441,35.2002],[79.8926,34.8047],[79.8047,34.4971],[79.1016,34.4531],[79.0137,34.3213],[78.2227,34.7168],[78.0469,35.2441],[78.0469,35.5078],[77.4316,35.4639],[76.8164,35.6396],[76.5527,35.8594],[76.2012,35.8154],[75.9375,36.0352],[76.0254,36.4746],[75.8496,36.6943],[75.498,36.7383],[75.4102,36.958],[75.0586,37.002],[74.8828,36.9141],[74.7949,37.0459],[74.5313,37.0898],[74.5313,37.2217],[74.8828,37.2217],[75.1465,37.4414],[74.8828,37.5732],[74.9707,37.749],[74.8828,38.4521],[74.3555,38.6719],[74.1797,38.6719],[74.0918,38.54],[73.8281,38.584],[73.7402,38.8477],[73.8281,38.9795],[73.4766,39.375],[73.916,39.5068],[73.916,39.6826],[73.8281,39.7705],[74.0039,40.0342],[74.8828,40.3418],[74.7949,40.5176],[75.2344,40.4297],[75.5859,40.6494],[75.7617,40.2979],[76.377,40.3857],[76.9043,41.001],[77.6074,41.001],[78.1348,41.2207],[78.1348,41.3965],[80.1563,42.0557],[80.2441,42.2754],[80.1563,42.627],[80.2441,42.8467],[80.5078,42.8906],[80.4199,43.0664],[80.7715,43.1982],[80.4199,44.165],[80.4199,44.6045],[79.9805,44.8242],[79.9805,44.9561],[81.7383,45.3955],[82.0898,45.2197],[82.5293,45.2197],[82.2656,45.6592],[83.0566,47.2412],[83.6719,47.0215],[84.7266,47.0215],[84.9023,46.8896],[85.5176,47.0654],[85.6934,47.2852],[85.5176,48.1201],[85.7813,48.4277],[86.5723,48.5596],[86.8359,48.8232],[86.748,48.9551],[86.8359,49.1309],[87.8027,49.1748],[87.8906,48.999],[87.7148,48.9111],[88.0664,48.7354],[87.9785,48.6035],[88.5059,48.3838],[88.6816,48.1641],[89.1211,47.9883],[89.5605,48.0322],[89.7363,47.8564],[90.0879,47.8564],[90.3516,47.6807],[90.5273,47.2412],[90.8789,46.9775],[91.0547,46.582],[90.8789,46.3184],[91.0547,46.0107],[90.7031,45.7471],[90.7031,45.5273],[90.8789,45.2197],[91.582,45.0879],[93.5156,44.9561],[94.7461,44.3408],[95.3613,44.2969],[95.3613,44.0332],[95.5371,43.9014],[95.8887,43.2422],[96.3281,42.9346],[96.416,42.7588]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"54\",\"name\":\"西藏\",\"cp\":[88.7695,31.6846],\"childNum\":7},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[79.0137,34.3213],[79.1016,34.4531],[79.8047,34.4971],[79.8926,34.8047],[80.2441,35.2002],[80.332,35.1563],[80.2441,35.2881],[80.4199,35.4199],[81.6504,35.2441],[82.002,35.332],[82.4414,35.7275],[82.8809,35.6836],[83.1445,35.4199],[84.1992,35.376],[85.0781,35.7275],[85.6055,35.6836],[86.1328,35.8594],[86.2207,36.167],[87.3633,36.4307],[88.5938,36.4746],[88.7695,36.3428],[89.209,36.2988],[89.7363,36.0791],[89.3848,36.0352],[89.4727,35.9033],[89.7363,35.7715],[89.7363,35.4199],[89.4727,35.376],[89.4727,35.2441],[89.5605,34.8926],[89.8242,34.8486],[89.7363,34.6729],[89.8242,34.3652],[89.6484,34.0137],[90.0879,33.4863],[90.7031,33.1348],[91.4063,33.1348],[91.9336,32.8271],[92.1973,32.8271],[92.2852,32.7393],[92.9883,32.7393],[93.5156,32.4756],[93.7793,32.5635],[94.1309,32.4316],[94.6582,32.6074],[95.1855,32.4316],[95.0098,32.2998],[95.1855,32.3438],[95.2734,32.2119],[95.3613,32.168],[95.3613,31.9922],[95.4492,31.8164],[95.8008,31.6846],[95.9766,31.8164],[96.1523,31.5967],[96.2402,31.9482],[96.5039,31.7285],[96.8555,31.6846],[96.7676,31.9922],[97.2949,32.0801],[97.3828,32.5635],[97.7344,32.5195],[98.1738,32.3438],[98.4375,31.8604],[98.877,31.4209],[98.6133,31.2012],[98.9648,30.7617],[99.1406,29.2676],[98.9648,29.1357],[98.9648,28.8281],[98.7891,28.8721],[98.7891,29.0039],[98.7012,28.916],[98.6133,28.5205],[98.7891,28.3447],[98.7012,28.2129],[98.3496,28.125],[98.2617,28.3887],[98.1738,28.125],[97.5586,28.5205],[97.2949,28.0811],[97.3828,27.9053],[97.0313,27.7295],[96.5039,28.125],[95.7129,28.2568],[95.3613,28.125],[95.2734,27.9492],[94.2188,27.5537],[93.8672,27.0264],[93.6035,26.9385],[92.1094,26.8506],[92.0215,27.4658],[91.582,27.5537],[91.582,27.9053],[91.4063,28.0371],[91.0547,27.8613],[90.7031,28.0811],[89.8242,28.2129],[89.6484,28.1689],[89.1211,27.5977],[89.1211,27.334],[89.0332,27.2021],[88.7695,27.4219],[88.8574,27.9932],[88.6816,28.125],[88.1543,27.9053],[87.8906,27.9492],[87.7148,27.8174],[87.0996,27.8174],[86.748,28.125],[86.5723,28.125],[86.4844,27.9053],[86.1328,28.125],[86.0449,27.9053],[85.6934,28.3447],[85.6055,28.2568],[85.166,28.3447],[85.166,28.6523],[84.9023,28.5645],[84.4629,28.7402],[84.2871,28.8721],[84.1992,29.2236],[84.1113,29.2676],[83.584,29.1797],[83.2324,29.5752],[82.1777,30.0586],[82.0898,30.3223],[81.3867,30.3662],[81.2109,30.0146],[81.0352,30.2344],[80.0684,30.5859],[79.7168,30.9375],[79.0137,31.0693],[78.75,31.333],[78.8379,31.5967],[78.6621,31.8164],[78.75,31.9043],[78.4863,32.124],[78.3984,32.5195],[78.75,32.6953],[78.9258,32.3438],[79.2773,32.5635],[79.1016,33.1787],[78.6621,33.6621],[78.6621,34.1016],[78.9258,34.1455],[79.0137,34.3213]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"15\",\"name\":\"内蒙古\",\"cp\":[117.5977,44.3408],\"childNum\":12},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[97.207,42.8027],[99.4922,42.583],[100.8105,42.6709],[101.7773,42.4951],[102.041,42.2314],[102.7441,42.1436],[103.3594,41.8799],[103.8867,41.792],[104.502,41.8799],[104.502,41.6602],[105.0293,41.5723],[105.7324,41.9238],[107.4023,42.4512],[109.4238,42.4512],[110.3906,42.7588],[111.0059,43.3301],[111.9727,43.6816],[111.9727,43.8135],[111.4453,44.3848],[111.7969,45],[111.9727,45.0879],[113.6426,44.7363],[114.1699,44.9561],[114.5215,45.3955],[115.6641,45.4395],[116.1914,45.7031],[116.2793,45.9668],[116.543,46.2744],[117.334,46.3623],[117.4219,46.582],[117.7734,46.5381],[118.3008,46.7578],[118.7402,46.7139],[118.916,46.7578],[119.0918,46.6699],[119.707,46.626],[119.9707,46.7139],[119.707,47.1973],[118.4766,47.9883],[117.8613,48.0322],[117.334,47.6807],[116.8066,47.9004],[116.1914,47.8564],[115.9277,47.6807],[115.5762,47.9004],[115.4883,48.1641],[115.8398,48.252],[115.8398,48.5596],[116.7188,49.834],[117.7734,49.5264],[118.5645,49.9219],[119.2676,50.0977],[119.3555,50.3174],[119.1797,50.3613],[119.5313,50.7568],[119.5313,50.8887],[119.707,51.0645],[120.1465,51.6797],[120.6738,51.9434],[120.7617,52.1191],[120.7617,52.251],[120.5859,52.3389],[120.6738,52.5146],[120.4102,52.6465],[120.0586,52.6025],[120.0586,52.7344],[120.8496,53.2617],[121.4648,53.3496],[121.8164,53.042],[121.2012,52.5586],[121.6406,52.4268],[121.7285,52.2949],[121.9922,52.2949],[122.168,52.5146],[122.6953,52.251],[122.6074,52.0752],[122.959,51.3281],[123.3105,51.2402],[123.6621,51.3721],[124.3652,51.2842],[124.541,51.3721],[124.8926,51.3721],[125.0684,51.6357],[125.332,51.6357],[126.0352,51.0205],[125.7715,50.7568],[125.7715,50.5371],[125.332,50.1416],[125.1563,49.834],[125.2441,49.1748],[124.8047,49.1309],[124.4531,48.1201],[124.2773,48.5156],[122.4316,47.373],[123.0469,46.7139],[123.3984,46.8896],[123.3984,46.9775],[123.4863,46.9775],[123.5742,46.8457],[123.5742,46.8896],[123.5742,46.6699],[123.0469,46.582],[123.2227,46.2305],[122.7832,46.0107],[122.6953,45.7031],[122.4316,45.8789],[122.2559,45.791],[121.8164,46.0107],[121.7285,45.7471],[121.9043,45.7031],[122.2559,45.2637],[122.0801,44.8682],[122.3438,44.2529],[123.1348,44.4727],[123.4863,43.7256],[123.3105,43.5059],[123.6621,43.374],[123.5742,43.0225],[123.3105,42.9785],[123.1348,42.8027],[122.7832,42.7148],[122.3438,42.8467],[122.3438,42.6709],[121.9922,42.7148],[121.7285,42.4512],[121.4648,42.4951],[120.498,42.0996],[120.1465,41.7041],[119.8828,42.1875],[119.5313,42.3633],[119.3555,42.2754],[119.2676,41.7041],[119.4434,41.6162],[119.2676,41.3086],[118.3887,41.3086],[118.125,41.748],[118.3008,41.792],[118.3008,42.0996],[118.125,42.0557],[117.9492,42.2314],[118.0371,42.4072],[117.7734,42.627],[117.5098,42.583],[117.334,42.4512],[116.8945,42.4072],[116.8066,42.0117],[116.2793,42.0117],[116.0156,41.792],[115.9277,41.9238],[115.2246,41.5723],[114.9609,41.6162],[114.873,42.0996],[114.5215,42.1436],[114.1699,41.792],[114.2578,41.5723],[113.9063,41.4404],[113.9941,41.2207],[113.9063,41.1328],[114.082,40.7373],[114.082,40.5176],[113.8184,40.5176],[113.5547,40.3418],[113.2031,40.3857],[112.7637,40.166],[112.3242,40.2539],[111.9727,39.5947],[111.4453,39.6387],[111.3574,39.4189],[111.0938,39.375],[111.0938,39.5947],[110.6543,39.2871],[110.127,39.4629],[110.2148,39.2871],[109.8633,39.2432],[109.9512,39.1553],[108.9844,38.3203],[109.0723,38.0127],[108.8965,37.9688],[108.8086,38.0127],[108.7207,37.7051],[108.1934,37.6172],[107.666,37.8809],[107.3145,38.1006],[106.7871,38.1885],[106.5234,38.3203],[106.9629,38.9795],[106.7871,39.375],[106.3477,39.2871],[105.9082,38.7158],[105.8203,37.793],[104.3262,37.4414],[103.4473,37.8369],[103.3594,38.0127],[103.5352,38.1445],[103.4473,38.3643],[104.2383,38.9795],[104.0625,39.4189],[103.3594,39.3311],[103.0078,39.1113],[102.4805,39.2432],[101.8652,39.1113],[102.041,38.8916],[101.7773,38.6719],[101.3379,38.7598],[101.25,39.0234],[100.9863,38.9355],[100.8105,39.4189],[100.5469,39.4189],[100.0195,39.7705],[99.4922,39.8584],[100.1074,40.2539],[100.1953,40.6494],[99.9316,41.001],[99.2285,40.8691],[99.0527,40.6934],[98.9648,40.7813],[98.7891,40.6055],[98.5254,40.7373],[98.6133,40.6494],[98.3496,40.5615],[98.3496,40.9131],[97.4707,41.4844],[97.8223,41.6162],[97.8223,41.748],[97.207,42.8027]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"63\",\"name\":\"青海\",\"cp\":[96.2402,35.4199],\"childNum\":8},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[89.7363,36.0791],[89.9121,36.0791],[90,36.2549],[90.8789,36.0352],[91.0547,36.0791],[91.0547,36.5186],[90.791,36.6064],[90.7031,36.7822],[91.3184,37.0898],[91.0547,37.4414],[90.5273,37.8369],[90.6152,38.3203],[90.3516,38.2324],[90.1758,38.4961],[92.373,39.0234],[92.373,39.1113],[93.1641,39.1992],[93.1641,38.9795],[93.6914,38.9355],[93.8672,38.7158],[94.3066,38.7598],[94.5703,38.3643],[95.0098,38.4082],[95.4492,38.2764],[95.7129,38.3643],[96.2402,38.1006],[96.416,38.2324],[96.6797,38.1885],[96.6797,38.4521],[97.1191,38.584],[97.0313,39.1992],[98.1738,38.8037],[98.3496,39.0234],[98.6133,38.9355],[98.7891,39.0674],[99.1406,38.9355],[99.8438,38.3643],[100.1953,38.2764],[100.0195,38.4521],[100.1074,38.4961],[100.459,38.2764],[100.7227,38.2324],[101.1621,37.8369],[101.5137,37.8809],[101.7773,37.6172],[101.9531,37.7051],[102.1289,37.4414],[102.5684,37.1777],[102.4805,36.958],[102.6563,36.8262],[102.5684,36.7383],[102.832,36.3428],[103.0078,36.2549],[102.9199,36.0791],[102.9199,35.9033],[102.6563,35.7715],[102.832,35.5957],[102.4805,35.5957],[102.3047,35.4199],[102.3926,35.2002],[101.9531,34.8486],[101.9531,34.6289],[102.2168,34.4092],[102.1289,34.2773],[101.6895,34.1016],[100.9863,34.3652],[100.8105,34.2773],[101.25,33.6621],[101.5137,33.7061],[101.6016,33.5303],[101.7773,33.5303],[101.6895,33.3105],[101.7773,33.2227],[101.6016,33.1348],[101.1621,33.2227],[101.25,32.6953],[100.7227,32.6514],[100.7227,32.5195],[100.3711,32.7393],[100.1074,32.6514],[100.1074,32.8711],[99.8438,33.0029],[99.7559,32.7393],[99.2285,32.915],[99.2285,33.0469],[98.877,33.1787],[98.4375,34.0576],[97.8223,34.1895],[97.6465,34.1016],[97.7344,33.9258],[97.3828,33.8818],[97.4707,33.5742],[97.7344,33.3984],[97.3828,32.8711],[97.4707,32.6953],[97.7344,32.5195],[97.3828,32.5635],[97.2949,32.0801],[96.7676,31.9922],[96.8555,31.6846],[96.5039,31.7285],[96.2402,31.9482],[96.1523,31.5967],[95.9766,31.8164],[95.8008,31.6846],[95.4492,31.8164],[95.3613,31.9922],[95.3613,32.168],[95.2734,32.2119],[95.1855,32.3438],[95.0098,32.2998],[95.1855,32.4316],[94.6582,32.6074],[94.1309,32.4316],[93.7793,32.5635],[93.5156,32.4756],[92.9883,32.7393],[92.2852,32.7393],[92.1973,32.8271],[91.9336,32.8271],[91.4063,33.1348],[90.7031,33.1348],[90.0879,33.4863],[89.6484,34.0137],[89.8242,34.3652],[89.7363,34.6729],[89.8242,34.8486],[89.5605,34.8926],[89.4727,35.2441],[89.4727,35.376],[89.7363,35.4199],[89.7363,35.7715],[89.4727,35.9033],[89.3848,36.0352],[89.7363,36.0791]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"51\",\"name\":\"四川\",\"cp\":[102.9199,30.1904],\"childNum\":21},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[101.7773,33.5303],[101.8652,33.5742],[101.9531,33.4424],[101.8652,33.0908],[102.4805,33.4424],[102.2168,33.9258],[102.9199,34.3213],[103.0957,34.1895],[103.1836,33.7939],[104.1504,33.6182],[104.2383,33.3984],[104.4141,33.3105],[104.3262,33.2227],[104.4141,33.0469],[104.3262,32.8711],[104.4141,32.7393],[105.2051,32.6074],[105.3809,32.7393],[105.3809,32.8711],[105.4688,32.915],[105.5566,32.7393],[106.084,32.8711],[106.084,32.7393],[106.3477,32.6514],[107.0508,32.6953],[107.1387,32.4756],[107.2266,32.4316],[107.4023,32.5195],[108.0176,32.168],[108.2813,32.2559],[108.5449,32.2119],[108.3691,32.168],[108.2813,31.9043],[108.5449,31.6846],[108.1934,31.5088],[107.9297,30.8496],[107.4902,30.8496],[107.4023,30.7617],[107.4902,30.6299],[107.0508,30.0146],[106.7871,30.0146],[106.6113,30.3223],[106.2598,30.1904],[105.8203,30.4541],[105.6445,30.2783],[105.5566,30.1025],[105.7324,29.8828],[105.293,29.5313],[105.4688,29.3115],[105.7324,29.2676],[105.8203,28.96],[106.2598,28.8721],[106.3477,28.5205],[105.9961,28.7402],[105.6445,28.4326],[105.9082,28.125],[106.1719,28.125],[106.3477,27.8174],[105.6445,27.6416],[105.5566,27.7734],[105.293,27.7295],[105.2051,27.9932],[105.0293,28.0811],[104.8535,27.9053],[104.4141,27.9492],[104.3262,28.0371],[104.4141,28.125],[104.4141,28.2568],[104.2383,28.4326],[104.4141,28.6084],[103.8867,28.6523],[103.7988,28.3008],[103.4473,28.125],[103.4473,27.7734],[102.9199,27.29],[103.0078,26.3672],[102.6563,26.1914],[102.5684,26.3672],[102.1289,26.1035],[101.8652,26.0596],[101.6016,26.2354],[101.6895,26.3672],[101.4258,26.5869],[101.4258,26.8066],[101.4258,26.7188],[101.1621,27.0264],[101.1621,27.1582],[100.7227,27.8613],[100.3711,27.8174],[100.2832,27.7295],[100.0195,28.125],[100.1953,28.3447],[99.668,28.8281],[99.4043,28.5205],[99.4043,28.1689],[99.2285,28.3008],[99.1406,29.2676],[98.9648,30.7617],[98.6133,31.2012],[98.877,31.4209],[98.4375,31.8604],[98.1738,32.3438],[97.7344,32.5195],[97.4707,32.6953],[97.3828,32.8711],[97.7344,33.3984],[97.4707,33.5742],[97.3828,33.8818],[97.7344,33.9258],[97.6465,34.1016],[97.8223,34.1895],[98.4375,34.0576],[98.877,33.1787],[99.2285,33.0469],[99.2285,32.915],[99.7559,32.7393],[99.8438,33.0029],[100.1074,32.8711],[100.1074,32.6514],[100.3711,32.7393],[100.7227,32.5195],[100.7227,32.6514],[101.25,32.6953],[101.1621,33.2227],[101.6016,33.1348],[101.7773,33.2227],[101.6895,33.3105],[101.7773,33.5303]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"23\",\"name\":\"黑龙江\",\"cp\":[128.1445,48.5156],\"childNum\":13},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[121.4648,53.3496],[123.6621,53.5693],[124.8926,53.0859],[125.0684,53.2178],[125.5957,53.0859],[125.6836,52.9102],[126.123,52.7783],[126.0352,52.6025],[126.2109,52.5146],[126.3867,52.2949],[126.3867,52.207],[126.5625,52.1631],[126.4746,51.9434],[126.9141,51.3721],[126.8262,51.2842],[127.002,51.3281],[126.9141,51.1084],[127.2656,50.7568],[127.3535,50.2734],[127.6172,50.2295],[127.5293,49.8779],[127.793,49.6143],[128.7598,49.5703],[129.1113,49.3506],[129.4629,49.4385],[130.2539,48.8672],[130.6934,48.8672],[130.5176,48.6475],[130.8691,48.2959],[130.6934,48.1201],[131.0449,47.6807],[132.5391,47.7246],[132.627,47.9443],[133.0664,48.1201],[133.5059,48.1201],[134.209,48.3838],[135.0879,48.4277],[134.7363,48.252],[134.5605,47.9883],[134.7363,47.6807],[134.5605,47.4609],[134.3848,47.4609],[134.209,47.2852],[134.209,47.1533],[133.8574,46.5381],[133.9453,46.2744],[133.5059,45.835],[133.418,45.5713],[133.2422,45.5273],[133.0664,45.1318],[132.8906,45.0439],[131.9238,45.3516],[131.5723,45.0439],[131.0449,44.8682],[131.3086,44.0771],[131.2207,43.7256],[131.3086,43.4619],[130.8691,43.418],[130.5176,43.6377],[130.3418,43.9893],[129.9902,43.8574],[129.9023,44.0332],[129.8145,43.9014],[129.2871,43.8135],[129.1992,43.5938],[128.8477,43.5498],[128.4961,44.165],[128.4082,44.4727],[128.0566,44.3408],[128.0566,44.1211],[127.7051,44.1211],[127.5293,44.6045],[127.0898,44.6045],[127.002,44.7803],[127.0898,45],[126.9141,45.1318],[126.5625,45.2637],[126.0352,45.1758],[125.7715,45.3076],[125.6836,45.5273],[125.0684,45.3955],[124.8926,45.5273],[124.3652,45.4395],[124.0137,45.7471],[123.9258,46.2305],[123.2227,46.2305],[123.0469,46.582],[123.5742,46.6699],[123.5742,46.8896],[123.5742,46.8457],[123.4863,46.9775],[123.3984,46.9775],[123.3984,46.8896],[123.0469,46.7139],[122.4316,47.373],[124.2773,48.5156],[124.4531,48.1201],[124.8047,49.1309],[125.2441,49.1748],[125.1563,49.834],[125.332,50.1416],[125.7715,50.5371],[125.7715,50.7568],[126.0352,51.0205],[125.332,51.6357],[125.0684,51.6357],[124.8926,51.3721],[124.541,51.3721],[124.3652,51.2842],[123.6621,51.3721],[123.3105,51.2402],[122.959,51.3281],[122.6074,52.0752],[122.6953,52.251],[122.168,52.5146],[121.9922,52.2949],[121.7285,52.2949],[121.6406,52.4268],[121.2012,52.5586],[121.8164,53.042],[121.4648,53.3496]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"62\",\"name\":\"甘肃\",\"cp\":[95.7129,40.166],\"childNum\":14},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[96.416,42.7148],[97.207,42.8027],[97.8223,41.748],[97.8223,41.6162],[97.4707,41.4844],[98.3496,40.9131],[98.3496,40.5615],[98.6133,40.6494],[98.5254,40.7373],[98.7891,40.6055],[98.9648,40.7813],[99.0527,40.6934],[99.2285,40.8691],[99.9316,41.001],[100.1953,40.6494],[100.1074,40.2539],[99.4922,39.8584],[100.0195,39.7705],[100.5469,39.4189],[100.8105,39.4189],[100.9863,38.9355],[101.25,39.0234],[101.3379,38.7598],[101.7773,38.6719],[102.041,38.8916],[101.8652,39.1113],[102.4805,39.2432],[103.0078,39.1113],[103.3594,39.3311],[104.0625,39.4189],[104.2383,38.9795],[103.4473,38.3643],[103.5352,38.1445],[103.3594,38.0127],[103.4473,37.8369],[104.3262,37.4414],[104.5898,37.4414],[104.5898,37.2217],[104.8535,37.2217],[105.293,36.8262],[105.2051,36.6943],[105.4688,36.123],[105.293,35.9912],[105.3809,35.7715],[105.7324,35.7275],[105.8203,35.5518],[105.9961,35.4639],[105.9082,35.4199],[105.9961,35.4199],[106.084,35.376],[106.2598,35.4199],[106.3477,35.2441],[106.5234,35.332],[106.4355,35.6836],[106.6992,35.6836],[106.9629,35.8154],[106.875,36.123],[106.5234,36.2549],[106.5234,36.4746],[106.4355,36.5625],[106.6113,36.7822],[106.6113,37.0898],[107.3145,37.0898],[107.3145,36.9141],[108.7207,36.3428],[108.6328,35.9912],[108.5449,35.8594],[108.6328,35.5518],[108.5449,35.2881],[107.7539,35.2881],[107.7539,35.1123],[107.8418,35.0244],[107.666,34.9365],[107.2266,34.8926],[106.9629,35.0684],[106.6113,35.0684],[106.5234,34.7607],[106.3477,34.585],[106.6992,34.3213],[106.5234,34.2773],[106.6113,34.1455],[106.4355,33.9258],[106.5234,33.5303],[105.9961,33.6182],[105.7324,33.3984],[105.9961,33.1787],[105.9082,33.0029],[105.4688,32.915],[105.3809,32.8711],[105.3809,32.7393],[105.2051,32.6074],[104.4141,32.7393],[104.3262,32.8711],[104.4141,33.0469],[104.3262,33.2227],[104.4141,33.3105],[104.2383,33.3984],[104.1504,33.6182],[103.1836,33.7939],[103.0957,34.1895],[102.9199,34.3213],[102.2168,33.9258],[102.4805,33.4424],[101.8652,33.0908],[101.9531,33.4424],[101.8652,33.5742],[101.7773,33.5303],[101.6016,33.5303],[101.5137,33.7061],[101.25,33.6621],[100.8105,34.2773],[100.9863,34.3652],[101.6895,34.1016],[102.1289,34.2773],[102.2168,34.4092],[101.9531,34.6289],[101.9531,34.8486],[102.3926,35.2002],[102.3047,35.4199],[102.4805,35.5957],[102.832,35.5957],[102.6563,35.7715],[102.9199,35.9033],[102.9199,36.0791],[103.0078,36.2549],[102.832,36.3428],[102.5684,36.7383],[102.6563,36.8262],[102.4805,36.958],[102.5684,37.1777],[102.1289,37.4414],[101.9531,37.7051],[101.7773,37.6172],[101.5137,37.8809],[101.1621,37.8369],[100.7227,38.2324],[100.459,38.2764],[100.1074,38.4961],[100.0195,38.4521],[100.1953,38.2764],[99.8438,38.3643],[99.1406,38.9355],[98.7891,39.0674],[98.6133,38.9355],[98.3496,39.0234],[98.1738,38.8037],[97.0313,39.1992],[97.1191,38.584],[96.6797,38.4521],[96.6797,38.1885],[96.416,38.2324],[96.2402,38.1006],[95.7129,38.3643],[95.4492,38.2764],[95.0098,38.4082],[94.5703,38.3643],[94.3066,38.7598],[93.8672,38.7158],[93.6914,38.9355],[93.1641,38.9795],[93.1641,39.1992],[92.373,39.1113],[92.373,39.3311],[92.6367,39.6387],[93.0762,40.6494],[93.8672,40.6934],[94.043,41.0889],[94.5703,41.4844],[95.1855,41.792],[95.2734,41.6162],[95.9766,41.9238],[96.2402,42.2314],[96.0645,42.3193],[95.9766,42.4951],[96.416,42.7148]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"53\",\"name\":\"云南\",\"cp\":[101.8652,25.1807],\"childNum\":16},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[98.1738,28.125],[98.2617,28.3887],[98.3496,28.125],[98.7012,28.2129],[98.7891,28.3447],[98.6133,28.5205],[98.7012,28.916],[98.7891,29.0039],[98.7891,28.8721],[98.9648,28.8281],[98.9648,29.1357],[99.1406,29.2676],[99.2285,28.3008],[99.4043,28.1689],[99.4043,28.5205],[99.668,28.8281],[100.1953,28.3447],[100.0195,28.125],[100.2832,27.7295],[100.3711,27.8174],[100.7227,27.8613],[101.1621,27.1582],[101.1621,27.0264],[101.4258,26.7188],[101.4258,26.8066],[101.4258,26.5869],[101.6895,26.3672],[101.6016,26.2354],[101.8652,26.0596],[102.1289,26.1035],[102.5684,26.3672],[102.6563,26.1914],[103.0078,26.3672],[102.9199,27.29],[103.4473,27.7734],[103.4473,28.125],[103.7988,28.3008],[103.8867,28.6523],[104.4141,28.6084],[104.2383,28.4326],[104.4141,28.2568],[104.4141,28.125],[104.3262,28.0371],[104.4141,27.9492],[104.8535,27.9053],[105.0293,28.0811],[105.2051,27.9932],[105.293,27.7295],[105.2051,27.3779],[104.5898,27.334],[104.4141,27.4658],[104.1504,27.2461],[103.8867,27.4219],[103.623,27.0264],[103.7109,26.9824],[103.7109,26.7627],[103.8867,26.543],[104.4141,26.6748],[104.6777,26.4111],[104.3262,25.708],[104.8535,25.2246],[104.5898,25.0488],[104.6777,24.9609],[104.502,24.7412],[104.6777,24.3457],[104.7656,24.4775],[105.0293,24.4336],[105.2051,24.082],[105.4688,24.0381],[105.5566,24.126],[105.9961,24.126],[106.1719,23.8184],[106.1719,23.5547],[105.6445,23.4229],[105.5566,23.2031],[105.293,23.3789],[104.8535,23.1592],[104.7656,22.8516],[104.3262,22.6758],[104.1504,22.8076],[103.9746,22.5439],[103.623,22.7637],[103.5352,22.5879],[103.3594,22.8076],[103.0957,22.4561],[102.4805,22.7637],[102.3047,22.4121],[101.8652,22.3682],[101.7773,22.5],[101.6016,22.1924],[101.8652,21.6211],[101.7773,21.1377],[101.6016,21.2256],[101.25,21.1816],[101.1621,21.7529],[100.6348,21.4453],[100.1074,21.4893],[99.9316,22.0605],[99.2285,22.1484],[99.4043,22.5879],[99.3164,22.7197],[99.4922,23.0713],[98.877,23.2031],[98.7012,23.9502],[98.877,24.126],[98.1738,24.082],[97.7344,23.8623],[97.5586,23.9063],[97.7344,24.126],[97.6465,24.4336],[97.5586,24.4336],[97.5586,24.7412],[97.7344,24.8291],[97.8223,25.2686],[98.1738,25.4004],[98.1738,25.6201],[98.3496,25.5762],[98.5254,25.8398],[98.7012,25.8838],[98.6133,26.0596],[98.7012,26.1475],[98.7891,26.5869],[98.7012,27.5098],[98.5254,27.6416],[98.3496,27.5098],[98.1738,28.125]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"45\",\"name\":\"广西\",\"cp\":[108.2813,23.6426],\"childNum\":14},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[104.502,24.7412],[104.6777,24.6094],[105.2051,24.9609],[105.9961,24.6533],[106.1719,24.7852],[106.1719,24.9609],[106.875,25.1807],[107.0508,25.2686],[106.9629,25.4883],[107.2266,25.6201],[107.4902,25.2246],[107.7539,25.2246],[107.8418,25.1367],[108.1055,25.2246],[108.1934,25.4443],[108.3691,25.5322],[108.6328,25.3125],[108.6328,25.5762],[109.0723,25.5322],[108.9844,25.752],[109.3359,25.708],[109.5117,26.0156],[109.7754,25.8838],[109.9512,26.1914],[110.2148,25.9717],[110.5664,26.3232],[111.1816,26.3232],[111.2695,26.2354],[111.2695,25.8838],[111.4453,25.8398],[111.0059,25.0049],[111.0938,24.9609],[111.3574,25.1367],[111.5332,24.6533],[111.709,24.7852],[112.0605,24.7412],[111.8848,24.6533],[112.0605,24.3457],[111.8848,24.2139],[111.8848,23.9941],[111.7969,23.8184],[111.6211,23.8184],[111.6211,23.6865],[111.3574,23.4668],[111.4453,23.0273],[111.2695,22.8076],[110.7422,22.5439],[110.7422,22.2803],[110.6543,22.1484],[110.3027,22.1484],[110.3027,21.8848],[109.9512,21.8408],[109.8633,21.665],[109.7754,21.6211],[109.7754,21.4014],[109.5996,21.4453],[109.1602,21.3574],[109.248,20.874],[109.0723,20.9619],[109.0723,21.5332],[108.7207,21.5332],[108.6328,21.665],[108.2813,21.4893],[107.8418,21.6211],[107.4023,21.6211],[107.0508,21.7969],[107.0508,21.9287],[106.6992,22.0166],[106.6113,22.4121],[106.7871,22.7637],[106.6992,22.8955],[105.9082,22.9395],[105.5566,23.0713],[105.5566,23.2031],[105.6445,23.4229],[106.1719,23.5547],[106.1719,23.8184],[105.9961,24.126],[105.5566,24.126],[105.4688,24.0381],[105.2051,24.082],[105.0293,24.4336],[104.7656,24.4775],[104.6777,24.3457],[104.502,24.7412]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"43\",\"name\":\"湖南\",\"cp\":[111.5332,27.3779],\"childNum\":14},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[109.248,28.4766],[109.248,29.1357],[109.5117,29.6191],[109.6875,29.6191],[109.7754,29.751],[110.4785,29.6631],[110.6543,29.751],[110.4785,30.0146],[110.8301,30.1465],[111.7969,29.9268],[112.2363,29.5313],[112.5,29.6191],[112.6758,29.5752],[112.9395,29.7949],[113.0273,29.751],[112.9395,29.4873],[113.0273,29.4434],[113.5547,29.8389],[113.5547,29.707],[113.7305,29.5752],[113.6426,29.3115],[113.7305,29.0918],[113.9063,29.0479],[114.1699,28.8281],[114.082,28.5645],[114.2578,28.3447],[113.7305,27.9492],[113.6426,27.5977],[113.6426,27.3779],[113.8184,27.29],[113.7305,27.1143],[113.9063,26.9385],[113.9063,26.6309],[114.082,26.5869],[113.9941,26.1914],[114.2578,26.1475],[113.9941,26.0596],[113.9063,25.4443],[113.6426,25.3125],[113.2031,25.5322],[112.8516,25.3564],[113.0273,25.2246],[113.0273,24.9609],[112.8516,24.917],[112.5879,25.1367],[112.2363,25.1807],[112.1484,24.873],[112.0605,24.7412],[111.709,24.7852],[111.5332,24.6533],[111.3574,25.1367],[111.0938,24.9609],[111.0059,25.0049],[111.4453,25.8398],[111.2695,25.8838],[111.2695,26.2354],[111.1816,26.3232],[110.5664,26.3232],[110.2148,25.9717],[109.9512,26.1914],[109.7754,25.8838],[109.5117,26.0156],[109.4238,26.2793],[109.248,26.3232],[109.4238,26.5869],[109.3359,26.7188],[109.5117,26.8066],[109.5117,27.0264],[109.3359,27.1582],[108.8965,27.0264],[108.8086,27.1143],[109.4238,27.5977],[109.3359,27.9053],[109.3359,28.2568],[109.248,28.4766]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"61\",\"name\":\"陕西\",\"cp\":[109.5996,35.6396],\"childNum\":10},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[105.4688,32.915],[105.9082,33.0029],[105.9961,33.1787],[105.7324,33.3984],[105.9961,33.6182],[106.5234,33.5303],[106.4355,33.9258],[106.6113,34.1455],[106.5234,34.2773],[106.6992,34.3213],[106.3477,34.585],[106.5234,34.7607],[106.6113,35.0684],[106.9629,35.0684],[107.2266,34.8926],[107.666,34.9365],[107.8418,35.0244],[107.7539,35.1123],[107.7539,35.2881],[108.5449,35.2881],[108.6328,35.5518],[108.5449,35.8594],[108.6328,35.9912],[108.7207,36.3428],[107.3145,36.9141],[107.3145,37.0898],[107.3145,37.6172],[107.666,37.8809],[108.1934,37.6172],[108.7207,37.7051],[108.8086,38.0127],[108.8965,37.9688],[109.0723,38.0127],[108.9844,38.3203],[109.9512,39.1553],[109.8633,39.2432],[110.2148,39.2871],[110.127,39.4629],[110.6543,39.2871],[111.0938,39.5947],[111.0938,39.375],[111.1816,39.2432],[110.918,38.7158],[110.8301,38.4961],[110.4785,38.1885],[110.4785,37.9688],[110.8301,37.6611],[110.3906,37.002],[110.4785,36.123],[110.5664,35.6396],[110.2148,34.8926],[110.2148,34.6729],[110.3906,34.585],[110.4785,34.2334],[110.6543,34.1455],[110.6543,33.8379],[111.0059,33.5303],[111.0059,33.2666],[110.7422,33.1348],[110.5664,33.2666],[110.3027,33.1787],[109.5996,33.2666],[109.4238,33.1348],[109.7754,33.0469],[109.7754,32.915],[110.127,32.7393],[110.127,32.6074],[109.6875,32.6074],[109.5117,32.4316],[109.5996,31.7285],[109.248,31.7285],[109.0723,31.9482],[108.5449,32.2119],[108.2813,32.2559],[108.0176,32.168],[107.4023,32.5195],[107.2266,32.4316],[107.1387,32.4756],[107.0508,32.6953],[106.3477,32.6514],[106.084,32.7393],[106.084,32.8711],[105.5566,32.7393],[105.4688,32.915]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"44\",\"name\":\"广东\",\"cp\":[113.4668,22.8076],\"childNum\":21},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[109.7754,21.4014],[109.7754,21.6211],[109.8633,21.665],[109.9512,21.8408],[110.3027,21.8848],[110.3027,22.1484],[110.6543,22.1484],[110.7422,22.2803],[110.7422,22.5439],[111.2695,22.8076],[111.4453,23.0273],[111.3574,23.4668],[111.6211,23.6865],[111.6211,23.8184],[111.7969,23.8184],[111.8848,23.9941],[111.8848,24.2139],[112.0605,24.3457],[111.8848,24.6533],[112.0605,24.7412],[112.1484,24.873],[112.2363,25.1807],[112.5879,25.1367],[112.8516,24.917],[113.0273,24.9609],[113.0273,25.2246],[112.8516,25.3564],[113.2031,25.5322],[113.6426,25.3125],[113.9063,25.4443],[113.9941,25.2686],[114.6094,25.4004],[114.7852,25.2686],[114.6973,25.1367],[114.4336,24.9609],[114.1699,24.6973],[114.4336,24.5215],[115.4004,24.7852],[115.8398,24.5654],[115.752,24.7852],[115.9277,24.917],[116.2793,24.7852],[116.3672,24.873],[116.543,24.6094],[116.7188,24.6533],[116.9824,24.1699],[116.9824,23.9063],[117.1582,23.5547],[117.334,23.2471],[116.8945,23.3789],[116.6309,23.1152],[116.543,22.8516],[115.9277,22.7197],[115.6641,22.7637],[115.5762,22.6318],[115.0488,22.6758],[114.6094,22.3682],[114.3457,22.5439],[113.9941,22.5],[113.8184,22.1924],[114.3457,22.1484],[114.4336,22.0166],[114.082,21.9287],[113.9941,21.7969],[113.5547,22.0166],[113.1152,21.8408],[112.9395,21.5771],[112.4121,21.4453],[112.2363,21.5332],[111.5332,21.4893],[111.2695,21.3574],[110.7422,21.3574],[110.6543,21.2256],[110.7422,20.918],[110.4785,20.874],[110.6543,20.2588],[110.5664,20.2588],[110.3906,20.127],[110.0391,20.127],[109.8633,20.127],[109.8633,20.3027],[109.5996,20.918],[109.7754,21.4014],[109.7754,21.4014]],[[113.5986,22.1649],[113.6096,22.1265],[113.5547,22.11],[113.5437,22.2034],[113.5767,22.2034],[113.5986,22.1649]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"22\",\"name\":\"吉林\",\"cp\":[126.4746,43.5938],\"childNum\":9},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[123.2227,46.2305],[123.9258,46.2305],[124.0137,45.7471],[124.3652,45.4395],[124.8926,45.5273],[125.0684,45.3955],[125.6836,45.5273],[125.7715,45.3076],[126.0352,45.1758],[126.5625,45.2637],[126.9141,45.1318],[127.0898,45],[127.002,44.7803],[127.0898,44.6045],[127.5293,44.6045],[127.7051,44.1211],[128.0566,44.1211],[128.0566,44.3408],[128.4082,44.4727],[128.4961,44.165],[128.8477,43.5498],[129.1992,43.5938],[129.2871,43.8135],[129.8145,43.9014],[129.9023,44.0332],[129.9902,43.8574],[130.3418,43.9893],[130.5176,43.6377],[130.8691,43.418],[131.3086,43.4619],[131.3086,43.3301],[131.1328,42.9346],[130.4297,42.7148],[130.6055,42.6709],[130.6055,42.4512],[130.2539,42.7588],[130.2539,42.8906],[130.166,42.9785],[129.9023,43.0225],[129.7266,42.4951],[129.375,42.4512],[128.9355,42.0117],[128.0566,42.0117],[128.3203,41.5723],[128.1445,41.3525],[127.0898,41.5283],[127.1777,41.5723],[126.9141,41.792],[126.6504,41.6602],[126.4746,41.3965],[126.123,40.957],[125.6836,40.8691],[125.5957,40.9131],[125.7715,41.2207],[125.332,41.6602],[125.332,41.9678],[125.4199,42.0996],[125.332,42.1436],[124.8926,42.8027],[124.8926,43.0664],[124.7168,43.0664],[124.4531,42.8467],[124.2773,43.2422],[123.8379,43.4619],[123.6621,43.374],[123.3105,43.5059],[123.4863,43.7256],[123.1348,44.4727],[122.3438,44.2529],[122.0801,44.8682],[122.2559,45.2637],[121.9043,45.7031],[121.7285,45.7471],[121.8164,46.0107],[122.2559,45.791],[122.4316,45.8789],[122.6953,45.7031],[122.7832,46.0107],[123.2227,46.2305]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"13\",\"name\":\"河北\",\"cp\":[115.4004,37.9688],\"childNum\":11},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[114.5215,39.5068],[114.3457,39.8584],[113.9941,39.9902],[114.5215,40.3418],[114.3457,40.3857],[114.2578,40.6055],[114.082,40.7373],[113.9063,41.1328],[113.9941,41.2207],[113.9063,41.4404],[114.2578,41.5723],[114.1699,41.792],[114.5215,42.1436],[114.873,42.0996],[114.9609,41.6162],[115.2246,41.5723],[115.9277,41.9238],[116.0156,41.792],[116.2793,42.0117],[116.8066,42.0117],[116.8945,42.4072],[117.334,42.4512],[117.5098,42.583],[117.7734,42.627],[118.0371,42.4072],[117.9492,42.2314],[118.125,42.0557],[118.3008,42.0996],[118.3008,41.792],[118.125,41.748],[118.3887,41.3086],[119.2676,41.3086],[118.8281,40.8252],[119.2676,40.5176],[119.5313,40.5615],[119.707,40.1221],[119.8828,39.9463],[119.5313,39.6826],[119.4434,39.4189],[118.916,39.0674],[118.4766,38.9355],[118.125,39.0234],[118.0371,39.1992],[118.0371,39.2432],[117.8613,39.4189],[117.9492,39.5947],[117.6855,39.5947],[117.5098,39.7705],[117.5098,39.9902],[117.6855,39.9902],[117.6855,40.0781],[117.4219,40.21],[117.2461,40.5176],[117.4219,40.6494],[116.9824,40.6934],[116.6309,41.0449],[116.3672,40.9131],[116.4551,40.7813],[116.1914,40.7813],[116.1035,40.6055],[115.752,40.5615],[115.9277,40.2539],[115.4004,39.9463],[115.4883,39.6387],[115.752,39.5068],[116.1914,39.5947],[116.3672,39.4629],[116.543,39.5947],[116.8066,39.5947],[116.8945,39.1113],[116.7188,38.9355],[116.7188,38.8037],[117.2461,38.54],[117.5977,38.6279],[117.9492,38.3203],[117.4219,37.8369],[116.8066,37.8369],[116.4551,37.4854],[116.2793,37.5732],[116.2793,37.3535],[116.0156,37.3535],[115.752,36.9141],[115.3125,36.5186],[115.4883,36.167],[115.3125,36.0791],[115.1367,36.2109],[114.9609,36.0791],[114.873,36.123],[113.7305,36.3428],[113.4668,36.6504],[113.7305,36.8701],[113.7305,37.1338],[114.1699,37.6611],[113.9941,37.7051],[113.8184,38.1445],[113.5547,38.2764],[113.5547,38.54],[113.8184,38.8037],[113.8184,38.9355],[113.9063,39.0234],[114.3457,39.0674],[114.5215,39.5068]]],[[[117.2461,40.0781],[117.1582,39.8145],[117.1582,39.6387],[116.8945,39.6826],[116.8945,39.8145],[116.8066,39.9902],[117.2461,40.0781]]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"42\",\"name\":\"湖北\",\"cp\":[112.2363,31.1572],\"childNum\":17},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[110.2148,31.1572],[110.127,31.377],[109.6875,31.5527],[109.7754,31.6846],[109.5996,31.7285],[109.5117,32.4316],[109.6875,32.6074],[110.127,32.6074],[110.127,32.7393],[109.7754,32.915],[109.7754,33.0469],[109.4238,33.1348],[109.5996,33.2666],[110.3027,33.1787],[110.5664,33.2666],[110.7422,33.1348],[111.0059,33.2666],[111.5332,32.6074],[112.3242,32.3438],[113.2031,32.4316],[113.4668,32.2998],[113.7305,32.4316],[113.8184,31.8604],[113.9941,31.7725],[114.1699,31.8604],[114.5215,31.7725],[114.6094,31.5527],[114.7852,31.4648],[115.1367,31.5967],[115.2246,31.4209],[115.4004,31.4209],[115.5762,31.2012],[116.0156,31.0254],[115.752,30.6738],[116.1035,30.1904],[116.1035,29.8389],[115.9277,29.707],[115.4883,29.7949],[114.873,29.3994],[114.2578,29.3555],[113.9063,29.0479],[113.7305,29.0918],[113.6426,29.3115],[113.7305,29.5752],[113.5547,29.707],[113.5547,29.8389],[113.0273,29.4434],[112.9395,29.4873],[113.0273,29.751],[112.9395,29.7949],[112.6758,29.5752],[112.5,29.6191],[112.2363,29.5313],[111.7969,29.9268],[110.8301,30.1465],[110.4785,30.0146],[110.6543,29.751],[110.4785,29.6631],[109.7754,29.751],[109.6875,29.6191],[109.5117,29.6191],[109.248,29.1357],[109.0723,29.3555],[108.9844,29.3115],[108.6328,29.8389],[108.457,29.7949],[108.5449,30.2344],[108.457,30.4102],[108.6328,30.5859],[108.8086,30.498],[109.0723,30.6299],[109.1602,30.542],[109.248,30.6299],[109.4238,30.542],[109.8633,30.8936],[110.0391,30.8057],[110.2148,31.1572]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"52\",\"name\":\"贵州\",\"cp\":[106.6113,26.9385],\"childNum\":9},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[104.1504,27.2461],[104.4141,27.4658],[104.5898,27.334],[105.2051,27.3779],[105.293,27.7295],[105.5566,27.7734],[105.6445,27.6416],[106.3477,27.8174],[106.1719,28.125],[105.9082,28.125],[105.6445,28.4326],[105.9961,28.7402],[106.3477,28.5205],[106.5234,28.5645],[106.4355,28.7842],[106.5234,28.7842],[106.6113,28.6523],[106.6113,28.5205],[106.6992,28.4766],[106.875,28.7842],[107.4023,28.8721],[107.4023,29.1797],[107.5781,29.2236],[107.8418,29.1357],[107.8418,29.0039],[108.2813,29.0918],[108.3691,28.6523],[108.5449,28.6523],[108.5449,28.3887],[108.7207,28.4766],[108.7207,28.2129],[109.0723,28.2129],[109.248,28.4766],[109.3359,28.2568],[109.3359,27.9053],[109.4238,27.5977],[108.8086,27.1143],[108.8965,27.0264],[109.3359,27.1582],[109.5117,27.0264],[109.5117,26.8066],[109.3359,26.7188],[109.4238,26.5869],[109.248,26.3232],[109.4238,26.2793],[109.5117,26.0156],[109.3359,25.708],[108.9844,25.752],[109.0723,25.5322],[108.6328,25.5762],[108.6328,25.3125],[108.3691,25.5322],[108.1934,25.4443],[108.1055,25.2246],[107.8418,25.1367],[107.7539,25.2246],[107.4902,25.2246],[107.2266,25.6201],[106.9629,25.4883],[107.0508,25.2686],[106.875,25.1807],[106.1719,24.9609],[106.1719,24.7852],[105.9961,24.6533],[105.2051,24.9609],[104.6777,24.6094],[104.502,24.7412],[104.6777,24.9609],[104.5898,25.0488],[104.8535,25.2246],[104.3262,25.708],[104.6777,26.4111],[104.4141,26.6748],[103.8867,26.543],[103.7109,26.7627],[103.7109,26.9824],[103.623,27.0264],[103.8867,27.4219],[104.1504,27.2461]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"37\",\"name\":\"山东\",\"cp\":[118.7402,36.4307],\"childNum\":17},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[115.4883,36.167],[115.3125,36.5186],[115.752,36.9141],[116.0156,37.3535],[116.2793,37.3535],[116.2793,37.5732],[116.4551,37.4854],[116.8066,37.8369],[117.4219,37.8369],[117.9492,38.3203],[118.125,38.1445],[118.916,38.1445],[119.3555,37.6611],[119.0039,37.5293],[119.0039,37.3535],[119.3555,37.1338],[119.707,37.1338],[119.8828,37.3975],[120.498,37.8369],[120.5859,38.1445],[120.9375,38.4521],[121.0254,37.8369],[121.2012,37.6611],[121.9043,37.4854],[122.168,37.6172],[122.2559,37.4854],[122.6074,37.4854],[122.6953,37.3535],[122.6074,36.9141],[122.4316,36.7822],[121.8164,36.8701],[121.7285,36.6943],[121.1133,36.6064],[121.1133,36.4307],[121.377,36.2549],[120.7617,36.167],[120.9375,35.8594],[120.6738,36.0352],[119.707,35.4639],[119.9707,34.9805],[119.3555,35.0244],[119.2676,35.1123],[118.916,35.0244],[118.7402,34.7168],[118.4766,34.6729],[118.3887,34.4092],[118.2129,34.4092],[118.125,34.6289],[117.9492,34.6729],[117.5977,34.4531],[117.334,34.585],[117.2461,34.4531],[116.8066,34.9365],[116.4551,34.8926],[116.3672,34.6289],[116.1914,34.585],[115.5762,34.585],[115.4004,34.8486],[114.7852,35.0684],[115.0488,35.376],[115.2246,35.4199],[115.4883,35.7275],[116.1035,36.0791],[115.3125,35.8154],[115.4883,36.167]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"36\",\"name\":\"江西\",\"cp\":[116.0156,27.29],\"childNum\":11},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[114.2578,28.3447],[114.082,28.5645],[114.1699,28.8281],[113.9063,29.0479],[114.2578,29.3555],[114.873,29.3994],[115.4883,29.7949],[115.9277,29.707],[116.1035,29.8389],[116.2793,29.7949],[116.7188,30.0586],[116.8945,29.9268],[116.7188,29.751],[116.7188,29.6191],[117.1582,29.707],[117.0703,29.8389],[117.1582,29.9268],[117.5098,29.6191],[118.0371,29.5752],[118.2129,29.3994],[118.0371,29.1797],[118.0371,29.0479],[118.3887,28.7842],[118.4766,28.3447],[118.4766,28.3008],[118.3008,28.0811],[117.7734,27.8174],[117.5098,27.9932],[116.9824,27.6416],[117.1582,27.29],[117.0703,27.1143],[116.543,26.8066],[116.6309,26.4551],[116.3672,26.2354],[116.4551,26.1035],[116.1914,25.8838],[116.0156,25.2686],[115.8398,25.2246],[115.9277,24.917],[115.752,24.7852],[115.8398,24.5654],[115.4004,24.7852],[114.4336,24.5215],[114.1699,24.6973],[114.4336,24.9609],[114.6973,25.1367],[114.7852,25.2686],[114.6094,25.4004],[113.9941,25.2686],[113.9063,25.4443],[113.9941,26.0596],[114.2578,26.1475],[113.9941,26.1914],[114.082,26.5869],[113.9063,26.6309],[113.9063,26.9385],[113.7305,27.1143],[113.8184,27.29],[113.6426,27.3779],[113.6426,27.5977],[113.7305,27.9492],[114.2578,28.3447]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"41\",\"name\":\"河南\",\"cp\":[113.4668,33.8818],\"childNum\":17},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[110.3906,34.585],[110.8301,34.6289],[111.1816,34.8047],[111.5332,34.8486],[111.7969,35.0684],[112.0605,35.0684],[112.0605,35.2881],[112.7637,35.2002],[113.1152,35.332],[113.6426,35.6836],[113.7305,36.3428],[114.873,36.123],[114.9609,36.0791],[115.1367,36.2109],[115.3125,36.0791],[115.4883,36.167],[115.3125,35.8154],[116.1035,36.0791],[115.4883,35.7275],[115.2246,35.4199],[115.0488,35.376],[114.7852,35.0684],[115.4004,34.8486],[115.5762,34.585],[116.1914,34.585],[116.1914,34.4092],[116.543,34.2773],[116.6309,33.9258],[116.1914,33.7061],[116.0156,33.9697],[115.6641,34.0576],[115.5762,33.9258],[115.5762,33.6621],[115.4004,33.5303],[115.3125,33.1787],[114.873,33.1348],[114.873,33.0029],[115.1367,32.8711],[115.2246,32.6074],[115.5762,32.4316],[115.8398,32.5195],[115.9277,31.7725],[115.4883,31.6846],[115.4004,31.4209],[115.2246,31.4209],[115.1367,31.5967],[114.7852,31.4648],[114.6094,31.5527],[114.5215,31.7725],[114.1699,31.8604],[113.9941,31.7725],[113.8184,31.8604],[113.7305,32.4316],[113.4668,32.2998],[113.2031,32.4316],[112.3242,32.3438],[111.5332,32.6074],[111.0059,33.2666],[111.0059,33.5303],[110.6543,33.8379],[110.6543,34.1455],[110.4785,34.2334],[110.3906,34.585]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"21\",\"name\":\"辽宁\",\"cp\":[122.3438,41.0889],\"childNum\":14},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[119.2676,41.3086],[119.4434,41.6162],[119.2676,41.7041],[119.3555,42.2754],[119.5313,42.3633],[119.8828,42.1875],[120.1465,41.7041],[120.498,42.0996],[121.4648,42.4951],[121.7285,42.4512],[121.9922,42.7148],[122.3438,42.6709],[122.3438,42.8467],[122.7832,42.7148],[123.1348,42.8027],[123.3105,42.9785],[123.5742,43.0225],[123.6621,43.374],[123.8379,43.4619],[124.2773,43.2422],[124.4531,42.8467],[124.7168,43.0664],[124.8926,43.0664],[124.8926,42.8027],[125.332,42.1436],[125.4199,42.0996],[125.332,41.9678],[125.332,41.6602],[125.7715,41.2207],[125.5957,40.9131],[125.6836,40.8691],[124.541,40.21],[124.1016,39.6826],[123.3984,39.6826],[123.1348,39.4189],[123.1348,39.0234],[122.0801,39.0234],[121.5527,38.7158],[121.1133,38.6719],[120.9375,38.9795],[121.377,39.1992],[121.2012,39.5508],[122.0801,40.3857],[121.9922,40.6934],[121.7285,40.8252],[121.2012,40.8252],[120.5859,40.21],[119.8828,39.9463],[119.707,40.1221],[119.5313,40.5615],[119.2676,40.5176],[118.8281,40.8252],[119.2676,41.3086]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"14\",\"name\":\"山西\",\"cp\":[112.4121,37.6611],\"childNum\":11},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[110.918,38.7158],[111.1816,39.2432],[111.0938,39.375],[111.3574,39.4189],[111.4453,39.6387],[111.9727,39.5947],[112.3242,40.2539],[112.7637,40.166],[113.2031,40.3857],[113.5547,40.3418],[113.8184,40.5176],[114.082,40.5176],[114.082,40.7373],[114.2578,40.6055],[114.3457,40.3857],[114.5215,40.3418],[113.9941,39.9902],[114.3457,39.8584],[114.5215,39.5068],[114.3457,39.0674],[113.9063,39.0234],[113.8184,38.9355],[113.8184,38.8037],[113.5547,38.54],[113.5547,38.2764],[113.8184,38.1445],[113.9941,37.7051],[114.1699,37.6611],[113.7305,37.1338],[113.7305,36.8701],[113.4668,36.6504],[113.7305,36.3428],[113.6426,35.6836],[113.1152,35.332],[112.7637,35.2002],[112.0605,35.2881],[112.0605,35.0684],[111.7969,35.0684],[111.5332,34.8486],[111.1816,34.8047],[110.8301,34.6289],[110.3906,34.585],[110.2148,34.6729],[110.2148,34.8926],[110.5664,35.6396],[110.4785,36.123],[110.3906,37.002],[110.8301,37.6611],[110.4785,37.9688],[110.4785,38.1885],[110.8301,38.4961],[110.918,38.7158]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"34\",\"name\":\"安徽\",\"cp\":[117.2461,32.0361],\"childNum\":17},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[116.6309,33.9258],[116.543,34.2773],[116.1914,34.4092],[116.1914,34.585],[116.3672,34.6289],[116.8945,34.4092],[117.1582,34.0576],[117.5977,34.0137],[117.7734,33.7061],[118.125,33.75],[117.9492,33.2227],[118.0371,33.1348],[118.2129,33.2227],[118.3008,32.7832],[118.7402,32.7393],[118.916,32.959],[119.1797,32.8271],[119.1797,32.4756],[118.5645,32.5635],[118.6523,32.2119],[118.4766,32.168],[118.3887,31.9482],[118.916,31.5527],[118.7402,31.377],[118.8281,31.2451],[119.3555,31.2891],[119.4434,31.1572],[119.6191,31.1133],[119.6191,31.0693],[119.4434,30.6738],[119.2676,30.6299],[119.3555,30.4102],[118.916,30.3223],[118.916,29.9707],[118.7402,29.707],[118.2129,29.3994],[118.0371,29.5752],[117.5098,29.6191],[117.1582,29.9268],[117.0703,29.8389],[117.1582,29.707],[116.7188,29.6191],[116.7188,29.751],[116.8945,29.9268],[116.7188,30.0586],[116.2793,29.7949],[116.1035,29.8389],[116.1035,30.1904],[115.752,30.6738],[116.0156,31.0254],[115.5762,31.2012],[115.4004,31.4209],[115.4883,31.6846],[115.9277,31.7725],[115.8398,32.5195],[115.5762,32.4316],[115.2246,32.6074],[115.1367,32.8711],[114.873,33.0029],[114.873,33.1348],[115.3125,33.1787],[115.4004,33.5303],[115.5762,33.6621],[115.5762,33.9258],[115.6641,34.0576],[116.0156,33.9697],[116.1914,33.7061],[116.6309,33.9258]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"35\",\"name\":\"福建\",\"cp\":[118.3008,25.9277],\"childNum\":9},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[118.4766,28.3008],[118.8281,28.2568],[118.7402,28.0371],[118.916,27.4658],[119.2676,27.4219],[119.6191,27.6855],[119.7949,27.29],[120.2344,27.4219],[120.4102,27.1582],[120.7617,27.0264],[120.6738,26.8945],[120.2344,26.8506],[120.2344,26.7188],[120.4102,26.6748],[120.498,26.3672],[120.2344,26.2793],[120.4102,26.1475],[120.0586,26.1914],[119.9707,25.9277],[119.7949,25.9277],[119.9707,25.4004],[119.7949,25.2686],[119.5313,25.1367],[119.4434,25.0049],[119.2676,25.0928],[118.916,24.8291],[118.6523,24.5215],[118.4766,24.5215],[118.4766,24.4336],[118.2129,24.3457],[118.2129,24.1699],[117.8613,23.9941],[117.7734,23.7744],[117.5098,23.5986],[117.1582,23.5547],[116.9824,23.9063],[116.9824,24.1699],[116.7188,24.6533],[116.543,24.6094],[116.3672,24.873],[116.2793,24.7852],[115.9277,24.917],[115.8398,25.2246],[116.0156,25.2686],[116.1914,25.8838],[116.4551,26.1035],[116.3672,26.2354],[116.6309,26.4551],[116.543,26.8066],[117.0703,27.1143],[117.1582,27.29],[116.9824,27.6416],[117.5098,27.9932],[117.7734,27.8174],[118.3008,28.0811],[118.4766,28.3008]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"33\",\"name\":\"浙江\",\"cp\":[120.498,29.0918],\"childNum\":11},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[118.2129,29.3994],[118.7402,29.707],[118.916,29.9707],[118.916,30.3223],[119.3555,30.4102],[119.2676,30.6299],[119.4434,30.6738],[119.6191,31.0693],[119.6191,31.1133],[119.9707,31.1572],[120.498,30.8057],[120.9375,31.0254],[121.2891,30.6738],[121.9922,30.8057],[122.6953,30.8936],[122.8711,30.7178],[122.959,30.1465],[122.6074,30.1025],[122.6074,29.9268],[122.168,29.5313],[122.3438,28.8721],[121.9922,28.8721],[121.9922,28.4326],[121.7285,28.3447],[121.7285,28.2129],[121.4648,28.2129],[121.5527,28.0371],[121.2891,27.9492],[121.1133,27.4219],[120.6738,27.334],[120.6738,27.1582],[120.9375,27.0264],[120.7617,27.0264],[120.4102,27.1582],[120.2344,27.4219],[119.7949,27.29],[119.6191,27.6855],[119.2676,27.4219],[118.916,27.4658],[118.7402,28.0371],[118.8281,28.2568],[118.4766,28.3008],[118.4766,28.3447],[118.3887,28.7842],[118.0371,29.0479],[118.0371,29.1797],[118.2129,29.3994]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"32\",\"name\":\"江苏\",\"cp\":[120.0586,32.915],\"childNum\":13},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[116.3672,34.6289],[116.4551,34.8926],[116.8066,34.9365],[117.2461,34.4531],[117.334,34.585],[117.5977,34.4531],[117.9492,34.6729],[118.125,34.6289],[118.2129,34.4092],[118.3887,34.4092],[118.4766,34.6729],[118.7402,34.7168],[118.916,35.0244],[119.2676,35.1123],[119.3555,35.0244],[119.3555,34.8486],[119.707,34.585],[120.3223,34.3652],[120.9375,33.0469],[121.0254,32.6514],[121.377,32.4756],[121.4648,32.168],[121.9043,31.9922],[121.9922,31.6846],[121.9922,31.5967],[121.2012,31.8604],[121.1133,31.7285],[121.377,31.5088],[121.2012,31.4648],[120.9375,31.0254],[120.498,30.8057],[119.9707,31.1572],[119.6191,31.1133],[119.4434,31.1572],[119.3555,31.2891],[118.8281,31.2451],[118.7402,31.377],[118.916,31.5527],[118.3887,31.9482],[118.4766,32.168],[118.6523,32.2119],[118.5645,32.5635],[119.1797,32.4756],[119.1797,32.8271],[118.916,32.959],[118.7402,32.7393],[118.3008,32.7832],[118.2129,33.2227],[118.0371,33.1348],[117.9492,33.2227],[118.125,33.75],[117.7734,33.7061],[117.5977,34.0137],[117.1582,34.0576],[116.8945,34.4092],[116.3672,34.6289]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"50\",\"name\":\"重庆\",\"cp\":[107.7539,30.1904],\"childNum\":40},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[108.5449,31.6846],[108.2813,31.9043],[108.3691,32.168],[108.5449,32.2119],[109.0723,31.9482],[109.248,31.7285],[109.5996,31.7285],[109.7754,31.6846],[109.6875,31.5527],[110.127,31.377],[110.2148,31.1572],[110.0391,30.8057],[109.8633,30.8936],[109.4238,30.542],[109.248,30.6299],[109.1602,30.542],[109.0723,30.6299],[108.8086,30.498],[108.6328,30.5859],[108.457,30.4102],[108.5449,30.2344],[108.457,29.7949],[108.6328,29.8389],[108.9844,29.3115],[109.0723,29.3555],[109.248,29.1357],[109.248,28.4766],[109.0723,28.2129],[108.7207,28.2129],[108.7207,28.4766],[108.5449,28.3887],[108.5449,28.6523],[108.3691,28.6523],[108.2813,29.0918],[107.8418,29.0039],[107.8418,29.1357],[107.5781,29.2236],[107.4023,29.1797],[107.4023,28.8721],[106.875,28.7842],[106.6992,28.4766],[106.6113,28.5205],[106.6113,28.6523],[106.5234,28.7842],[106.4355,28.7842],[106.5234,28.5645],[106.3477,28.5205],[106.2598,28.8721],[105.8203,28.96],[105.7324,29.2676],[105.4688,29.3115],[105.293,29.5313],[105.7324,29.8828],[105.5566,30.1025],[105.6445,30.2783],[105.8203,30.4541],[106.2598,30.1904],[106.6113,30.3223],[106.7871,30.0146],[107.0508,30.0146],[107.4902,30.6299],[107.4023,30.7617],[107.4902,30.8496],[107.9297,30.8496],[108.1934,31.5088],[108.5449,31.6846]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"64\",\"name\":\"宁夏\",\"cp\":[105.9961,37.3096],\"childNum\":5},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[104.3262,37.4414],[105.8203,37.793],[105.9082,38.7158],[106.3477,39.2871],[106.7871,39.375],[106.9629,38.9795],[106.5234,38.3203],[106.7871,38.1885],[107.3145,38.1006],[107.666,37.8809],[107.3145,37.6172],[107.3145,37.0898],[106.6113,37.0898],[106.6113,36.7822],[106.4355,36.5625],[106.5234,36.4746],[106.5234,36.2549],[106.875,36.123],[106.9629,35.8154],[106.6992,35.6836],[106.4355,35.6836],[106.5234,35.332],[106.3477,35.2441],[106.2598,35.4199],[106.084,35.376],[105.9961,35.4199],[106.084,35.4639],[105.9961,35.4639],[105.8203,35.5518],[105.7324,35.7275],[105.3809,35.7715],[105.293,35.9912],[105.4688,36.123],[105.2051,36.6943],[105.293,36.8262],[104.8535,37.2217],[104.5898,37.2217],[104.5898,37.4414],[104.3262,37.4414]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"46\",\"name\":\"海南\",\"cp\":[109.9512,19.2041],\"childNum\":18},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[108.6328,19.3799],[109.0723,19.6436],[109.248,19.9512],[109.5996,20.0391],[110.0391,20.127],[110.3906,20.127],[110.5664,20.2588],[110.6543,20.2588],[111.0938,19.9512],[111.2695,19.9951],[110.6543,19.1602],[110.5664,18.6768],[110.2148,18.5889],[110.0391,18.3691],[109.8633,18.3691],[109.6875,18.1055],[108.9844,18.2813],[108.6328,18.457],[108.6328,19.3799]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"71\",\"name\":\"台湾\",\"cp\":[121.0254,23.5986],\"childNum\":1},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[121.9043,25.0488],[121.9922,25.0049],[121.8164,24.7412],[121.9043,24.5654],[121.6406,24.0381],[121.377,23.1152],[121.0254,22.6758],[120.8496,22.0605],[120.7617,21.9287],[120.6738,22.3242],[120.2344,22.5879],[120.0586,23.0713],[120.1465,23.6865],[121.0254,25.0488],[121.5527,25.3125],[121.9043,25.0488]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"11\",\"name\":\"北京\",\"cp\":[116.4551,40.2539],\"childNum\":19},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[117.4219,40.21],[117.334,40.1221],[117.2461,40.0781],[116.8066,39.9902],[116.8945,39.8145],[116.8945,39.6826],[116.8066,39.5947],[116.543,39.5947],[116.3672,39.4629],[116.1914,39.5947],[115.752,39.5068],[115.4883,39.6387],[115.4004,39.9463],[115.9277,40.2539],[115.752,40.5615],[116.1035,40.6055],[116.1914,40.7813],[116.4551,40.7813],[116.3672,40.9131],[116.6309,41.0449],[116.9824,40.6934],[117.4219,40.6494],[117.2461,40.5176],[117.4219,40.21]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"12\",\"name\":\"天津\",\"cp\":[117.4219,39.4189],\"childNum\":18},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[116.8066,39.5947],[116.8945,39.6826],[117.1582,39.6387],[117.1582,39.8145],[117.2461,40.0781],[117.334,40.1221],[117.4219,40.21],[117.6855,40.0781],[117.6855,39.9902],[117.5098,39.9902],[117.5098,39.7705],[117.6855,39.5947],[117.9492,39.5947],[117.8613,39.4189],[118.0371,39.2432],[118.0371,39.1992],[117.8613,39.1113],[117.5977,38.6279],[117.2461,38.54],[116.7188,38.8037],[116.7188,38.9355],[116.8945,39.1113],[116.8066,39.5947]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"31\",\"name\":\"上海\",\"cp\":[121.4648,31.2891],\"childNum\":19},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[120.9375,31.0254],[121.2012,31.4648],[121.377,31.5088],[121.1133,31.7285],[121.2012,31.8604],[121.9922,31.5967],[121.9043,31.1572],[121.9922,30.8057],[121.2891,30.6738],[120.9375,31.0254]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"81\",\"name\":\"香港\",\"cp\":[114.2578,22.3242],\"childNum\":1},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[114.6094,22.4121],[114.5215,22.1484],[114.3457,22.1484],[113.9063,22.1484],[113.8184,22.1924],[113.9063,22.4121],[114.1699,22.5439],[114.3457,22.5439],[114.4336,22.5439],[114.4336,22.4121],[114.6094,22.4121]]]}},\r\n{\"type\": \"Feature\",\"properties\":{\"id\":\"82\",\"name\":\"澳门\",\"cp\":[113.5547,22.1484],\"childNum\":1},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[113.5986,22.1649],[113.6096,22.1265],[113.5547,22.11],[113.5437,22.2034],[113.5767,22.2034],[113.5986,22.1649]]]}}\r\n]\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/components/Bmap/china.js"],"sourceRoot":""}