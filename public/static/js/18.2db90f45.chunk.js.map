{"version":3,"sources":["common/components/Table/index.js","pages/SystemSetup/EarlyWarningSetting/WhiteListConfig/Personal/ChooseStudentModel.js","pages/SystemSetup/EarlyWarningSetting/WhiteListConfig/Personal/AddOrEditPage.js"],"names":["TableComp","page","this","props","changePage","Object","assign","pagination","paginationStyle","marginTop","textAlign","react__WEBPACK_IMPORTED_MODULE_9___default","a","createElement","antd_es_table__WEBPACK_IMPORTED_MODULE_3__","total","antd_es_pagination__WEBPACK_IMPORTED_MODULE_1__","style","showQuickJumper","defaultCurrent","current","defaultPageSize","pageSize","showTotal","concat","onChange","bind","undefined","Component","columns","title","dataIndex","width","align","ChooseStudentModel","state","pageNum","studentLists","studentNo","name","selectedRowKeys","selectedRows","getData","gender","idcard","politicalStatus","schoolYear","collegeName","collegeCode","majorName","majorCode","classCode","className","status","nation","birthday","degree","currentGrade","graduateYear","_this","setState","length","onOk","message","warn","rowClick","record","key","onSelectChange","selectedStudent","_this2","dataSource","forEach","item","index","rowSelection","type","columnWidth","_react_16_6_3_react_default","MainModal","visible","centered","onCancel","row","marginBottom","col","span","input","placeholder","value","e","target","es_button","icon","onClick","Table","bordered","size","onRow","FormItem","es_form","Item","RangePicker","date_picker","formItemLayout","labelCol","wrapperCol","paddingLeft","warnModules","label","disabledDate","moment","endOf","dateFormat","studentStyle","height","borderRadius","border","cursor","lineHeight","AddOrEditPage","editId","editInfo","chooseStudent","form","setFieldsValue","saveAction","validateFields","err","values","remark","warnModule","rangePicker","data","missAlarm","indexOf","networkAlarm","studyAlarm","consumeAlarm","startDate","format","endDate","id","success","history","push","params","getHashParam","filter","_this3","getFieldDecorator","breadcrumb","card","paddingTop","rules","required","initialValue","justify","es_checkbox","Group","map","TextArea","resize","maxLength","marginRight","Personal_ChooseStudentModel","AddOrEditPageForm","create","withRouter"],"mappings":"qLAGMA,qLACSC,GACJC,KAAKC,MAAMC,YACVF,KAAKC,MAAMC,WAAWH,oCAI1B,IAAIE,EAAQE,OAAOC,OAAO,GAAGJ,KAAKC,MAAM,CACpCI,YAAW,IAEXC,EAAkBH,OAAOC,OAAO,GAAG,CAACG,UAAU,GAAGC,UAAU,SAAUR,KAAKC,MAAMK,iBAAmB,IACvG,OACIG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAAC,EAAA,EAAWX,GACTD,KAAKC,MAAMI,YAAcL,KAAKC,MAAMY,MAAQJ,EAAAC,EAAAC,cAAAG,EAAA,GAC1CC,MAAOT,EACPU,iBAAe,EACfC,eAAgB,EAChBC,QAASlB,KAAKC,MAAMiB,QACpBC,gBAAiBnB,KAAKC,MAAMkB,iBAAmB,GAC/CC,SAAUpB,KAAKC,MAAMmB,UAAY,GACjCC,UAAW,SAACR,GAAD,eAAAS,OAAeT,EAAf,uBACXA,MAAOb,KAAKC,MAAMY,MAClBU,SAAUvB,KAAKE,WAAWsB,KAAKxB,aAAUyB,UAvBrCC,aA6BT5B,sUC3BX6B,EAAU,CAAC,CACXC,MAAO,eACPC,UAAW,QACXC,MAAO,GACPC,MAAO,UACR,CACCH,MAAO,eACPC,UAAW,YACXC,MAAO,IACPC,MAAO,UACR,CACCH,MAAO,eACPC,UAAW,OACXC,MAAO,IACPC,MAAO,UACR,CACCH,MAAO,eACPC,UAAW,cACXE,MAAO,WA0LIC,6MAtLXC,MAAQ,CACJC,QAAS,EACTd,SAAU,GACVP,MAAO,EACPsB,aAAc,GACdC,eAAWX,EACXY,UAAMZ,EACNa,gBAAgB,GAChBC,aAAa,MAWjBC,QAAU,WACN,IAAML,EAAe,CACjB,CACIC,UAAa,YACbC,KAAQ,qBACRI,OAAU,SACVC,OAAU,qBACVC,gBAAmB,eACnBC,WAAc,KACdC,YAAe,iEACfC,YAAe,SACfC,UAAa,uCACbC,UAAa,OACbC,UAAa,UACbC,UAAa,mBACbC,OAAU,IACVC,OAAU,eACVC,SAAY,aACZC,OAAU,IACVC,aAAgB,OAChBC,aAAgB,QAEpB,CACIpB,UAAa,YACbC,KAAQ,qBACRI,OAAU,SACVC,OAAU,qBACVC,gBAAmB,2BACnBC,WAAc,KACdC,YAAe,uEACfC,YAAe,SACfC,UAAa,2BACbC,UAAa,OACbC,UAAa,UACbC,UAAa,mBACbC,OAAU,IACVC,OAAU,eACVC,SAAY,aACZC,OAAU,IACVC,aAAgB,OAChBC,aAAgB,QAEpB,CACIpB,UAAa,YACbC,KAAQ,qBACRI,OAAU,SACVC,OAAU,qBACVC,gBAAmB,2BACnBC,WAAc,KACdC,YAAe,iEACfC,YAAe,SACfC,UAAa,uCACbC,UAAa,OACbC,UAAa,UACbC,UAAa,mBACbC,OAAU,IACVC,OAAU,eACVC,SAAY,aACZC,OAAU,IACVC,aAAgB,OAChBC,aAAgB,QAEpB,CACIpB,UAAa,YACbC,KAAQ,qBACRI,OAAU,SACVC,OAAU,qBACVC,gBAAmB,2BACnBC,WAAc,KACdC,YAAe,iEACfC,YAAe,SACfC,UAAa,uCACbC,UAAa,OACbC,UAAa,UACbC,UAAa,mBACbC,OAAU,IACVC,OAAU,eACVC,SAAY,aACZC,OAAU,IACVC,aAAgB,OAChBC,aAAgB,SAGxBC,EAAKC,SAAS,CACVvB,eACAtB,MAAMsB,EAAawB,YAG3BC,KAAO,WACAH,EAAKxB,MAAMM,aAAa,GACvBkB,EAAKxD,MAAM2D,KAAKH,EAAKxB,MAAMM,aAAa,IAExCsB,EAAA,EAAQC,KAAK,2CAGrB5D,WAAa,SAACH,GACV0D,EAAKC,SAAS,CAACxB,QAAQnC,GAAM,kBAAI0D,EAAKjB,eAE1CuB,SAAW,SAACC,GACRP,EAAKC,SAAS,CACVpB,gBAAiB,CAAC0B,EAAOC,KACzB1B,aAAc,CAACyB,QAGvBE,eAAiB,SAAC5B,EAAiBC,GAC/BkB,EAAKC,SAAS,CAAEpB,kBAAiBC,sGAjH9BvC,KAAKC,MAAMkE,iBACVnE,KAAK0D,SAAS,CACVpB,gBAAgB,CAACtC,KAAKC,MAAMkE,gBAAgB/B,WAC5CG,aAAa,CAACvC,KAAKC,MAAMkE,mBAGjCnE,KAAKwC,2CA6GA,IAAA4B,EAAApE,KACCqE,EAAarE,KAAKiC,MAAME,cAAgB,GAC9CkC,EAAWC,QAAQ,SAACC,EAAKC,GACrBH,EAAWG,GAAOP,IAAMM,EAAKnC,UAC7BiC,EAAWG,GAAOA,MAAQA,EAAQ,IAGtC,IACMC,EAAe,CACjBnC,gBAFoBtC,KAAKiC,MAAMK,gBAG/BoC,KAAM,QACNC,YAAa,MACbpD,SAAUvB,KAAKkE,gBAGnB,OACIU,EAAAlE,EAAAC,cAACkE,EAAA,EAAD,CACIjD,MAAO5B,KAAKC,MAAM2B,MAClBkD,QAAS9E,KAAKC,MAAM6E,QACpBC,UAAQ,EACRC,SAAUhF,KAAKC,MAAM+E,SACrBpB,KAAM5D,KAAK4D,KACX9B,MAAO,MAEP8C,EAAAlE,EAAAC,cAAAsE,EAAA,GAAKlE,MAAO,CAACmE,aAAa,KACtBN,EAAAlE,EAAAC,cAAAwE,EAAA,GAAKC,KAAM,GAAX,qBACOR,EAAAlE,EAAAC,cAAA0E,EAAA,GAAOtE,MAAO,CAACe,MAAM,KAAMwD,YAAa,iCAASC,MAAOvF,KAAKiC,MAAMG,UAClEb,SAAU,SAACiE,GAAD,OAAKpB,EAAKV,SAAS,CAACtB,UAAUoD,EAAEC,OAAOF,YAEzDX,EAAAlE,EAAAC,cAAAwE,EAAA,GAAKC,KAAM,GAAX,qBACOR,EAAAlE,EAAAC,cAAA0E,EAAA,GAAOtE,MAAO,CAACe,MAAM,KAAMwD,YAAa,6CAAWC,MAAOvF,KAAKiC,MAAMI,KACpEd,SAAU,SAACiE,GAAD,OAAKpB,EAAKV,SAAS,CAACrB,KAAKmD,EAAEC,OAAOF,YAEpDX,EAAAlE,EAAAC,cAAAwE,EAAA,GAAKC,KAAM,IACPR,EAAAlE,EAAAC,cAAA+E,EAAA,GAAQC,KAAK,SAASjB,KAAK,UAAUkB,QAAS5F,KAAKwC,SAAnD,mBAGRoC,EAAAlE,EAAAC,cAACkF,EAAA,EAAD,CAAOxB,WAAYA,EACfyB,UAAQ,EACRrB,aAAcA,EACd9C,QAASA,EACTT,QAASlB,KAAKiC,MAAMC,QACpB7B,YAAU,EACVC,gBAAiB,CAACE,UAAU,SAC5BuF,KAAK,QACLlF,MAAOb,KAAKiC,MAAMpB,MAClBX,WAAYF,KAAKE,WACjB8F,MAAO,SAAChC,EAAQQ,GACZ,MAAO,CACHoB,QAAS,kBAAMxB,EAAKL,SAASC,EAAQQ,gBAhLhC9C,sCCnB3BuE,EAAWC,EAAA,EAAKC,KAChBC,EAAcC,EAAA,EAAWD,YAEzBE,EAAiB,CACnBC,SAAU,CAAEnB,KAAM,IAClBoB,WAAY,CAAEpB,KAAM,GAAIrE,MAAM,CAAC0F,YAAY,UAGzCC,EAAc,CAChB,CAAEC,MAAO,2BAAQpB,MAAO,aACxB,CAAEoB,MAAO,2BAAQpB,MAAO,gBACxB,CAAEoB,MAAO,2BAAQpB,MAAO,cACxB,CAAEoB,MAAO,2BAAQpB,MAAO,iBAEtBqB,EAAe,SAAC1F,GAClB,OAAOA,GAAWA,EAAU2F,MAASC,MAAM,QAGzCC,EAAa,aAEbC,EAAe,CACjBlF,MAAM,IAAImF,OAAO,GAAGC,aAAa,EACjCC,OAAO,qBAAqBC,OAAO,UACnC7G,WAAW,GAAG8G,WAAW,OAAO7G,UAAU,UAExC8G,6MACFrF,MAAQ,CACJ6C,SAAS,EACTX,qBAAgB1C,EAChB8F,YAAO9F,EACP+F,cAAS/F,KAqCbgG,cAAgB,SAACtD,GACbV,EAAKC,SAAS,CAACS,kBAAgBW,SAAQ,IACvCrB,EAAKxD,MAAMyH,KAAKC,eAAe,CAACvF,UAAW+B,EAAgB/B,eAE/DwF,WAAa,WACTnE,EAAKxD,MAAMyH,KAAKG,eACZ,SAACC,EAAIC,GACD,IAAKD,EAAK,KACE1F,EAA+C2F,EAA/C3F,UAAW4F,EAAoCD,EAApCC,OAAQC,EAA4BF,EAA5BE,WAAYC,EAAgBH,EAAhBG,YAKnCC,EAAO,CACP/F,YACAgG,UANYH,EAAWI,QAAQ,cAAc,EAAE,EAAE,EAOjDC,aANeL,EAAWI,QAAQ,iBAAiB,EAAE,EAAE,EAOvDE,WANaN,EAAWI,QAAQ,eAAe,EAAE,EAAE,EAOnDG,aANeP,EAAWI,QAAQ,iBAAiB,EAAE,EAAE,EAOvDL,SACAS,UAAUP,EAAY,GAAGQ,OAAO3B,GAChC4B,QAAQT,EAAY,GAAGQ,OAAO3B,IAE/BtD,EAAKxB,MAAMuF,WACVW,EAAKS,GAAKnF,EAAKxB,MAAMuF,SAASoB,IAElC/E,EAAA,EAAQgF,QAAQ,iCAAQ,EAAE,WACtBpF,EAAKxD,MAAM6I,QAAQC,KAAK,kJA9DxB,IAAA3E,EAAApE,KACZgJ,EAASC,cACVD,EAAOJ,IAEN5I,KAAK0D,SAAS,CAAC6D,OAAOyB,EAAOJ,IAAI,WAE7B,IAAIT,EAAQ,CACRS,GAAM,mCACNxG,UAAa,YACbgG,UAAa,EACbE,aAAgB,EAChBC,WAAc,EACdC,aAAgB,EAChBR,OAAU,OACVS,UAAa,aACbE,QAAW,aACXtG,KAAQ,qBACRI,OAAU,SACVI,YAAe,kEAEfoF,EAAa,CACI,IAAjBE,EAAKC,UAAc,YAAY,KACX,IAApBD,EAAKG,aAAiB,eAAe,KACnB,IAAlBH,EAAKI,WAAe,aAAa,KACb,IAApBJ,EAAKK,aAAiB,eAAe,MACvCU,OAAO,SAAA3E,GAAI,OAAS,OAAPA,IAEXiD,EAAWrH,OAAOC,OAAO,GAAG,CAAE6H,cAAaE,IAAS,GACxD/D,EAAKV,SAAS,CACV8D,WACArD,gBAAgBqD,uCAuCxB,IAAA2B,EAAAnJ,KACIoJ,EAAsBpJ,KAAKC,MAAMyH,KAAjC0B,kBACJ5B,EAAWxH,KAAKiC,MAAMuF,SACtBrD,EAAkBnE,KAAKiC,MAAMkC,gBACjC,OACIS,EAAAlE,EAAAC,cAAA,WACIiE,EAAAlE,EAAAC,cAAA0I,EAAA,GAAYnG,UAAU,cAClB0B,EAAAlE,EAAAC,cAAA0I,EAAA,EAAYlD,KAAZ,iCACAvB,EAAAlE,EAAAC,cAAA0I,EAAA,EAAYlD,KAAZ,iCACAvB,EAAAlE,EAAAC,cAAA0I,EAAA,EAAYlD,KAAZ,wCAEJvB,EAAAlE,EAAAC,cAAA,OAAKuC,UAAU,kBACX0B,EAAAlE,EAAAC,cAAA2I,EAAA,GAAM1H,MAAOgD,EAAAlE,EAAAC,cAAA,OAAKuC,UAAU,gBAAgBlD,KAAKiC,MAAMsF,OAAO,yDAAY,2DACtE3C,EAAAlE,EAAAC,cAACsF,EAAD9F,OAAAC,OAAA,GAAckG,EAAd,CAA8BvF,MAAO,CAACwI,WAAW,IAAK5C,MAAM,6BACvDyC,EAAkB,YAAa,CAC5BI,MAAO,CAAC,CACJC,UAAU,EACV5F,QAAS,yCAEb6F,aAAclC,GAAUA,EAASpF,WALpCgH,CAOGxE,EAAAlE,EAAAC,cAAAsE,EAAA,GAAKP,KAAM,OAAQ3C,MAAO,SAAU4H,QAAS,SACzC5I,MAAOiG,EACPpB,QAAS,kBAAIuD,EAAKzF,SAAS,CAACoB,SAAQ,MACnCX,EACGS,EAAAlE,EAAAC,cAAA,WACKwD,EAAgB9B,KADrB,IAC2BuC,EAAAlE,EAAAC,cAAA,WACtBwD,EAAgB/B,UAFrB,SAEiC+B,EAAgBtB,aAGjD+B,EAAAlE,EAAAC,cAAA,WAAKiE,EAAAlE,EAAAC,cAAAgF,EAAA,GAAMjB,KAAK,SAAhB,gCAMhBE,EAAAlE,EAAAC,cAACsF,EAAD9F,OAAAC,OAAA,GAAckG,EAAd,CAA8BK,MAAM,+CAC/ByC,EAAkB,cAAe,CAC9BI,MAAO,CAAC,CACJ9E,KAAM,QACN+E,UAAU,EACV5F,QAAS,2DAEb6F,aAAclC,GAAU,CAACX,IAAOW,EAASiB,UAAW1B,GAAYF,IAAOW,EAASmB,QAAS5B,KAN5FqC,CAQGxE,EAAAlE,EAAAC,cAACyF,EAAD,CAAarF,MAAO,CAACe,MAAM,KAC3B8E,aAAcA,MAGtBhC,EAAAlE,EAAAC,cAACsF,EAAD9F,OAAAC,OAAA,GAAckG,EAAd,CAA8BK,MAAM,6BAC/ByC,EAAkB,aAAc,CAC7BI,MAAO,CAAC,CACJ9E,KAAM,QACN+E,UAAU,EACV5F,QAAS,qDAEb6F,aAAclC,GAAUA,EAASS,YANpCmB,CAQGxE,EAAAlE,EAAAC,cAAAiJ,EAAA,EAAUC,MAAV,KACKnD,EAAYoD,IAAI,SAAAvF,GAAI,OACjBK,EAAAlE,EAAAC,cAAA,OAAKI,MAAO,CAACwI,WAAW,IAAKtF,IAAKM,EAAKgB,OAAOX,EAAAlE,EAAAC,cAAAiJ,EAAA,GAAUrE,MAAOhB,EAAKgB,OAAQhB,EAAKoC,aAKjG/B,EAAAlE,EAAAC,cAACsF,EAAD9F,OAAAC,OAAA,GAAckG,EAAd,CAA8BK,MAAM,iBAC/ByC,EAAkB,SAAS,CACxBM,aAAclC,GAAUA,EAASQ,QADpCoB,CAGGxE,EAAAlE,EAAAC,cAAA0E,EAAA,EAAO0E,SAAP,CAAgBhJ,MAAO,CAACe,MAAM,IAAImF,OAAO,IAAI+C,OAAO,QAASC,UAAU,SAG/ErF,EAAAlE,EAAAC,cAAAsE,EAAA,OACIL,EAAAlE,EAAAC,cAAAwE,EAAA,EAASmB,EAAeC,UACxB3B,EAAAlE,EAAAC,cAAAwE,EAAA,EAASmB,EAAeE,WACpB5B,EAAAlE,EAAAC,cAAA+E,EAAA,GAAQK,KAAK,QAAQrB,KAAK,UAAU3D,MAAO,CAACmJ,YAAY,IAAKtE,QAAS5F,KAAK4H,YAAa,iBACxFhD,EAAAlE,EAAAC,cAAA+E,EAAA,GAAQK,KAAK,QAAQH,QAAS,WAC1BuD,EAAKlJ,MAAM6I,QAAQC,KAAK,0DACxB,qBAKnB/I,KAAKiC,MAAM6C,QACRF,EAAAlE,EAAAC,cAACwJ,EAAD,CAAoBvI,MAAO,2BACvBkD,QAAS9E,KAAKiC,MAAM6C,QACpBX,gBAAiBnE,KAAKiC,MAAMkC,gBAC5Ba,SAAU,kBAAImE,EAAKzF,SAAS,CAACoB,SAAQ,KACrClB,KAAM5D,KAAKyH,gBACjB,aArKU/F,aA0KtB0I,EAAoBlE,EAAA,EAAKmE,QAALnE,CAAcoB,GACzBgD,sBAAWF","file":"static/js/18.2db90f45.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Table, Pagination } from 'antd';\r\n\r\nclass TableComp extends Component {\r\n    changePage(page){\r\n        if(this.props.changePage){\r\n            this.props.changePage(page)\r\n        }\r\n    }\r\n    render() {\r\n        let props = Object.assign({},this.props,{\r\n            pagination:false\r\n        })\r\n        let paginationStyle = Object.assign({},{marginTop:20,textAlign:'right'},(this.props.paginationStyle || {}))\r\n        return (\r\n            <div>\r\n                <Table {...props} />\r\n                {(this.props.pagination && this.props.total)?(<Pagination \r\n                    style={paginationStyle}\r\n                    showQuickJumper \r\n                    defaultCurrent={1}\r\n                    current={this.props.current}\r\n                    defaultPageSize={this.props.defaultPageSize || 10}\r\n                    pageSize={this.props.pageSize || 10}\r\n                    showTotal={(total) => `共${total}条数据`}\r\n                    total={this.props.total}\r\n                    onChange={this.changePage.bind(this)}/>):undefined}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TableComp;","import React, { Component } from 'react'\r\nimport { Button, Input, Row, Col, message } from 'antd'\r\nimport MainModal from '@/common/components/MainModal'\r\nimport Table from '@/common/components/Table'\r\n\r\nlet columns = [{\r\n    title: '序号',\r\n    dataIndex: 'index',\r\n    width: 80,\r\n    align: 'center',\r\n}, {\r\n    title: '学号',\r\n    dataIndex: 'studentNo',\r\n    width: 200,\r\n    align: 'center'\r\n}, {\r\n    title: '姓名',\r\n    dataIndex: 'name',\r\n    width: 250,\r\n    align: 'center'\r\n}, {\r\n    title: '院系',\r\n    dataIndex: 'collegeName',\r\n    align: 'center'\r\n}];\r\n\r\nclass ChooseStudentModel extends Component {\r\n    state = {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n        total: 0,\r\n        studentLists: [],\r\n        studentNo: undefined,\r\n        name: undefined,\r\n        selectedRowKeys:[],\r\n        selectedRows:[]\r\n    }\r\n    componentWillMount(){\r\n        if(this.props.selectedStudent){\r\n            this.setState({\r\n                selectedRowKeys:[this.props.selectedStudent.studentNo],\r\n                selectedRows:[this.props.selectedStudent]\r\n            })\r\n        }\r\n        this.getData();\r\n    }\r\n    getData = () => {\r\n        const studentLists = [\r\n            {\r\n                \"studentNo\": \"131594206\",\r\n                \"name\": \"何志一\",\r\n                \"gender\": \"男\",\r\n                \"idcard\": \"320112199510271617\",\r\n                \"politicalStatus\": \"群众\",\r\n                \"schoolYear\": 2015,\r\n                \"collegeName\": \"机械工程学院(联合培养)\",\r\n                \"collegeCode\": \"L40010\",\r\n                \"majorName\": \"机械电子工程\",\r\n                \"majorCode\": \"7101\",\r\n                \"classCode\": \"2711501\",\r\n                \"className\": \"机电1514\",\r\n                \"status\": \"1\",\r\n                \"nation\": \"汉族\",\r\n                \"birthday\": \"1995-10-27\",\r\n                \"degree\": \"2\",\r\n                \"currentGrade\": \"2015\",\r\n                \"graduateYear\": \"2019\"\r\n            },\r\n            {\r\n                \"studentNo\": \"134413117\",\r\n                \"name\": \"许金鹏\",\r\n                \"gender\": \"男\",\r\n                \"idcard\": \"320682199404256591\",\r\n                \"politicalStatus\": \"共青团员\",\r\n                \"schoolYear\": 2014,\r\n                \"collegeName\": \"自动化学院(电气工程学院)\",\r\n                \"collegeCode\": \"L40050\",\r\n                \"majorName\": \"通信工程\",\r\n                \"majorCode\": \"7302\",\r\n                \"classCode\": \"2741403\",\r\n                \"className\": \"通信1414\",\r\n                \"status\": \"1\",\r\n                \"nation\": \"汉族\",\r\n                \"birthday\": \"1994-04-25\",\r\n                \"degree\": \"2\",\r\n                \"currentGrade\": \"2014\",\r\n                \"graduateYear\": \"2018\"\r\n            },\r\n            {\r\n                \"studentNo\": \"141594102\",\r\n                \"name\": \"陈根亮\",\r\n                \"gender\": \"男\",\r\n                \"idcard\": \"320723199504254011\",\r\n                \"politicalStatus\": \"共青团员\",\r\n                \"schoolYear\": 2014,\r\n                \"collegeName\": \"机械工程学院(联合培养)\",\r\n                \"collegeCode\": \"L40010\",\r\n                \"majorName\": \"机械电子工程\",\r\n                \"majorCode\": \"7101\",\r\n                \"classCode\": \"2711401\",\r\n                \"className\": \"机电1414\",\r\n                \"status\": \"1\",\r\n                \"nation\": \"汉族\",\r\n                \"birthday\": \"1995-04-25\",\r\n                \"degree\": \"2\",\r\n                \"currentGrade\": \"2014\",\r\n                \"graduateYear\": \"2018\"\r\n            },\r\n            {\r\n                \"studentNo\": \"141594103\",\r\n                \"name\": \"陈金鹏\",\r\n                \"gender\": \"男\",\r\n                \"idcard\": \"320124199503062812\",\r\n                \"politicalStatus\": \"共青团员\",\r\n                \"schoolYear\": 2014,\r\n                \"collegeName\": \"机械工程学院(联合培养)\",\r\n                \"collegeCode\": \"L40010\",\r\n                \"majorName\": \"机械电子工程\",\r\n                \"majorCode\": \"7101\",\r\n                \"classCode\": \"2711401\",\r\n                \"className\": \"机电1414\",\r\n                \"status\": \"1\",\r\n                \"nation\": \"汉族\",\r\n                \"birthday\": \"1995-03-06\",\r\n                \"degree\": \"2\",\r\n                \"currentGrade\": \"2014\",\r\n                \"graduateYear\": \"2018\"\r\n            },\r\n        ]\r\n        this.setState({\r\n            studentLists,\r\n            total:studentLists.length\r\n        })\r\n    }\r\n    onOk = ()=> {\r\n        if(this.state.selectedRows[0]){\r\n            this.props.onOk(this.state.selectedRows[0])\r\n        } else {\r\n            message.warn('请选择学生！')\r\n        }\r\n    }\r\n    changePage = (page)=> {\r\n        this.setState({pageNum:page},()=>this.getData())\r\n    }\r\n    rowClick = (record) => {\r\n        this.setState({\r\n            selectedRowKeys: [record.key],\r\n            selectedRows: [record]\r\n        })\r\n    }\r\n    onSelectChange = (selectedRowKeys, selectedRows) => {\r\n        this.setState({ selectedRowKeys, selectedRows });\r\n    }\r\n    render() {\r\n        const dataSource = this.state.studentLists || [];\r\n        dataSource.forEach((item,index)=>{\r\n            dataSource[index].key = item.studentNo;\r\n            dataSource[index].index = index + 1;\r\n        })\r\n\r\n        const selectedRowKeys = this.state.selectedRowKeys;\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            type: 'radio',\r\n            columnWidth: \"0px\",\r\n            onChange: this.onSelectChange,\r\n        };\r\n\r\n        return (\r\n            <MainModal\r\n                title={this.props.title}\r\n                visible={this.props.visible}\r\n                centered\r\n                onCancel={this.props.onCancel}\r\n                onOk={this.onOk}\r\n                width={1004}\r\n            >\r\n                <Row style={{marginBottom:24}}>\r\n                    <Col span={5}>\r\n                        学号：<Input style={{width:132}} placeholder={'请输入学号'} value={this.state.studentNo} \r\n                            onChange={(e)=>this.setState({studentNo:e.target.value})}/>\r\n                    </Col>\r\n                    <Col span={7}>\r\n                        姓名：<Input style={{width:226}} placeholder={'请输入学生姓名'} value={this.state.name} \r\n                            onChange={(e)=>this.setState({name:e.target.value})}/>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Button icon=\"search\" type=\"primary\" onClick={this.getData}>搜 索</Button>\r\n                    </Col>\r\n                </Row>\r\n                <Table dataSource={dataSource} \r\n                    bordered\r\n                    rowSelection={rowSelection}\r\n                    columns={columns}\r\n                    current={this.state.pageNum}\r\n                    pagination\r\n                    paginationStyle={{textAlign:'right'}}\r\n                    size=\"small\"\r\n                    total={this.state.total}\r\n                    changePage={this.changePage}\r\n                    onRow={(record, index) => {\r\n                        return {\r\n                            onClick: () => this.rowClick(record, index),// 点击行\r\n                        };\r\n                    }} />\r\n            </MainModal>\r\n        )\r\n    }\r\n}\r\nexport default ChooseStudentModel;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Breadcrumb, Card, Form, DatePicker, Input, Button, Icon, Row, Col, Checkbox, message } from 'antd';\r\nimport ChooseStudentModel from './ChooseStudentModel'\r\nimport moment from 'moment';\r\nimport { getHashParam } from '../../../../../utils'\r\n\r\nconst FormItem = Form.Item;\r\nconst RangePicker = DatePicker.RangePicker;\r\n\r\nconst formItemLayout = {\r\n    labelCol: { span: 10},\r\n    wrapperCol: { span: 14, style:{paddingLeft:'10px'}},\r\n};\r\n\r\nconst warnModules = [\r\n    { label: '失联预警', value: 'missAlarm' },\r\n    { label: '网络预警', value: 'networkAlarm' },\r\n    { label: '学业预警', value: 'studyAlarm' },\r\n    { label: '消费预警', value: 'consumeAlarm' },\r\n];\r\nconst disabledDate = (current)=> {\r\n    return current && current < moment().endOf('day');\r\n}\r\n\r\nconst dateFormat = 'YYYY-MM-DD';\r\n\r\nconst studentStyle = { \r\n    width:258,height:58,borderRadius:4,\r\n    border:'1px dashed #d9d9d9',cursor:'pointer',\r\n    marginTop:-10,lineHeight:'20px',textAlign:'center'}\r\n\r\nclass AddOrEditPage extends Component {\r\n    state = {\r\n        visible: false,\r\n        selectedStudent:undefined,\r\n        editId:undefined,\r\n        editInfo:undefined\r\n    }\r\n    componentWillMount(){\r\n        let params = getHashParam();\r\n        if(params.id){\r\n            // let data = {id:params.id}\r\n            this.setState({editId:params.id},()=>{\r\n                //获取用户详细信息\r\n                let data =  {\r\n                    \"id\": \"c93692c0ca10464b919237de9eb2cc7a\",\r\n                    \"studentNo\": \"131594206\",\r\n                    \"missAlarm\": 1,\r\n                    \"networkAlarm\": 0,\r\n                    \"studyAlarm\": 1,\r\n                    \"consumeAlarm\": 0,\r\n                    \"remark\": \"1212\",\r\n                    \"startDate\": \"2018-09-14\",\r\n                    \"endDate\": \"2018-10-23\",\r\n                    \"name\": \"何志一\",\r\n                    \"gender\": \"男\",\r\n                    \"collegeName\": \"机械工程学院(联合培养)\"\r\n                };\r\n                let warnModule = [\r\n                    data.missAlarm===1?'missAlarm':null,\r\n                    data.networkAlarm===1?'networkAlarm':null,\r\n                    data.studyAlarm===1?'studyAlarm':null,\r\n                    data.consumeAlarm===1?'consumeAlarm':null\r\n                ].filter(item=>item!==null);\r\n                \r\n                let editInfo = Object.assign({},{ warnModule },data) || {};\r\n                this.setState({\r\n                    editInfo,\r\n                    selectedStudent:editInfo\r\n                })\r\n            })\r\n        }\r\n    }\r\n    chooseStudent = (selectedStudent) => {\r\n        this.setState({selectedStudent,visible:false})\r\n        this.props.form.setFieldsValue({studentNo: selectedStudent.studentNo})\r\n    }\r\n    saveAction = () => {\r\n        this.props.form.validateFields(\r\n            (err,values) => {\r\n                if (!err) {\r\n                    const { studentNo, remark, warnModule, rangePicker } = values;\r\n                    let missAlarm = warnModule.indexOf('missAlarm')>=0?1:0;\r\n                    let networkAlarm = warnModule.indexOf('networkAlarm')>=0?1:0;\r\n                    let studyAlarm = warnModule.indexOf('studyAlarm')>=0?1:0;\r\n                    let consumeAlarm = warnModule.indexOf('consumeAlarm')>=0?1:0;\r\n                    let data = {\r\n                        studentNo,\r\n                        missAlarm,\r\n                        networkAlarm,\r\n                        studyAlarm,\r\n                        consumeAlarm,\r\n                        remark,\r\n                        startDate:rangePicker[0].format(dateFormat),\r\n                        endDate:rangePicker[1].format(dateFormat)\r\n                    }\r\n                    if(this.state.editInfo){\r\n                        data.id = this.state.editInfo.id;\r\n                    }\r\n                    message.success('保存成功！',1,()=>{\r\n                        this.props.history.push('/mainframe/systemsetup/earlywarningsetting?whitelist')\r\n                    });\r\n                    \r\n                }\r\n            },\r\n        );\r\n    }\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form;\r\n        let editInfo = this.state.editInfo;\r\n        let selectedStudent = this.state.selectedStudent;\r\n        return (\r\n            <div>\r\n                <Breadcrumb className=\"breadcrumb\">\r\n                    <Breadcrumb.Item>综合预警</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>预警设置</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>预警白名单</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <div className=\"common-content\">\r\n                    <Card title={<div className=\"common-title\">{this.state.editId?'编辑个人白名单配置':'新增个人白名单配置'}</div>}>\r\n                        <FormItem {...formItemLayout} style={{paddingTop:10}} label=\"选择学生\">\r\n                            {getFieldDecorator('studentNo', {\r\n                                rules: [{\r\n                                    required: true,\r\n                                    message: '请选择学生！'\r\n                                }],\r\n                                initialValue: editInfo&&editInfo.studentNo,\r\n                            })(\r\n                                <Row type={'flex'} align={'middle'} justify={'center'} \r\n                                    style={studentStyle}\r\n                                    onClick={()=>this.setState({visible:true})}>\r\n                                    {selectedStudent?(\r\n                                        <div>\r\n                                            {selectedStudent.name} <br/>\r\n                                            {selectedStudent.studentNo}，{selectedStudent.collegeName}\r\n                                        </div>\r\n                                    ):(\r\n                                        <div><Icon type=\"plus\" /> 添加学生</div>\r\n                                    )}\r\n                                    \r\n                                </Row>\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem {...formItemLayout} label=\"选择不预警时间\">\r\n                            {getFieldDecorator('rangePicker', {\r\n                                rules: [{\r\n                                    type: 'array',\r\n                                    required: true,\r\n                                    message: '请选择不预警时间！'\r\n                                }],\r\n                                initialValue: editInfo&&[moment(editInfo.startDate, dateFormat),moment(editInfo.endDate, dateFormat)]\r\n                            })(\r\n                                <RangePicker style={{width:398}} \r\n                                disabledDate={disabledDate}/>\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem {...formItemLayout} label=\"关联模块\">\r\n                            {getFieldDecorator('warnModule', {\r\n                                rules: [{\r\n                                    type: 'array',\r\n                                    required: true,\r\n                                    message: '请选择关联模块！'\r\n                                }],\r\n                                initialValue: editInfo&&editInfo.warnModule\r\n                            })(\r\n                                <Checkbox.Group>\r\n                                    {warnModules.map(item=>(\r\n                                        <div style={{paddingTop:10}} key={item.value}><Checkbox value={item.value}>{item.label}</Checkbox></div>\r\n                                    ))}\r\n                                </Checkbox.Group>\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem {...formItemLayout} label=\"备注\">\r\n                            {getFieldDecorator('remark',{\r\n                                initialValue: editInfo&&editInfo.remark\r\n                            })(\r\n                                <Input.TextArea style={{width:398,height:138,resize:'none'}} maxLength=\"50\" />\r\n                            )}\r\n                        </FormItem>\r\n                        <Row>\r\n                            <Col {...formItemLayout.labelCol}></Col>\r\n                            <Col {...formItemLayout.wrapperCol}>\r\n                                <Button size=\"large\" type=\"primary\" style={{marginRight:20}} onClick={this.saveAction}>{'保 存'}</Button>\r\n                                <Button size=\"large\" onClick={()=>{\r\n                                    this.props.history.push('/mainframe/systemsetup/earlywarningsetting?whitelist')\r\n                                }}>{'返 回'}</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                </div>\r\n                {this.state.visible?(\r\n                    <ChooseStudentModel title={'选择学生'}\r\n                        visible={this.state.visible}\r\n                        selectedStudent={this.state.selectedStudent}\r\n                        onCancel={()=>this.setState({visible:false})}\r\n                        onOk={this.chooseStudent}/>\r\n                ):null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst AddOrEditPageForm = Form.create()(AddOrEditPage);\r\nexport default withRouter(AddOrEditPageForm);"],"sourceRoot":""}