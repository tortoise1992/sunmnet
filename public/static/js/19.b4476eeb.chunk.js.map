{"version":3,"sources":["common/components/Table/index.js","pages/SystemSetup/EarlyWarningSetting/WhiteListConfig/Holiday/ChooseStrategyTargetModel.js","pages/SystemSetup/EarlyWarningSetting/WhiteListConfig/Holiday/AddOrEditPage.js"],"names":["TableComp","page","this","props","changePage","Object","assign","pagination","paginationStyle","marginTop","textAlign","react__WEBPACK_IMPORTED_MODULE_9___default","a","createElement","antd_es_table__WEBPACK_IMPORTED_MODULE_3__","total","antd_es_pagination__WEBPACK_IMPORTED_MODULE_1__","style","showQuickJumper","defaultCurrent","current","defaultPageSize","pageSize","showTotal","concat","onChange","bind","undefined","Component","columns","title","dataIndex","width","render","text","_react_16_6_3_react_default","record","startDate","endDate","badge","es_badge","status","ChooseStudentModel","state","pageNum","dataLists","strategyName","selectedRowKeys","selectedRows","visible","getData","id","strategyTarget","removeFlag","strategyTargetCollege","_this","setState","length","onOk","message","warn","rowClick","key","onSelectChange","selectedTarget","_this2","dataSource","forEach","item","index","rowSelection","type","columnWidth","MainModal","onCancel","centered","row","marginBottom","col","span","input","placeholder","value","e","target","es_button","icon","onClick","Table","bordered","size","onRow","FormItem","es_form","Item","RangePicker","date_picker","formItemLayout","labelCol","wrapperCol","paddingLeft","disabledDate","moment","endOf","dateFormat","studentStyle","height","borderRadius","border","cursor","lineHeight","AddOrEditPage","editId","editInfo","rangePickerValue","chooseStudent","split","form","setFieldsValue","strategyId","saveAction","validateFields","err","values","remark","strategyDate","flag","setFields","errors","Error","dateArr","JSON","parse","stringify","push","format","date","map","join","data","success","history","addStrategyDate","getFieldValue","addDate","isExist","error","changeRangePicker","deletestrategyDate","changestrategyDate","filter","params","getHashParam","createDate","updateDate","_this3","getFieldDecorator","breadcrumb","className","card","paddingTop","label","rules","initialValue","align","justify","tag","color","Fragment","marginLeft","TextArea","resize","maxLength","marginRight","ChooseStrategyTargetModel","AddOrEditPageForm","create","withRouter"],"mappings":"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","file":"static/js/19.b4476eeb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Table, Pagination } from 'antd';\r\n\r\nclass TableComp extends Component {\r\n    changePage(page){\r\n        if(this.props.changePage){\r\n            this.props.changePage(page)\r\n        }\r\n    }\r\n    render() {\r\n        let props = Object.assign({},this.props,{\r\n            pagination:false\r\n        })\r\n        let paginationStyle = Object.assign({},{marginTop:20,textAlign:'right'},(this.props.paginationStyle || {}))\r\n        return (\r\n            <div>\r\n                <Table {...props} />\r\n                {(this.props.pagination && this.props.total)?(<Pagination \r\n                    style={paginationStyle}\r\n                    showQuickJumper \r\n                    defaultCurrent={1}\r\n                    current={this.props.current}\r\n                    defaultPageSize={this.props.defaultPageSize || 10}\r\n                    pageSize={this.props.pageSize || 10}\r\n                    showTotal={(total) => `共${total}条数据`}\r\n                    total={this.props.total}\r\n                    onChange={this.changePage.bind(this)}/>):undefined}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TableComp;","import React, { Component } from 'react'\r\nimport { Button, Input, Row, Col, message, Badge } from 'antd'\r\nimport MainModal from '@/common/components/MainModal'\r\nimport Table from '@/common/components/Table'\r\n\r\nlet columns = [{\r\n    title: '序号',\r\n    dataIndex: 'index',\r\n    width: \"8%\"\r\n}, {\r\n    title: '预警策略名称',\r\n    dataIndex: 'strategyName',\r\n    width: \"20%\",\r\n    render: (text) => {\r\n    \treturn (\r\n    \t\t<span title={text}>{text}</span>\r\n    \t)\r\n    }\r\n}, {\r\n    title: '预警策略对象',\r\n    dataIndex: 'strategyTargetCollege',\r\n    render: (text) => {\r\n    \treturn (\r\n    \t\t<span title={text}>{text}</span>\r\n    \t)\r\n    }\r\n}, {\r\n    title: '预警策略时间',\r\n    dataIndex: 'dateTime',\r\n    width: \"20%\",\r\n    render:(text,record)=>{\r\n        return record.startDate + '~' + record.endDate;\r\n    }\r\n}, {\r\n    title: '状态',\r\n    dataIndex: 'status',\r\n    width: \"10%\",\r\n    render: (text, record)=>{\r\n        let badge;\r\n        if(text==='生效'){\r\n            badge = <Badge status=\"processing\" />\r\n        } else if(text==='未生效'){\r\n            badge = <Badge status=\"success\" />\r\n        } else {\r\n            badge = <Badge status=\"default\" />\r\n        }\r\n        return <span>{badge}{text}</span>;\r\n    }\r\n}];\r\n\r\nclass ChooseStudentModel extends Component {\r\n    state = {\r\n        pageNum: 1,\r\n        pageSize: 8,\r\n        total: 0,\r\n        dataLists: [],\r\n        strategyName: undefined,\r\n        selectedRowKeys:[],\r\n        selectedRows:[],\r\n        visible:false\r\n    }\r\n    componentWillMount(){\r\n        if(this.props.selectedTarget){\r\n            this.setState({\r\n                selectedRowKeys:[this.props.selectedTarget.id],\r\n                selectedRows:[this.props.selectedTarget]\r\n            })\r\n        }\r\n        this.getData();\r\n    }\r\n    getData = () => {\r\n        const dataLists = [\r\n            {\r\n                \"id\": \"5c93cd02d85c4806a0f01c23175d1fe3\",\r\n                \"strategyName\": \"预警配置列表根据时间降序\",\r\n                \"strategyTarget\": \"40060\",\r\n                \"startDate\": \"2018-09-19\",\r\n                \"endDate\": \"2018-09-21\",\r\n                \"removeFlag\": 0,\r\n                \"status\": \"未开始\",\r\n                \"strategyTargetCollege\": \"通信工程学院\"\r\n            }\r\n        ]\r\n        this.setState({\r\n            dataLists,\r\n            total:dataLists.length,\r\n            visible:true\r\n        })\r\n    }\r\n    onOk = ()=> {\r\n        if(this.state.selectedRows[0]){\r\n            this.props.onOk(this.state.selectedRows[0])\r\n        } else {\r\n            message.warn('请选择预警策略！')\r\n        }\r\n    }\r\n    changePage = (page)=> {\r\n        this.setState({pageNum:page},()=>this.getData())\r\n    }\r\n    rowClick = (record) => {\r\n        this.setState({\r\n            selectedRowKeys: [record.key],\r\n            selectedRows: [record]\r\n        })\r\n    }\r\n    onSelectChange = (selectedRowKeys, selectedRows) => {\r\n        this.setState({ selectedRowKeys, selectedRows });\r\n    }\r\n    render() {\r\n        const dataSource = this.state.dataLists || [];\r\n        dataSource.forEach((item,index)=>{\r\n            dataSource[index].key = item.id;\r\n            dataSource[index].index = index + 1;\r\n        })\r\n\r\n        const selectedRowKeys = this.state.selectedRowKeys;\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            type: 'radio',\r\n            columnWidth: \"0px\",\r\n            onChange: this.onSelectChange,\r\n        };\r\n        if(this.state.visible){\r\n            return (\r\n                <MainModal\r\n                    title={this.props.title}\r\n                    visible={true}\r\n                    onCancel={this.props.onCancel}\r\n                    centered\r\n                    onOk={this.onOk}\r\n                    width={1004}\r\n                >\r\n                    <Row style={{marginBottom:24}}>\r\n                        <Col span={9}>\r\n                            预警策略名称：<Input style={{width:246}} placeholder={'请输入预警策略名称'} value={this.state.strategyName} \r\n                                onChange={(e)=>this.setState({strategyName:e.target.value})}/>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Button icon=\"search\" type=\"primary\" onClick={this.getData}>搜 索</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Table dataSource={dataSource} \r\n                        bordered\r\n                        rowSelection={rowSelection}\r\n                        columns={columns}\r\n                        current={this.state.pageNum}\r\n                        pagination\r\n                        paginationStyle={{textAlign:'right'}}\r\n                        size=\"small\"\r\n                        total={this.state.total}\r\n                        changePage={this.changePage}\r\n                        onRow={(record, index) => {\r\n                            return {\r\n                                onClick: () => this.rowClick(record, index),// 点击行\r\n                            };\r\n                        }} />\r\n                </MainModal>\r\n            )\r\n        } else {\r\n            return (<div></div>)\r\n        }\r\n        \r\n    }\r\n}\r\nexport default ChooseStudentModel;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Breadcrumb, Card, Form, DatePicker, Input, Button, Icon, Row, Col, message, Tag } from 'antd';\r\nimport ChooseStrategyTargetModel from './ChooseStrategyTargetModel'\r\nimport moment from 'moment';\r\nimport { getHashParam } from '../../../../../utils'\r\n\r\nconst FormItem = Form.Item;\r\nconst RangePicker = DatePicker.RangePicker;\r\n\r\nconst formItemLayout = {\r\n    labelCol: { span: 10},\r\n    wrapperCol: { span: 14, style:{paddingLeft:'10px'}},\r\n};\r\n\r\nconst disabledDate = (current)=> {\r\n    return current && current < moment().endOf('day');\r\n}\r\n\r\nconst dateFormat = 'YYYY-MM-DD';\r\n\r\nconst studentStyle = { \r\n    width:258,height:58,borderRadius:4,\r\n    border:'1px dashed #d9d9d9',cursor:'pointer',\r\n    marginTop:-10,lineHeight:'20px',textAlign:'center'}\r\n\r\nclass AddOrEditPage extends Component {\r\n    state = {\r\n        visible: false,\r\n        selectedTarget:undefined,\r\n        editId:undefined,\r\n        editInfo:undefined,\r\n        rangePickerValue:[]\r\n    }\r\n    componentWillMount(){\r\n        let params = getHashParam();\r\n        if(params.id){\r\n            // let data = {id:params.id}\r\n            this.setState({editId:params.id},()=>{\r\n                //获取用户详细信息\r\n                const obj = {\r\n                    \"id\": \"519ad5a12dea47a4997da7abf160734b\",\r\n                    \"strategyId\": \"01816d0dd27f4da9816c7003b7ae3aed\",\r\n                    \"strategyTarget\": \"40070,40050,40141,40020\",\r\n                    \"strategyDate\": \"2018-09-13~2018-09-21,2018-09-11~2018-09-12\",\r\n                    \"remark\": \"handle_remarkhandle_remark\",\r\n                    \"createDate\": \"2018-09-10\",\r\n                    \"updateDate\": \"2018-09-10\",\r\n                    \"strategyName\": \"预警策略名称重复校验\",\r\n                    \"strategyTargetCollege\": \"计算机工程学院、自动化学院、外国语学院、材料工程学院\",\r\n                }\r\n                let editInfo = Object.assign({},obj) || {};\r\n                let selectedTarget = {\r\n                    id: editInfo.strategyId,\r\n                    strategyName: editInfo.strategyName,\r\n                    strategyTarget: editInfo.strategyTarget,\r\n                    strategyTargetCollege: editInfo.strategyTargetCollege,\r\n                    strategyDate: editInfo.strategyDate\r\n                }\r\n                let strategyDate = editInfo.strategyDate.split(',').map(item=>{\r\n                    return {\r\n                        startDate: item.split('~')[0],\r\n                        endDate: item.split('~')[1]\r\n                    }\r\n                })\r\n                let strategyTargetCollege = editInfo.strategyTargetCollege?selectedTarget.strategyTargetCollege.split('、'):[];\r\n                this.setState({\r\n                    editInfo,\r\n                    selectedTarget\r\n                })\r\n                this.props.form.setFieldsValue({\r\n                    strategyDate,\r\n                    strategyTargetCollege\r\n                })\r\n            })\r\n        }\r\n    }\r\n    chooseStudent = (selectedTarget) => {\r\n        this.setState({selectedTarget,visible:false})\r\n        let strategyTargetCollege = selectedTarget.strategyTargetCollege?selectedTarget.strategyTargetCollege.split('、'):[];\r\n        this.props.form.setFieldsValue({\r\n            strategyId: selectedTarget.id,\r\n            strategyTargetCollege\r\n        })\r\n    }\r\n    saveAction = () => {\r\n        this.props.form.validateFields(\r\n            (err,values) => {\r\n                if (!err) {\r\n                    const { strategyId, remark, strategyDate } = values;\r\n                    let flag = true;\r\n                    //判断是否选择关联的预警策略\r\n                    if(!strategyId){\r\n                        this.props.form.setFields({\r\n                            strategyId: {\r\n                                errors: [new Error('请选择关联的预警策略！')],\r\n                            },\r\n                        });\r\n                        flag = false;\r\n                    }\r\n                    //判断是否选择不预警时间\r\n                    if((!strategyDate || strategyDate.length===0) && this.state.rangePickerValue.length===0){\r\n                        this.props.form.setFields({\r\n                            strategyDate: {\r\n                                errors: [new Error('请选择不预警时间！')],\r\n                            },\r\n                        });\r\n                        flag = false;\r\n                    }\r\n                    if(!flag){ //如果不通过验证不能继续执行提交\r\n                        return;\r\n                    }\r\n                    //获取预警时间\r\n                    let dateArr = JSON.parse(JSON.stringify(strategyDate)) || [];\r\n                    if(this.state.rangePickerValue.length>0){\r\n                        dateArr.push({\r\n                            startDate:this.state.rangePickerValue[0].format(dateFormat),\r\n                            endDate:this.state.rangePickerValue[1].format(dateFormat)\r\n                        })\r\n                    }\r\n                    let date = dateArr.map(item=>{\r\n                        return item.startDate + '~' + item.endDate;\r\n                    }).join(',');\r\n                    let data = {\r\n                        strategyId,\r\n                        strategyTarget:this.state.selectedTarget.strategyTarget,\r\n                        remark,\r\n                        strategyDate:date\r\n                    }\r\n                    // let url = '/bigdata/alarmWhitelist/insertAlarmHolidayWhitelist';\r\n                    if(this.state.editInfo){ //编辑时\r\n                        // url = '/bigdata/alarmWhitelist/updateAlarmHolidayWhitelist';\r\n                        data.id = this.state.editInfo.id;\r\n                    }\r\n                    message.success('保存成功！',1,()=>{\r\n                        this.props.history.push('/mainframe/systemsetup/earlywarningsetting?whitelist')\r\n                    });\r\n                    \r\n                }\r\n            },\r\n        );\r\n    }\r\n    addStrategyDate = () => {\r\n        let rangePickerValue = this.state.rangePickerValue;\r\n        if(rangePickerValue && rangePickerValue.length>0){\r\n            let strategyDate = this.props.form.getFieldValue('strategyDate') || [];\r\n            let addDate = {\r\n                startDate:rangePickerValue[0].format(dateFormat),\r\n                endDate:rangePickerValue[1].format(dateFormat)\r\n            }\r\n            let isExist = false;\r\n            strategyDate.forEach(item=>{\r\n                if(item.startDate===addDate.startDate && item.endDate===addDate.endDate){\r\n                    isExist = true \r\n                }\r\n            })\r\n            if(isExist){\r\n                message.error('所选日期重复！');\r\n                return;\r\n            }\r\n            strategyDate.push(addDate)\r\n            this.props.form.setFieldsValue({\r\n                strategyDate\r\n            })\r\n            this.setState({rangePickerValue:[]})\r\n        } else {\r\n            message.error('请选择日期范围！')\r\n        }\r\n        \r\n    }\r\n    changeRangePicker = (values)=>{\r\n        this.setState({rangePickerValue:values})\r\n        //判断不预警时间是否为空\r\n        let strategyDate = this.props.form.getFieldValue('strategyDate') || [];\r\n        if((!strategyDate || strategyDate.length===0) && values.length===0){\r\n            this.props.form.setFields({\r\n                strategyDate: {\r\n                    errors: [new Error('请选择不预警时间！')],\r\n                },\r\n            });\r\n        } else {\r\n            this.props.form.validateFields();\r\n        }\r\n    }\r\n    deletestrategyDate = (item,index)=> {\r\n        let strategyDate = this.props.form.getFieldValue('strategyDate') || [];\r\n        let changestrategyDate = strategyDate.filter((a)=>{\r\n            return !(a.startDate===item.startDate && a.endDate===item.endDate)\r\n        });\r\n        this.props.form.setFieldsValue({\r\n            strategyDate:changestrategyDate\r\n        })\r\n    }\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form;\r\n        let editInfo = this.state.editInfo;\r\n        let selectedTarget = this.state.selectedTarget;\r\n        let strategyTargetCollege = this.props.form.getFieldValue('strategyTargetCollege') || [];\r\n        let strategyDate = this.props.form.getFieldValue('strategyDate') || [];\r\n        // console.log(strategyDate)\r\n        return (\r\n            <div>\r\n                <Breadcrumb className=\"breadcrumb\">\r\n                    <Breadcrumb.Item>综合预警</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>预警设置</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>预警白名单</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <div className=\"common-content\">\r\n                    <Card title={<div className=\"common-title\">{this.state.editId?'编辑节假日白名单配置':'新增节假日白名单配置'}</div>}>\r\n                        <FormItem {...formItemLayout} style={{paddingTop:10}} label=\"选择关联的预警策略\">\r\n                            {getFieldDecorator('strategyId', {\r\n                                rules: [{\r\n                                    message: '请选择关联的预警策略！'\r\n                                }],\r\n                                initialValue: editInfo&&editInfo.strategyId,\r\n                            })(\r\n                                <Row type={'flex'} align={'middle'} justify={'center'} \r\n                                    style={studentStyle}\r\n                                    onClick={()=>this.setState({visible:true})}>\r\n                                    {selectedTarget?(\r\n                                        <div>\r\n                                            {selectedTarget.strategyName}\r\n                                        </div>\r\n                                    ):(\r\n                                        <div><Icon type=\"plus\" /> 选择关联的预警策略</div>\r\n                                    )}\r\n                                    \r\n                                </Row>\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem {...formItemLayout} label=\"不预警学院\">\r\n                            {getFieldDecorator('strategyTargetCollege', {\r\n                                rules: [{\r\n                                    type: 'array',\r\n                                }]\r\n                            })(\r\n                                <div>\r\n                                    {strategyTargetCollege.map((item,index)=>(\r\n                                        <Tag \r\n                                            style={{height:28,lineHeight:'28px',color:'#4a4a4a'}}\r\n                                            key={index}>{item}</Tag>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem {...formItemLayout} label=\"选择不预警时间\">\r\n                            {getFieldDecorator('strategyDate', {\r\n                                rules: [{\r\n                                    type: 'array',\r\n                                    message: '请选择不预警时间！'\r\n                                }]\r\n                            })(\r\n                                <React.Fragment>\r\n                                    <div>\r\n                                        <RangePicker style={{width:398}} \r\n                                            disabledDate={disabledDate} value={this.state.rangePickerValue} onChange={this.changeRangePicker}/>\r\n                                        <Icon type=\"plus-circle-o\" style={{marginLeft:10,cursor:'pointer'}} onClick={this.addStrategyDate} />\r\n                                    </div>\r\n                                    <div>\r\n                                        {strategyDate.map((item,index)=>(\r\n                                            <div key={index}>\r\n                                                <Tag style={{height:28,lineHeight:'28px',color:'#4a4a4a'}} >\r\n                                                    {item.startDate+'~'+item.endDate} \r\n                                                    <Icon type=\"close\" \r\n                                                        style={{marginLeft:5,color:'rgba(0, 0, 0, 0.45)'}} \r\n                                                        onClick={()=>this.deletestrategyDate(item,index)}/>\r\n                                                </Tag>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </React.Fragment>\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem {...formItemLayout} label=\"备注\">\r\n                            {getFieldDecorator('remark',{\r\n                                initialValue: editInfo&&editInfo.remark\r\n                            })(\r\n                                <Input.TextArea style={{width:398,height:138,resize:'none'}} maxLength=\"50\" />\r\n                            )}\r\n                        </FormItem>\r\n                        <Row>\r\n                            <Col {...formItemLayout.labelCol}></Col>\r\n                            <Col {...formItemLayout.wrapperCol}>\r\n                                <Button size=\"large\" type=\"primary\" style={{marginRight:20}} onClick={this.saveAction}>{'保 存'}</Button>\r\n                                <Button size=\"large\" onClick={()=>{\r\n                                    this.props.history.push('/mainframe/systemsetup/earlywarningsetting?whitelist')\r\n                                }}>{'返 回'}</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                </div>\r\n                {this.state.visible?(\r\n                    <ChooseStrategyTargetModel title={'选择预警策略'}\r\n                        visible={this.state.visible}\r\n                        selectedTarget={this.state.selectedTarget}\r\n                        onCancel={()=>this.setState({visible:false})}\r\n                        onOk={this.chooseStudent}/>\r\n                ):null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst AddOrEditPageForm = Form.create()(AddOrEditPage);\r\nexport default withRouter(AddOrEditPageForm);"],"sourceRoot":""}